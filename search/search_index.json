{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>UiPath TS SDK is a lightweight and versatile toolkit for building modern frontend applications with your favorite Node.js framework. It enables you to create process portals, monitoring dashboards, and other interactive apps that connect seamlessly with UiPath services.</p> <p>Designed to run in both Node.js and browser environments, the SDK makes it simple to integrate UiPath into your applications. The SDK is designed to be easy to adopt even for LLM-assisted or \u201cvibe coding\u201d.</p>"},{"location":"#get-started-building","title":"Get started building:","text":"<ol> <li>Install the SDK - Add to your project with npm/yarn</li> <li>Set up Authentication - Connect to UiPath Cloud  </li> <li>Start Building - Jump into examples and guides</li> </ol>"},{"location":"CONTRIBUTING/","title":"How to Contribute","text":"<p>Thank you for your interest in contributing to the UiPath TypeScript SDK! We welcome contributions from the community.</p>"},{"location":"CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally</li> <li>Create a feature branch from <code>main</code></li> <li>Make your changes and test them</li> <li>Submit a pull request</li> </ol>"},{"location":"CONTRIBUTING/#development-setup","title":"Development Setup","text":"<pre><code># Clone your fork\ngit clone https://github.com/your-username/uipath-typescript.git\ncd uipath-typescript\n\n# Install dependencies\nnpm install\n\n# Build the project\nnpm run build\n</code></pre>"},{"location":"CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":""},{"location":"CONTRIBUTING/#code-style","title":"Code Style","text":"<ul> <li>Follow existing code patterns and conventions</li> <li>Use TypeScript for type safety</li> <li>Include JSDoc comments for public APIs</li> <li>Ensure proper error handling</li> </ul>"},{"location":"CONTRIBUTING/#documentation","title":"Documentation","text":"<ul> <li>Update relevant documentation</li> <li>Include code examples</li> <li>Document breaking changes</li> <li>Update TypeScript definitions</li> </ul>"},{"location":"CONTRIBUTING/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Ensure your code builds without warnings</li> <li>Update documentation as needed</li> <li>Write clear commit messages</li> <li>Submit your pull request with a detailed description</li> </ol>"},{"location":"CONTRIBUTING/#reporting-issues","title":"Reporting Issues","text":"<p>When reporting bugs or requesting features:</p> <ul> <li>Use the issue templates provided</li> <li>Include clear steps to reproduce</li> <li>Provide environment details</li> <li>Include relevant code examples</li> </ul>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>We expect all contributors to follow professional standards:</p> <ul> <li>Be respectful and inclusive</li> <li>Focus on constructive feedback</li> <li>Help maintain a welcoming environment</li> <li>Follow GitHub's community guidelines</li> </ul>"},{"location":"CONTRIBUTING/#questions","title":"Questions?","text":"<p>If you have questions about contributing:</p> <ul> <li>Check existing issues and discussions</li> <li>Create a new issue with the \"question\" label</li> <li>Join our community discussions</li> </ul> <p>We appreciate your contributions to making the UiPath TypeScript SDK better!</p>"},{"location":"FAQ/","title":"Frequently Asked Questions","text":""},{"location":"FAQ/#cors-issues","title":"CORS Issues","text":"<p>Problem: When developing locally and making requests to UiPath APIs, you may encounter CORS (Cross-Origin Resource Sharing) errors. This happens because browsers block requests from your local development server (e.g., <code>http://localhost:3000</code>) to external APIs due to same-origin policy restrictions.</p> <p>Solution: Configure a proxy in your development server to forward API requests and avoid CORS issues.</p> <p>For example, if you are using Vite, you could add the following proxy configuration to your <code>vite.config.ts</code>:</p> <pre><code>import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n    proxy: {\n      // Replace '/your-org' with your actual organization/tenant path\n      '/your-org': {\n        target: 'https://cloud.uipath.com',\n        changeOrigin: true,\n        secure: true,\n      },\n    },\n  },\n})\n</code></pre> <p>Usage:  - Use <code>window.location.origin</code> as your base URL in your application - Replace <code>/your-org</code> with your actual UiPath organization/tenant path</p>"},{"location":"FAQ/#authentication-errors","title":"Authentication Errors","text":"<p>Problem: During authentication, you may encounter errors related to invalid redirect URIs, scopes, or other configuration issues.</p> <p>Error URL Example:  <pre><code>https://cloud.uipath.com/identity_/web/?errorCode=invalid_request&amp;errorId=eyJDcmWRpcmVjdFVyaSI6bnVsbCwiUmVzcG9uc2VNb2RlIjpudWxsLCJDbGllbnRJZCI6IjhmZjMyM2FlLTAwZTEtNDU2NC1hOGMyLWVmZDg0YWY2Njc1MiJ9fQ\n</code></pre></p> <p>Solution:  1. Extract the Error Details:    - Copy the <code>errorId</code> value from the URL (the long encoded string after <code>errorId=</code>)    - Go to jwt.io    - Paste the <code>errorId</code> value into the \"Encoded\" section    - The decoded payload will show you the specific error details</p> <ol> <li>Example Decoded Error: <pre><code>{\n  \"Created\": 638900000000000000,\n  \"Data\": {\n    \"DisplayMode\": null,\n    \"UiLocales\": null,\n    \"Error\": \"invalid_request\",\n    \"ErrorDescription\": \"Invalid redirect_uri\",\n    \"RequestId\": \"ABC123XYZ:00000001\",\n    \"ActivityId\": \"00-11111111111111111111111111111111-2222222222222222-01\",\n    \"RedirectUri\": null,\n    \"ResponseMode\": null,\n    \"ClientId\": \"00000000-0000-0000-0000-000000000000\"\n  }\n}\n</code></pre></li> </ol>"},{"location":"authentication/","title":"Authentication","text":"<p>The SDK supports two authentication methods:</p>"},{"location":"authentication/#oauth-authentication-recommended","title":"OAuth Authentication (Recommended)","text":"<p>For OAuth, first create a non confidential External App.</p> <ol> <li>In UiPath Cloud: Admin \u2192 External Applications</li> <li>Click Add Application \u2192 Non Confidential Application</li> <li>Configure:</li> </ol> <ul> <li>Name: Your app name</li> <li>Redirect URI: For eg, <code>http://localhost:3000</code> (for development)</li> <li>Scopes: Select permissions you need (see scopes guide)</li> </ul> <ol> <li>Save and copy the Client ID</li> </ol> <pre><code>const sdk = new UiPath({\n  baseUrl: 'https://cloud.uipath.com',\n  orgName: 'your-organization',\n  tenantName: 'your-tenant',\n  clientId: 'your-client-id',\n  redirectUri: 'your-redirect-uri',\n  scope: 'your-scopes'\n});\n\n// IMPORTANT: OAuth requires calling initialize()\nawait sdk.initialize();\n</code></pre>"},{"location":"authentication/#secret-based-authentication","title":"Secret-based Authentication","text":"<pre><code>const sdk = new UiPath({\n  baseUrl: 'https://cloud.uipath.com',\n  orgName: 'your-organization',\n  tenantName: 'your-tenant',\n  secret: 'your-secret' //PAT Token or Bearer Token \n});\n</code></pre> <p>To Generate a PAT Token:</p> <ol> <li>Log in to UiPath Cloud</li> <li>Go to User Profile \u2192 Preferences \u2192 Personal Access Token</li> <li>Click Create Token</li> <li>Give it a name and expiration date</li> <li>Provide relevant scopes</li> </ol>"},{"location":"authentication/#sdk-initialization-the-initialize-method","title":"SDK Initialization - The initialize() Method","text":""},{"location":"authentication/#when-to-use-initialize","title":"When to Use initialize()","text":"<p>The <code>initialize()</code> method completes the authentication process for the SDK:</p> <ul> <li>Secret Authentication: Auto-initializes when creating the SDK instance - no need to call initialize()</li> <li>OAuth Authentication: MUST call <code>await sdk.initialize()</code> before using any SDK services</li> </ul>"},{"location":"authentication/#example-secret-authentication-auto-initialized","title":"Example: Secret Authentication (Auto-initialized)","text":"<pre><code>const sdk = new UiPath({\n  baseUrl: 'https://cloud.uipath.com',\n  orgName: 'your-organization',\n  tenantName: 'your-tenant',\n  secret: 'your-secret' //PAT Token or Bearer Token \n});\n\n// Ready to use immediately - no initialize() needed\nconst tasks = await sdk.tasks.getAll();\n</code></pre>"},{"location":"authentication/#example-oauth-authentication-requires-initialize","title":"Example: OAuth Authentication (Requires initialize)","text":"<pre><code>const sdk = new UiPath({\n  baseUrl: 'https://cloud.uipath.com',\n  orgName: 'your-organization',\n  tenantName: 'your-tenant',\n  clientId: 'your-client-id',\n  redirectUri: 'http://localhost:3000',\n  scope: 'your-scopes'\n});\n\n// Must initialize before using services\ntry {\n  await sdk.initialize();\n  console.log('SDK initialized successfully');\n\n  // Now you can use the SDK\n  const tasks = await sdk.tasks.getAll();\n} catch (error) {\n  console.error('Failed to initialize SDK:', error);\n}\n</code></pre>"},{"location":"authentication/#oauth-integration-patterns","title":"OAuth Integration Patterns","text":""},{"location":"authentication/#auto-login-on-app-load","title":"Auto-login on App Load","text":"<pre><code>useEffect(() =&gt; {\n  const initSDK = async () =&gt; {\n    const sdk = new UiPath({...oauthConfig});\n    await sdk.initialize();\n  };\n  initSDK();\n}, []);\n</code></pre>"},{"location":"authentication/#user-triggered-login","title":"User-Triggered Login","text":"<pre><code>const onLogin = async () =&gt; {\n  await sdk.initialize();\n};\n\n// Handle OAuth callback\nconst oauthCompleted = useRef(false);\nuseEffect(() =&gt; {\n  if (sdk.isInitialized() &amp;&amp; !oauthCompleted.current) {\n    oauthCompleted.current = true;\n    sdk.completeOAuth();\n  }\n}, []);\n</code></pre>"},{"location":"authentication/#available-oauth-methods","title":"Available OAuth Methods","text":"<ul> <li><code>sdk.initialize()</code> - Start OAuth flow (auto completes also based on callback state)</li> <li><code>sdk.isInitialized()</code> - Check if SDK initialization completed</li> <li><code>sdk.isAuthenticated()</code> - Check if user has valid token</li> <li><code>sdk.isInOAuthCallback()</code> - Check if processing OAuth redirect</li> <li><code>sdk.completeOAuth()</code> - Manually complete OAuth (advanced use)</li> </ul>"},{"location":"authentication/#quick-test-script","title":"Quick Test Script","text":"<p>Create <code>.env</code> file: <pre><code># .env\nUIPATH_BASE_URL=https://cloud.uipath.com\nUIPATH_ORG_NAME=your-organization-name\nUIPATH_TENANT_NAME=your-tenant-name\nUIPATH_SECRET=your-pat-token\n</code></pre></p> <p>Verify your authentication setup:</p> <pre><code>// test-auth.ts\nimport 'dotenv/config';\nimport { UiPath } from '@uipath/uipath-typescript';\n\nasync function testAuthentication() {\n  const sdk = new UiPath({\n    baseUrl: process.env.UIPATH_BASE_URL!,\n    orgName: process.env.UIPATH_ORG_NAME!,\n    tenantName: process.env.UIPATH_TENANT_NAME!,\n    secret: process.env.UIPATH_SECRET!\n  });\n\n  try {\n    // Test with a simple API call\n    const assets = await sdk.assets.getAll();\n    console.log('\ud83c\udf89 Authentication successful!');\n    console.log(`\u2705 Connected to ${process.env.UIPATH_ORG_NAME}/${process.env.UIPATH_TENANT_NAME}`);\n    console.log(`\u2705 Found ${assets.length} assets`);\n\n  } catch (error) {\n    console.error('\u274c Authentication failed:');\n    console.error(error.message);\n  }\n}\n\ntestAuthentication();\n</code></pre> <p>Run it: <code>npx ts-node test-auth.ts</code></p>"},{"location":"error-handling/","title":"Error Handling","text":"<p>The SDK provides a comprehensive error handling system that helps you handle different types of errors gracefully and get meaningful error information for debugging.</p>"},{"location":"error-handling/#error-types","title":"Error Types","text":"<p>The SDK defines several specific error types that inherit from a base <code>UiPathError</code> class:</p>"},{"location":"error-handling/#authenticationerror","title":"<code>AuthenticationError</code>","text":"<p>Thrown when authentication fails (401 status codes).</p> <p>Common scenarios: - Invalid credentials - Expired token - Missing authentication</p> <pre><code>import { AuthenticationError, isAuthenticationError } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.initialize();\n} catch (error) {\n  if (isAuthenticationError(error)) {\n    console.log('Authentication failed:', error.message);\n    // Handle re-authentication\n  }\n}\n</code></pre>"},{"location":"error-handling/#authorizationerror","title":"<code>AuthorizationError</code>","text":"<p>Thrown when access is denied (403 status codes).</p> <p>Common scenarios: - Insufficient permissions - Access denied to specific folder - Scope limitations</p> <pre><code>import { AuthorizationError, isAuthorizationError } from '@uipath/uipath-typescript';\n\ntry {\n  const assets = await sdk.assets.getAll({ folderId: 12345 });\n} catch (error) {\n  if (isAuthorizationError(error)) {\n    console.log('Access denied:', error.message);\n    // Handle permission error\n  }\n}\n</code></pre>"},{"location":"error-handling/#validationerror","title":"<code>ValidationError</code>","text":"<p>Thrown when validation fails (400 status codes).</p> <p>Common scenarios: - Invalid input parameters - Missing required fields - Invalid data format</p> <pre><code>import { ValidationError, isValidationError } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.processes.start({\n    releaseKey: 'invalid-key'\n  });\n} catch (error) {\n  if (isValidationError(error)) {\n    console.log('Validation failed:', error.message);\n    // Handle validation errors\n  }\n}\n</code></pre>"},{"location":"error-handling/#notfounderror","title":"<code>NotFoundError</code>","text":"<p>Thrown when requested resources are not found (404 status codes).</p> <p>Common scenarios: - Resource doesn't exist - Folder not found - Process not found</p> <pre><code>import { NotFoundError, isNotFoundError } from '@uipath/uipath-typescript';\n\ntry {\n  const asset = await sdk.assets.getById(99999);\n} catch (error) {\n  if (isNotFoundError(error)) {\n    console.log('Asset not found:', error.message);\n    // Handle missing resource\n  }\n}\n</code></pre>"},{"location":"error-handling/#ratelimiterror","title":"<code>RateLimitError</code>","text":"<p>Thrown when rate limits are exceeded (429 status codes).</p> <p>Common scenarios: - Too many requests - API rate limiting</p> <pre><code>import { RateLimitError, isRateLimitError } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.assets.getAll();\n} catch (error) {\n  if (isRateLimitError(error)) {\n    console.log('Rate limit exceeded:', error.message);\n    // Implement retry logic with backoff\n  }\n}\n</code></pre>"},{"location":"error-handling/#servererror","title":"<code>ServerError</code>","text":"<p>Thrown when server errors occur (5xx status codes).</p> <p>Common scenarios: - Internal server error - Service unavailable - Gateway timeout</p> <pre><code>import { ServerError, isServerError } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.queues.getAll();\n} catch (error) {\n  if (isServerError(error)) {\n    console.log('Server error:', error.message);\n    // Handle server-side errors\n  }\n}\n</code></pre>"},{"location":"error-handling/#networkerror","title":"<code>NetworkError</code>","text":"<p>Thrown when network-related errors occur.</p> <p>Common scenarios: - Connection timeout - Request aborted - DNS resolution failure - Network connectivity issues</p> <pre><code>import { NetworkError, isNetworkError } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.processes.getAll();\n} catch (error) {\n  if (isNetworkError(error)) {\n    console.log('Network error:', error.message);\n    // Handle network issues\n  }\n}\n</code></pre>"},{"location":"error-handling/#error-information","title":"Error Information","text":""},{"location":"error-handling/#getting-error-details","title":"Getting Error Details","text":"<pre><code>import { getErrorDetails } from '@uipath/uipath-typescript';\n\ntry {\n  await sdk.assets.getAll();\n} catch (error) {\n  const details = getErrorDetails(error);\n  console.log('Error message:', details.message);\n  console.log('Status code:', details.statusCode);\n}\n</code></pre>"},{"location":"error-handling/#accessing-all-error-properties","title":"Accessing All Error Properties","text":"<pre><code>import { UiPathError } from '@uipath/uipath-typescript';\n\ntry {\n  const process = await sdk.maestro.processes.getById('invalid-id');\n} catch (error) {\n  if (error instanceof UiPathError) {\n    // Access common error properties\n    console.log('Error Type:', error.type);\n    console.log('Message:', error.message);\n    console.log('Status Code:', error.statusCode);\n    console.log('Request ID:', error.requestId);\n    console.log('Timestamp:', error.timestamp);\n    console.log('error stack trace:', error.stack);\n\n    // Get detailed debug information including stack trace\n    const debugInfo = error.getDebugInfo();\n  }\n}\n</code></pre>"},{"location":"error-handling/#debug-information","title":"Debug Information","text":"<pre><code>try {\n  await sdk.processes.start({ releaseKey: 'test' });\n} catch (error) {\n  if (error instanceof UiPathError) {\n    const debugInfo = error.getDebugInfo();\n    console.log('Debug info:', JSON.stringify(debugInfo, null, 2));\n  }\n}\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Node.js 18.x or higher</li> <li>npm 8.x or higher (or yarn/pnpm)</li> <li>TypeScript 4.5+ (for TypeScript projects)</li> </ul>"},{"location":"getting-started/#install-the-sdk","title":"Install the SDK","text":"npmyarnpnpm <p>npm install @uipath/uipath-typescriptfound 0 vulnerabilities</p> <p>yarn add @uipath/uipath-typescript\u2728 Done in 1.85s.</p> <p>pnpm add @uipath/uipath-typescript</p>"},{"location":"getting-started/#project-setup","title":"Project Setup","text":"TypeScript ProjectJavaScript Project <p>mkdir my-uipath-project &amp;&amp; cd my-uipath-projectnpm init -yWrote to package.jsonnpm install typescript @types/node ts-node --save-devadded x packages in 1snpx tsc --initCreated a new tsconfig.jsonnpm install @uipath/uipath-typescriptadded x packages in 1s</p> <p>mkdir my-uipath-project &amp;&amp; cd my-uipath-projectnpm init -yWrote to package.jsonnpm install @uipath/uipath-typescriptadded x packages in 1s</p>"},{"location":"getting-started/#quick-examples","title":"Quick Examples","text":""},{"location":"getting-started/#working-with-tasks","title":"Working with Tasks","text":"<pre><code>// Get all tasks\nconst tasks = await sdk.tasks.getAll();\n\n// Assign task to user\nawait tasks[0].assign({ \n  userNameOrEmail: 'john@example.com' \n});\n</code></pre>"},{"location":"getting-started/#working-with-entities","title":"Working with Entities","text":"<pre><code>// Get entity metadata\nconst entity = await sdk.entities.getById('entity-id');\n\n// Fetch records \nconst customers = await entity.getRecords({ pageSize: 10 });\n\n// Insert new data\nawait entity.insert([\n  { name: 'John Doe', email: 'john@example.com', status: 'Active' }\n]);\n</code></pre>"},{"location":"getting-started/#telemetry","title":"Telemetry","text":"<p>To improve the developer experience, the SDK collects basic usage data about method invocations. For details on UiPath\u2019s privacy practices, see our privacy policy.</p>"},{"location":"getting-started/#vibe-coding","title":"Vibe Coding","text":"<p>The SDK is designed for rapid prototyping and development, making it perfect for vibe coding. Here are two ways to get started:</p>"},{"location":"getting-started/#option-1-ai-ide-integration","title":"Option 1: AI IDE Integration","text":"<p>After installing the SDK, supercharge your development with AI IDEs:</p> <ol> <li>Install the SDK: <code>npm install @uipath/uipath-typescript</code></li> <li>Drag &amp; Drop: From your <code>node_modules/@uipath/uipath-typescript</code> folder, drag the entire package into your AI IDE</li> <li>Start Prompting: Your AI assistant now has full context of the SDK!</li> </ol> <p>Works with: - GitHub Copilot - Cursor - Claude - Any AI coding assistant</p> <p></p>"},{"location":"getting-started/#option-2-copy-documentation-for-llms","title":"Option 2: Copy Documentation for LLMs","text":"<p>Give your AI assistant complete context by copying our documentation:</p> Copy Full DocumentationCopy Individual Pages <p>For Maximum Context:</p> <ol> <li> <p>Download Complete Documentation: llms-full-content.txt</p> </li> <li> <p>Copy and Paste: Copy the entire content and paste it into your AI chat</p> </li> <li> <p>Start Prompting: Your AI now has complete SDK knowledge!</p> </li> </ol> <p>For Specific Features:</p> <ol> <li>Use the copy button (\ud83d\udccb) on any documentation page</li> <li>Paste into your AI chat </li> <li>Ask specific questions about that feature</li> </ol>"},{"location":"oauth-scopes/","title":"OAuth Scopes Reference","text":"<p>This page lists the specific OAuth scopes required in external app for each SDK method.</p>"},{"location":"oauth-scopes/#assets","title":"Assets","text":"Method OAuth Scope <code>sdk.assets.getAll</code> <code>OR.Assets</code> or <code>OR.Assets.Read</code> <code>sdk.assets.getById</code> <code>OR.Assets</code> or <code>OR.Assets.Read</code>"},{"location":"oauth-scopes/#buckets","title":"Buckets","text":"Method OAuth Scope <code>sdk.buckets.getAll</code> <code>OR.Administration</code> or <code>OR.Administration.Read</code> <code>sdk.buckets.getById</code> <code>OR.Administration</code> or <code>OR.Administration.Read</code> <code>sdk.buckets.getFileMetaData</code> <code>OR.Administration</code> or <code>OR.Administration.Read</code> <code>sdk.buckets.getReadUri</code> <code>OR.Administration</code> or <code>OR.Administration.Read</code> <code>sdk.buckets.uploadFile</code> <code>OR.Administration</code> or <code>OR.Administration.Read</code>"},{"location":"oauth-scopes/#entities","title":"Entities","text":"Method OAuth Scope <code>sdk.entities.getAll</code> <code>DataFabric.Schema.Read</code> <code>sdk.entities.getRecordsById</code> <code>DataFabric.Data.Read</code> <code>sdk.entities.insertById</code> or <code>entity.insert</code> <code>DataFabric.Data.Write</code> <code>sdk.entities.deleteById</code> or <code>entity.delete</code> <code>DataFabric.Data.Write</code> <code>sdk.entities.updateById</code> or <code>entity.update</code> <code>DataFabric.Data.Write</code>"},{"location":"oauth-scopes/#maestro","title":"Maestro","text":"Method OAuth Scope <code>sdk.maestro.processes.getAll</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.getAll</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.getExecutionHistory</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.getById</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.getbpmn</code> <code>OR.Execution.Read</code> <code>sdk.maestro.processes.instances.cancel</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.pause</code> <code>PIMS</code> <code>sdk.maestro.processes.instances.resume</code> <code>PIMS</code> <code>sdk.maestro.cases.getAll</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.getAll</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.getById</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.close</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.pause</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.resume</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.getExecutionHistory</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.getStages</code> <code>PIMS</code> <code>sdk.maestro.cases.instances.getActionTasks</code> <code>OR.Tasks</code> or <code>OR.Tasks.Read</code>"},{"location":"oauth-scopes/#processes","title":"Processes","text":"Method OAuth Scope <code>sdk.processes.getAll</code> <code>OR.Execution</code> or <code>OR.Execution.Read</code> <code>sdk.processes.start</code> <code>OR.Jobs</code> or <code>OR.Jobs.Write</code> <code>sdk.processes.getById</code> <code>OR.Execution</code> or <code>OR.Execution.Read</code>"},{"location":"oauth-scopes/#queues","title":"Queues","text":"Method OAuth Scope <code>sdk.queues.getAll</code> <code>OR.Queues</code> or <code>OR.Queues.Read</code> <code>sdk.queues.getById</code> <code>OR.Queues</code> or <code>OR.Queues.Read</code>"},{"location":"oauth-scopes/#tasks","title":"Tasks","text":"Method OAuth Scope <code>sdk.tasks.create</code> <code>OR.Tasks</code> or <code>OR.Tasks.Write</code> <code>sdk.tasks.getUsers</code> <code>OR.Tasks</code> or <code>OR.Tasks.Read</code> <code>sdk.tasks.getAll</code> <code>OR.Tasks</code> or <code>OR.Tasks.Read</code> <code>sdk.tasks.getById</code> <code>OR.Tasks</code> or <code>OR.Tasks.Read</code> <code>sdk.tasks.assign</code> <code>OR.Tasks</code> or <code>OR.Tasks.Write</code> <code>sdk.tasks.reassign</code> <code>OR.Tasks</code> or <code>OR.Tasks.Write</code> <code>sdk.tasks.complete</code> <code>OR.Tasks</code> or <code>OR.Tasks.Write</code> <code>sdk.tasks.getFormTaskById</code> <code>OR.Tasks</code> or <code>OR.Tasks.Read</code>"},{"location":"pagination/","title":"Pagination","text":""},{"location":"pagination/#overview","title":"Overview","text":"<p>The SDK supports two pagination approaches:</p> <ol> <li>Cursor-based Navigation: Use opaque cursors to navigate between pages</li> <li>Page Jump: Jump directly to specific page numbers (when supported) \u2197 Refer to the Quick Reference Table</li> </ol> <p>You can specify either cursor OR jumpToPage, but not both.</p> <p>All paginated methods return a <code>PaginatedResponse&lt;T&gt;</code> when pagination parameters are provided, or a <code>NonPaginatedResponse&lt;T&gt;</code> when no pagination parameters are specified.</p>"},{"location":"pagination/#types","title":"Types","text":""},{"location":"pagination/#paginationoptions","title":"PaginationOptions","text":"<pre><code>type PaginationOptions = {\n  pageSize?: number;      // Size of the page to fetch (items per page)\n  cursor?: string;        // Opaque string containing all information needed to fetch next page\n  jumpToPage?: number;    // Direct page number navigation\n}\n</code></pre>"},{"location":"pagination/#paginatedresponse","title":"PaginatedResponse","text":"<pre><code>interface PaginatedResponse&lt;T&gt; {\n  items: T[];                           // The items in the current page\n  totalCount?: number;                  // Total count of items across all pages (if available)\n  hasNextPage: boolean;                 // Whether more pages are available\n  nextCursor?: PaginationCursor;        // Cursor to fetch the next page (if available)\n  previousCursor?: PaginationCursor;    // Cursor to fetch the previous page (if available)\n  currentPage?: number;                 // Current page number (1-based, if available)\n  totalPages?: number;                  // Total number of pages (if available)\n  supportsPageJump: boolean;            // Whether this pagination type supports jumping to arbitrary pages\n}\n</code></pre>"},{"location":"pagination/#usage-examples","title":"Usage Examples","text":""},{"location":"pagination/#basic-pagination","title":"Basic Pagination","text":"<pre><code>// Get first page with 10 items\nconst firstPage = await sdk.assets.getAll({ pageSize: 10 });\n\nconsole.log(`Got ${firstPage.items.length} items`);\nconsole.log(`Total items: ${firstPage.totalCount}`);\nconsole.log(`Has next page: ${firstPage.hasNextPage}`);\n</code></pre>"},{"location":"pagination/#cursor-based-navigation","title":"Cursor-based Navigation","text":"<pre><code>// Navigate through pages using cursors\nlet currentPage = await sdk.assets.getAll({ pageSize: 10 }) as PaginatedResponse&lt;AssetGetResponse&gt;;\n\nwhile (currentPage.hasNextPage) {\n  // Process current page items\n  currentPage.items.forEach(item =&gt; console.log(item.name));\n\n  // Get next page using cursor\n    currentPage = await sdk.assets.getAll({ \n    cursor: currentPage.nextCursor \n  }) as PaginatedResponse&lt;AssetGetResponse&gt;;\n}\n</code></pre>"},{"location":"pagination/#page-jumping","title":"Page Jumping","text":"<pre><code>// Jump directly to page 5 (when supported)\nconst page5 = await sdk.assets.getAll({\n  jumpToPage: 5,\n  pageSize: 20\n});\n\n// Check if page jumping is supported\nif (page5.supportsPageJump) {\n  console.log(`Currently on page ${page5.currentPage} of ${page5.totalPages}`);\n}\n</code></pre>"},{"location":"pagination/#non-paginated-requests","title":"Non-paginated Requests","text":"<pre><code>// Get all items without pagination\nconst allAssets = await sdk.assets.getAll();\n\nconsole.log(`Retrieved ${allAssets.items.length} assets`);\nconsole.log(`Total count: ${allAssets.totalCount}`);\n</code></pre>"},{"location":"pagination/#quick-reference-table","title":"Quick Reference Table","text":"Service Method Supports <code>jumpToPage</code>? <code>sdk.assets</code> <code>getAll()</code> \u2705 Yes <code>sdk.buckets</code> <code>getAll()</code> \u2705 Yes <code>sdk.buckets</code> <code>getFiles()</code> \u274c No <code>sdk.entities</code> <code>getAll()</code> \u2705 Yes <code>sdk.processes</code> <code>getAll()</code> \u2705 Yes <code>sdk.processInstances</code> <code>getAll()</code> \u274c No <code>sdk.queues</code> <code>getAll()</code> \u2705 Yes <code>sdk.tasks</code> <code>getAll()</code> \u2705 Yes <code>sdk.tasks</code> <code>getUsers()</code> \u2705 Yes"},{"location":"release-policy/","title":"Release Policy","text":"<p>The UiPath TypeScript SDK is under rapid development, following semantic versioning in the format of X.Y.Z:</p> <ul> <li>X (major version): X = 1</li> <li>Y (minor version) increases indicate breaking changes for public interfaces not marked as beta</li> <li>Z (patch version) increases indicate:<ul> <li>Bug fixes</li> <li>New features</li> <li>Changes to private interfaces</li> <li>Changes to beta features</li> </ul> </li> </ul>"},{"location":"release-policy/#version-number-format","title":"Version Number Format","text":"<p>The version format is <code>X.Y.Z</code> where:</p> <ul> <li>X = 1 (e.g., 1.0.0, 1.1.0)</li> <li>Y represents the minor version</li> <li>Z represents the patch version</li> </ul>"},{"location":"release-policy/#release-candidates","title":"Release Candidates","text":"<p>From time to time, we will version packages as release candidates. These are versions that are intended to be released as stable versions, but we want to get feedback from the community before doing so.</p> <p>Release candidates are versioned as <code>X.Y.ZrcN</code>. For example: - <code>1.2.0rc1</code></p> <p>If no issues are found, the release candidate will be released as a stable version with the same version number. If issues are found, we will release a new release candidate with an incremented N value (e.g., <code>1.2.0rc2</code>).</p> <p>When upgrading between minor versions, users should review the list of breaking changes and deprecations.</p>"},{"location":"release-policy/#release-cadence","title":"Release Cadence","text":""},{"location":"release-policy/#minor-releases-xy0","title":"Minor Releases (X.Y.0)","text":"<ul> <li>Released as needed based on feature development and breaking changes</li> <li>Include breaking changes for public interfaces not marked as beta</li> <li>Require a migration guide for users</li> <li>Preceded by a release candidate (RC) phase</li> </ul>"},{"location":"release-policy/#patch-releases-xyz","title":"Patch Releases (X.Y.Z)","text":"<ul> <li>Released as needed based on bug fixes and improvements</li> <li>Include bug fixes, new features, and changes to private interfaces</li> <li>Always maintain backward compatibility for public interfaces</li> </ul>"},{"location":"release-policy/#api-stability","title":"API Stability","text":""},{"location":"release-policy/#public-api","title":"Public API","text":"<p>The following components are considered part of the public API:</p> <ul> <li>All classes and methods in the <code>src</code> directory</li> <li>CLI commands and their interfaces</li> </ul>"},{"location":"release-policy/#breaking-changes","title":"Breaking Changes","text":"<p>Breaking changes are introduced in minor releases (X.Y.0) and follow these guidelines:</p> <ol> <li>Deprecation Period: Features marked for removal will be deprecated for at least one minor release cycle</li> <li>Migration Path: Breaking changes must provide a clear migration path</li> <li>Documentation: All breaking changes must be documented in the release notes and migration guide</li> <li>Beta Features: Breaking changes to beta features can occur in patch releases</li> </ol>"},{"location":"release-policy/#deprecation-policy","title":"Deprecation Policy","text":"<ol> <li>Announcement: Features to be deprecated will be announced in release notes</li> <li>Warning Period: Deprecated features will trigger warnings when used</li> <li>Removal: Deprecated features will be removed in the next major release</li> </ol>"},{"location":"release-policy/#release-process","title":"Release Process","text":"<ol> <li> <p>Development:</p> <ul> <li>Features and fixes are developed in feature branches</li> <li>All changes require tests and documentation</li> <li>Code must pass all CI checks</li> </ul> </li> <li> <p>Release Candidate:</p> <ul> <li>Minor releases include an RC phase</li> <li>RCs are versioned as <code>X.Y.ZrcN</code></li> <li>Community feedback is collected during RC phase</li> </ul> </li> <li> <p>Release:</p> <ul> <li>Version number is updated in <code>package.json</code></li> <li>Release notes are prepared</li> <li>Package is published to npm</li> <li>Documentation is updated</li> </ul> </li> </ol>"},{"location":"release-policy/#support-policy","title":"Support Policy","text":"<ul> <li>Current major version: Full support</li> <li>Previous major version: Security fixes only</li> <li>Older versions: No official support</li> </ul>"},{"location":"release-policy/#dependencies","title":"Dependencies","text":"<p>The SDK maintains compatibility with:</p> <ul> <li>Node.js 18+</li> <li>Key dependencies as specified in <code>package.json</code></li> <li>Regular updates to dependencies are performed in minor releases</li> </ul>"},{"location":"release-policy/#documentation","title":"Documentation","text":"<ul> <li>All public APIs must be documented</li> <li>Documentation follows TypeScript standard JSDoc format</li> <li>Examples and usage guides are provided for new features</li> <li>Breaking changes are clearly documented in migration guides</li> </ul>"},{"location":"api/","title":"Index","text":""},{"location":"api/#enumerations","title":"Enumerations","text":"<ul> <li>TaskType</li> <li>TaskPriority</li> <li>TaskStatus</li> <li>TaskSlaCriteria</li> <li>TaskSlaStatus</li> <li>TaskSourceName</li> <li>TaskActivityType</li> <li>JobState</li> <li>EntityFieldDataType</li> <li>EntityType</li> <li>ReferenceType</li> <li>FieldDisplayType</li> <li>DataDirectionType</li> <li>JoinType</li> <li>StageTaskType</li> <li>EscalationRecipientScope</li> <li>EscalationActionType</li> <li>EscalationTriggerType</li> <li>SLADurationUnit</li> <li>AssetValueScope</li> <li>AssetValueType</li> <li>BucketOptions</li> <li>PackageType</li> <li>JobPriority</li> <li>TargetFramework</li> <li>RobotSize</li> <li>RemoteControlAccess</li> <li>StartStrategy</li> <li>PackageSourceType</li> <li>StopStrategy</li> <li>JobType</li> </ul>"},{"location":"api/#classes","title":"Classes","text":"<ul> <li>AuthenticationError</li> <li>AuthorizationError</li> <li>UiPathError</li> <li>NetworkError</li> <li>NotFoundError</li> <li>RateLimitError</li> <li>ServerError</li> <li>ValidationError</li> <li>UiPath</li> </ul>"},{"location":"api/#interfaces","title":"Interfaces","text":"<ul> <li>BaseConfig</li> <li>OAuthFields</li> <li>TaskServiceModel</li> <li>TaskMethods</li> <li>UserLoginInfo</li> <li>TaskSource</li> <li>Tag</li> <li>TaskActivity</li> <li>TaskSlaDetail</li> <li>TaskAssignment</li> <li>TaskBaseResponse</li> <li>TaskCreateOptions</li> <li>RawTaskCreateResponse</li> <li>RawTaskGetResponse</li> <li>TaskAssignmentOptions</li> <li>TasksUnassignOptions</li> <li>TaskAssignmentResponse</li> <li>TaskCompletionOptions</li> <li>RetryOptions</li> <li>TimeoutOptions</li> <li>BodyOptions</li> <li>PaginationMetadata</li> <li>RequestSpec</li> <li>CollectionResponse</li> <li>OperationResponse</li> <li>BaseOptions</li> <li>RequestOptions</li> <li>EntityServiceModel</li> <li>EntityMethods</li> <li>EntityRecord</li> <li>EntityOperationOptions</li> <li>EntityDeleteOptions</li> <li>FailureRecord</li> <li>EntityOperationResponse</li> <li>FieldDataType</li> <li>Field</li> <li>FieldMetaData</li> <li>ExternalObject</li> <li>ExternalConnection</li> <li>ExternalFieldMapping</li> <li>ExternalField</li> <li>ExternalSourceFields</li> <li>SourceJoinCriteria</li> <li>RawEntityGetResponse</li> <li>CaseInstancesServiceModel</li> <li>CaseInstanceMethods</li> <li>RawCaseInstanceGetResponse</li> <li>CaseInstanceRun</li> <li>CaseInstanceGetAllOptions</li> <li>CaseInstanceOperationOptions</li> <li>CaseInstanceOperationResponse</li> <li>CaseAppOverview</li> <li>CaseAppConfig</li> <li>StageTask</li> <li>EscalationRecipient</li> <li>EscalationAction</li> <li>EscalationTriggerMetadata</li> <li>EscalationRule</li> <li>StageSLA</li> <li>CaseGetStageResponse</li> <li>ElementExecutionMetadata</li> <li>CaseInstanceExecutionHistoryResponse</li> <li>ElementRunMetadata</li> <li>CasesServiceModel</li> <li>CaseGetAllResponse</li> <li>ProcessInstancesServiceModel</li> <li>ProcessInstanceMethods</li> <li>RawProcessInstanceGetResponse</li> <li>ProcessInstanceGetAllOptions</li> <li>ProcessInstanceOperationOptions</li> <li>ProcessInstanceOperationResponse</li> <li>ProcessInstanceExecutionHistoryResponse</li> <li>ProcessInstanceRun</li> <li>ElementMetaData</li> <li>GlobalVariableMetaData</li> <li>ProcessInstanceGetVariablesResponse</li> <li>ProcessInstanceGetVariablesOptions</li> <li>MaestroProcessesServiceModel</li> <li>MaestroProcessGetAllResponse</li> <li>AssetServiceModel</li> <li>CustomKeyValuePair</li> <li>AssetGetResponse</li> <li>BucketServiceModel</li> <li>BucketGetResponse</li> <li>BucketGetUriResponse</li> <li>BucketGetUriOptions</li> <li>BucketGetFileMetaDataOptions</li> <li>BucketGetFileMetaDataResponse</li> <li>BlobItem</li> <li>BucketUploadFileOptions</li> <li>BucketUploadResponse</li> <li>ProcessServiceModel</li> <li>JobAttachment</li> <li>ProcessProperties</li> <li>FolderProperties</li> <li>RobotMetadata</li> <li>Machine</li> <li>JobError</li> <li>ArgumentMetadata</li> <li>ProcessStartResponse</li> <li>ProcessGetResponse</li> <li>QueueServiceModel</li> <li>QueueGetResponse</li> <li>PaginationCursor</li> <li>PaginatedResponse</li> <li>NonPaginatedResponse</li> </ul>"},{"location":"api/#type-aliases","title":"Type Aliases","text":"<ul> <li>UiPathSDKConfig</li> <li>TaskGetResponse</li> <li>TaskCreateResponse</li> <li>TaskAssignOptions</li> <li>TaskCompleteOptions</li> <li>TaskGetAllOptions</li> <li>TaskGetByIdOptions</li> <li>TaskGetUsersOptions</li> <li>HttpMethod</li> <li>ResponseType</li> <li>QueryParams</li> <li>Headers</li> <li>EntityGetResponse</li> <li>EntityGetRecordsByIdOptions</li> <li>EntityInsertOptions</li> <li>EntityUpdateOptions</li> <li>EntityInsertResponse</li> <li>EntityUpdateResponse</li> <li>EntityDeleteResponse</li> <li>CaseInstanceGetResponse</li> <li>CaseInstanceGetAllWithPaginationOptions</li> <li>ProcessInstanceGetResponse</li> <li>ProcessInstanceGetAllWithPaginationOptions</li> <li>BpmnXmlString</li> <li>AssetGetAllOptions</li> <li>AssetGetByIdOptions</li> <li>BucketGetAllOptions</li> <li>BucketGetByIdOptions</li> <li>ResponseDictionary</li> <li>BucketGetReadUriOptions</li> <li>BucketGetFileMetaDataWithPaginationOptions</li> <li>ProcessStartRequest</li> <li>ProcessGetAllOptions</li> <li>ProcessGetByIdOptions</li> <li>QueueGetAllOptions</li> <li>QueueGetByIdOptions</li> <li>PaginationMethodUnion</li> <li>PaginationOptions</li> <li>HasPaginationOptions</li> </ul>"},{"location":"api/#variables","title":"Variables","text":"<ul> <li>HttpStatus</li> <li>ErrorType</li> <li>telemetryClient</li> <li>CONNECTION_STRING</li> <li>SDK_VERSION</li> <li>VERSION</li> <li>SERVICE</li> <li>CLOUD_ORGANIZATION_NAME</li> <li>CLOUD_TENANT_NAME</li> <li>CLOUD_URL</li> <li>CLOUD_CLIENT_ID</li> <li>CLOUD_REDIRECT_URI</li> <li>APP_NAME</li> <li>CLOUD_ROLE_NAME</li> <li>SDK_SERVICE_NAME</li> <li>SDK_LOGGER_NAME</li> <li>SDK_RUN_EVENT</li> <li>UNKNOWN</li> <li>MAX_PAGE_SIZE</li> <li>DEFAULT_PAGE_SIZE</li> <li>DEFAULT_ITEMS_FIELD</li> <li>DEFAULT_TOTAL_COUNT_FIELD</li> </ul>"},{"location":"api/#functions","title":"Functions","text":"<ul> <li>isUiPathError</li> <li>isAuthenticationError</li> <li>isAuthorizationError</li> <li>isValidationError</li> <li>isNotFoundError</li> <li>isRateLimitError</li> <li>isServerError</li> <li>isNetworkError</li> <li>getErrorDetails</li> <li>track</li> <li>trackEvent</li> <li>createTaskWithMethods</li> <li>createEntityWithMethods</li> <li>createCaseInstanceWithMethods</li> <li>createProcessInstanceWithMethods</li> <li>getLimitedPageSize</li> </ul>"},{"location":"api/classes/AuthenticationError/","title":"AuthenticationError","text":"<p>Error thrown when authentication fails (401 errors) Common scenarios: - Invalid credentials - Expired token - Missing authentication</p>"},{"location":"api/classes/AuthenticationError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/AuthenticationError/#constructors","title":"Constructors","text":""},{"location":"api/classes/AuthenticationError/#constructor","title":"Constructor","text":"<pre><code>new AuthenticationError(params: Partial&lt;ErrorParams&gt;): AuthenticationError;\n</code></pre>"},{"location":"api/classes/AuthenticationError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/AuthenticationError/#returns","title":"Returns","text":"<p><code>AuthenticationError</code></p>"},{"location":"api/classes/AuthenticationError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/AuthenticationError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/AuthenticationError/#methods","title":"Methods","text":""},{"location":"api/classes/AuthenticationError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/AuthenticationError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/AuthenticationError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/AuthorizationError/","title":"AuthorizationError","text":"<p>Error thrown when authorization fails (403 errors) Common scenarios: - Insufficient permissions - Access denied to resource - Invalid scope</p>"},{"location":"api/classes/AuthorizationError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/AuthorizationError/#constructors","title":"Constructors","text":""},{"location":"api/classes/AuthorizationError/#constructor","title":"Constructor","text":"<pre><code>new AuthorizationError(params: Partial&lt;ErrorParams&gt;): AuthorizationError;\n</code></pre>"},{"location":"api/classes/AuthorizationError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/AuthorizationError/#returns","title":"Returns","text":"<p><code>AuthorizationError</code></p>"},{"location":"api/classes/AuthorizationError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/AuthorizationError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/AuthorizationError/#methods","title":"Methods","text":""},{"location":"api/classes/AuthorizationError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/AuthorizationError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/AuthorizationError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/NetworkError/","title":"NetworkError","text":"<p>Error thrown when network/connection issues occur Common scenarios: - Connection timeout - DNS resolution failure - Network unreachable - Request aborted</p>"},{"location":"api/classes/NetworkError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/NetworkError/#constructors","title":"Constructors","text":""},{"location":"api/classes/NetworkError/#constructor","title":"Constructor","text":"<pre><code>new NetworkError(params: Partial&lt;ErrorParams&gt;): NetworkError;\n</code></pre>"},{"location":"api/classes/NetworkError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/NetworkError/#returns","title":"Returns","text":"<p><code>NetworkError</code></p>"},{"location":"api/classes/NetworkError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/NetworkError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/NetworkError/#methods","title":"Methods","text":""},{"location":"api/classes/NetworkError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/NetworkError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/NetworkError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/NotFoundError/","title":"NotFoundError","text":"<p>Error thrown when a resource is not found (404 errors) Common scenarios: - Resource doesn't exist - Invalid ID provided - Resource deleted</p>"},{"location":"api/classes/NotFoundError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/NotFoundError/#constructors","title":"Constructors","text":""},{"location":"api/classes/NotFoundError/#constructor","title":"Constructor","text":"<pre><code>new NotFoundError(params: Partial&lt;ErrorParams&gt;): NotFoundError;\n</code></pre>"},{"location":"api/classes/NotFoundError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/NotFoundError/#returns","title":"Returns","text":"<p><code>NotFoundError</code></p>"},{"location":"api/classes/NotFoundError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/NotFoundError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/NotFoundError/#methods","title":"Methods","text":""},{"location":"api/classes/NotFoundError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/NotFoundError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/NotFoundError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/RateLimitError/","title":"RateLimitError","text":"<p>Error thrown when rate limit is exceeded (429 errors) Common scenarios: - Too many requests in a time window - API throttling</p>"},{"location":"api/classes/RateLimitError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/RateLimitError/#constructors","title":"Constructors","text":""},{"location":"api/classes/RateLimitError/#constructor","title":"Constructor","text":"<pre><code>new RateLimitError(params: Partial&lt;ErrorParams&gt;): RateLimitError;\n</code></pre>"},{"location":"api/classes/RateLimitError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/RateLimitError/#returns","title":"Returns","text":"<p><code>RateLimitError</code></p>"},{"location":"api/classes/RateLimitError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/RateLimitError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/RateLimitError/#methods","title":"Methods","text":""},{"location":"api/classes/RateLimitError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/RateLimitError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/RateLimitError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/ServerError/","title":"ServerError","text":"<p>Error thrown when server encounters an error (5xx errors) Common scenarios: - Internal server error - Service unavailable - Gateway timeout</p>"},{"location":"api/classes/ServerError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/ServerError/#constructors","title":"Constructors","text":""},{"location":"api/classes/ServerError/#constructor","title":"Constructor","text":"<pre><code>new ServerError(params: Partial&lt;ErrorParams&gt;): ServerError;\n</code></pre>"},{"location":"api/classes/ServerError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/ServerError/#returns","title":"Returns","text":"<p><code>ServerError</code></p>"},{"location":"api/classes/ServerError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/ServerError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/ServerError/#accessors","title":"Accessors","text":""},{"location":"api/classes/ServerError/#isretryable","title":"isRetryable","text":""},{"location":"api/classes/ServerError/#get-signature","title":"Get Signature","text":"<pre><code>get isRetryable(): boolean;\n</code></pre> <p>Checks if this is a temporary error that might succeed on retry</p>"},{"location":"api/classes/ServerError/#returns_1","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"api/classes/ServerError/#methods","title":"Methods","text":""},{"location":"api/classes/ServerError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/ServerError/#returns_2","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/ServerError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/classes/UiPath/","title":"UiPath","text":"<p>UiPath TypeScript SDK</p> <p>A TypeScript SDK that enables programmatic interaction with UiPath Platform services.</p>"},{"location":"api/classes/UiPath/#constructors","title":"Constructors","text":""},{"location":"api/classes/UiPath/#constructor","title":"Constructor","text":"<pre><code>new UiPath(config: UiPathSDKConfig): UiPath;\n</code></pre>"},{"location":"api/classes/UiPath/#parameters","title":"Parameters","text":"Parameter Type <code>config</code> <code>UiPathSDKConfig</code>"},{"location":"api/classes/UiPath/#returns","title":"Returns","text":"<p><code>UiPath</code></p>"},{"location":"api/classes/UiPath/#accessors","title":"Accessors","text":""},{"location":"api/classes/UiPath/#maestro","title":"maestro","text":""},{"location":"api/classes/UiPath/#get-signature","title":"Get Signature","text":"<pre><code>get maestro(): {\n  processes: MaestroProcessesService &amp; {\n     instances: ProcessInstancesService;\n  };\n  cases: CasesService &amp; {\n     instances: CaseInstancesService;\n  };\n};\n</code></pre> <p>Access to Maestro services</p>"},{"location":"api/classes/UiPath/#returns_1","title":"Returns","text":""},{"location":"api/classes/UiPath/#processes","title":"processes","text":"<pre><code>processes: MaestroProcessesService &amp; {\n  instances: ProcessInstancesService;\n};\n</code></pre> <p>Access to Maestro Processes service</p>"},{"location":"api/classes/UiPath/#type-declaration","title":"Type Declaration","text":""},{"location":"api/classes/UiPath/#instances","title":"instances","text":"<pre><code>instances: ProcessInstancesService;\n</code></pre> <p>Access to Process Instances service</p>"},{"location":"api/classes/UiPath/#cases","title":"cases","text":"<pre><code>cases: CasesService &amp; {\n  instances: CaseInstancesService;\n};\n</code></pre> <p>Access to Maestro Cases service</p>"},{"location":"api/classes/UiPath/#type-declaration_1","title":"Type Declaration","text":""},{"location":"api/classes/UiPath/#instances_1","title":"instances","text":"<pre><code>instances: CaseInstancesService;\n</code></pre> <p>Access to Case Instances service</p>"},{"location":"api/classes/UiPath/#entities","title":"entities","text":""},{"location":"api/classes/UiPath/#get-signature_1","title":"Get Signature","text":"<pre><code>get entities(): EntityService;\n</code></pre> <p>Access to Entity service</p>"},{"location":"api/classes/UiPath/#returns_2","title":"Returns","text":"<p><code>EntityService</code></p>"},{"location":"api/classes/UiPath/#tasks","title":"tasks","text":""},{"location":"api/classes/UiPath/#get-signature_2","title":"Get Signature","text":"<pre><code>get tasks(): TaskService;\n</code></pre> <p>Access to Tasks service</p>"},{"location":"api/classes/UiPath/#returns_3","title":"Returns","text":"<p><code>TaskService</code></p>"},{"location":"api/classes/UiPath/#processes_1","title":"processes","text":""},{"location":"api/classes/UiPath/#get-signature_3","title":"Get Signature","text":"<pre><code>get processes(): ProcessService;\n</code></pre> <p>Access to Orchestrator Processes service</p>"},{"location":"api/classes/UiPath/#returns_4","title":"Returns","text":"<p><code>ProcessService</code></p>"},{"location":"api/classes/UiPath/#buckets","title":"buckets","text":""},{"location":"api/classes/UiPath/#get-signature_4","title":"Get Signature","text":"<pre><code>get buckets(): BucketService;\n</code></pre> <p>Access to Orchestrator Buckets service</p>"},{"location":"api/classes/UiPath/#returns_5","title":"Returns","text":"<p><code>BucketService</code></p>"},{"location":"api/classes/UiPath/#queues","title":"queues","text":""},{"location":"api/classes/UiPath/#get-signature_5","title":"Get Signature","text":"<pre><code>get queues(): QueueService;\n</code></pre> <p>Access to Orchestrator Queues service</p>"},{"location":"api/classes/UiPath/#returns_6","title":"Returns","text":"<p><code>QueueService</code></p>"},{"location":"api/classes/UiPath/#assets","title":"assets","text":""},{"location":"api/classes/UiPath/#get-signature_6","title":"Get Signature","text":"<pre><code>get assets(): AssetService;\n</code></pre> <p>Access to Orchestrator Assets service</p>"},{"location":"api/classes/UiPath/#returns_7","title":"Returns","text":"<p><code>AssetService</code></p>"},{"location":"api/classes/UiPath/#methods","title":"Methods","text":""},{"location":"api/classes/UiPath/#initialize","title":"initialize()","text":"<pre><code>initialize(): Promise&lt;void&gt;;\n</code></pre> <p>Initialize the SDK based on the provided configuration. This method handles both OAuth flow initiation and completion automatically. For secret-based authentication, initialization is automatic.</p>"},{"location":"api/classes/UiPath/#returns_8","title":"Returns","text":"<p><code>Promise</code>&lt;<code>void</code>&gt;</p>"},{"location":"api/classes/UiPath/#isinitialized","title":"isInitialized()","text":"<pre><code>isInitialized(): boolean;\n</code></pre> <p>Check if the SDK has been initialized</p>"},{"location":"api/classes/UiPath/#returns_9","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"api/classes/UiPath/#isinoauthcallback","title":"isInOAuthCallback()","text":"<pre><code>isInOAuthCallback(): boolean;\n</code></pre> <p>Check if we're in an OAuth callback state</p>"},{"location":"api/classes/UiPath/#returns_10","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"api/classes/UiPath/#completeoauth","title":"completeOAuth()","text":"<pre><code>completeOAuth(): Promise&lt;boolean&gt;;\n</code></pre> <p>Complete OAuth authentication flow (only call if isInOAuthCallback() is true)</p>"},{"location":"api/classes/UiPath/#returns_11","title":"Returns","text":"<p><code>Promise</code>&lt;<code>boolean</code>&gt;</p>"},{"location":"api/classes/UiPath/#isauthenticated","title":"isAuthenticated()","text":"<pre><code>isAuthenticated(): boolean;\n</code></pre> <p>Check if the user is authenticated (has valid token)</p>"},{"location":"api/classes/UiPath/#returns_12","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"api/classes/UiPath/#gettoken","title":"getToken()","text":"<pre><code>getToken(): undefined | string;\n</code></pre> <p>Get the current authentication token</p>"},{"location":"api/classes/UiPath/#returns_13","title":"Returns","text":"<p><code>undefined</code> | <code>string</code></p>"},{"location":"api/classes/UiPathError/","title":"UiPathError","text":"<p>Base error class for all UiPath SDK errors Pure TypeScript class with clean interface</p>"},{"location":"api/classes/UiPathError/#extended-by","title":"Extended by","text":"<ul> <li><code>AuthenticationError</code></li> <li><code>AuthorizationError</code></li> <li><code>ValidationError</code></li> <li><code>NotFoundError</code></li> <li><code>RateLimitError</code></li> <li><code>ServerError</code></li> <li><code>NetworkError</code></li> </ul>"},{"location":"api/classes/UiPathError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/UiPathError/#methods","title":"Methods","text":""},{"location":"api/classes/UiPathError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/UiPathError/#returns","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/ValidationError/","title":"ValidationError","text":"<p>Error thrown when validation fails (400 errors or client-side validation) Common scenarios: - Invalid input parameters - Missing required fields - Invalid data format</p>"},{"location":"api/classes/ValidationError/#extends","title":"Extends","text":"<ul> <li><code>UiPathError</code></li> </ul>"},{"location":"api/classes/ValidationError/#constructors","title":"Constructors","text":""},{"location":"api/classes/ValidationError/#constructor","title":"Constructor","text":"<pre><code>new ValidationError(params: Partial&lt;ErrorParams&gt;): ValidationError;\n</code></pre>"},{"location":"api/classes/ValidationError/#parameters","title":"Parameters","text":"Parameter Type <code>params</code> <code>Partial</code>&lt;<code>ErrorParams</code>&gt;"},{"location":"api/classes/ValidationError/#returns","title":"Returns","text":"<p><code>ValidationError</code></p>"},{"location":"api/classes/ValidationError/#overrides","title":"Overrides","text":"<pre><code>UiPathError.constructor\n</code></pre>"},{"location":"api/classes/ValidationError/#properties","title":"Properties","text":"Property Modifier Type Description <code>type</code> <code>readonly</code> <code>string</code> Error type identifier (e.g., \"AuthenticationError\", \"ValidationError\") <code>message</code> <code>readonly</code> <code>string</code> Error message describing what went wrong <code>statusCode?</code> <code>readonly</code> <code>number</code> HTTP status code (400, 401, 403, 404, 500, etc.) <code>requestId?</code> <code>readonly</code> <code>string</code> Request ID for tracking with UiPath support <code>timestamp</code> <code>readonly</code> <code>Date</code> Timestamp when the error occurred <code>stack?</code> <code>readonly</code> <code>string</code> Stack trace for debugging"},{"location":"api/classes/ValidationError/#methods","title":"Methods","text":""},{"location":"api/classes/ValidationError/#getdebuginfo","title":"getDebugInfo()","text":"<pre><code>getDebugInfo(): Record&lt;string, unknown&gt;;\n</code></pre> <p>Returns detailed debug information including stack trace</p>"},{"location":"api/classes/ValidationError/#returns_1","title":"Returns","text":"<p><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p>"},{"location":"api/classes/ValidationError/#inherited-from","title":"Inherited from","text":"<p><code>UiPathError</code>.<code>getDebugInfo</code></p>"},{"location":"api/enumerations/AssetValueScope/","title":"AssetValueScope","text":"<p>Enum for Asset Value Scope</p>"},{"location":"api/enumerations/AssetValueScope/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/AssetValueScope/#global","title":"Global","text":"<pre><code>Global: \"Global\";\n</code></pre>"},{"location":"api/enumerations/AssetValueScope/#perrobot","title":"PerRobot","text":"<pre><code>PerRobot: \"PerRobot\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/","title":"AssetValueType","text":"<p>Enum for Asset Value Type</p>"},{"location":"api/enumerations/AssetValueType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/AssetValueType/#dbconnectionstring","title":"DBConnectionString","text":"<pre><code>DBConnectionString: \"DBConnectionString\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#httpconnectionstring","title":"HttpConnectionString","text":"<pre><code>HttpConnectionString: \"HttpConnectionString\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#text","title":"Text","text":"<pre><code>Text: \"Text\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#bool","title":"Bool","text":"<pre><code>Bool: \"Bool\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#integer","title":"Integer","text":"<pre><code>Integer: \"Integer\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#credential","title":"Credential","text":"<pre><code>Credential: \"Credential\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#windowscredential","title":"WindowsCredential","text":"<pre><code>WindowsCredential: \"WindowsCredential\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#keyvaluelist","title":"KeyValueList","text":"<pre><code>KeyValueList: \"KeyValueList\";\n</code></pre>"},{"location":"api/enumerations/AssetValueType/#secret","title":"Secret","text":"<pre><code>Secret: \"Secret\";\n</code></pre>"},{"location":"api/enumerations/BucketOptions/","title":"BucketOptions","text":""},{"location":"api/enumerations/BucketOptions/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/BucketOptions/#none","title":"None","text":"<pre><code>None: \"None\";\n</code></pre>"},{"location":"api/enumerations/BucketOptions/#readonly","title":"ReadOnly","text":"<pre><code>ReadOnly: \"ReadOnly\";\n</code></pre>"},{"location":"api/enumerations/BucketOptions/#auditreadaccess","title":"AuditReadAccess","text":"<pre><code>AuditReadAccess: \"AuditReadAccess\";\n</code></pre>"},{"location":"api/enumerations/BucketOptions/#accessdatathroughorchestrator","title":"AccessDataThroughOrchestrator","text":"<pre><code>AccessDataThroughOrchestrator: \"AccessDataThroughOrchestrator\";\n</code></pre>"},{"location":"api/enumerations/DataDirectionType/","title":"DataDirectionType","text":"<p>Data direction type for external fields</p>"},{"location":"api/enumerations/DataDirectionType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/DataDirectionType/#readonly","title":"ReadOnly","text":"<pre><code>ReadOnly: \"ReadOnly\";\n</code></pre>"},{"location":"api/enumerations/DataDirectionType/#readandwrite","title":"ReadAndWrite","text":"<pre><code>ReadAndWrite: \"ReadAndWrite\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/","title":"EntityFieldDataType","text":"<p>Entity field type names</p>"},{"location":"api/enumerations/EntityFieldDataType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/EntityFieldDataType/#uuid","title":"UUID","text":"<pre><code>UUID: \"UUID\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#string","title":"STRING","text":"<pre><code>STRING: \"STRING\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#integer","title":"INTEGER","text":"<pre><code>INTEGER: \"INTEGER\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#datetime","title":"DATETIME","text":"<pre><code>DATETIME: \"DATETIME\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#datetime_with_tz","title":"DATETIME_WITH_TZ","text":"<pre><code>DATETIME_WITH_TZ: \"DATETIME_WITH_TZ\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#decimal","title":"DECIMAL","text":"<pre><code>DECIMAL: \"DECIMAL\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#float","title":"FLOAT","text":"<pre><code>FLOAT: \"FLOAT\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#double","title":"DOUBLE","text":"<pre><code>DOUBLE: \"DOUBLE\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#date","title":"DATE","text":"<pre><code>DATE: \"DATE\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#boolean","title":"BOOLEAN","text":"<pre><code>BOOLEAN: \"BOOLEAN\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#big_integer","title":"BIG_INTEGER","text":"<pre><code>BIG_INTEGER: \"BIG_INTEGER\";\n</code></pre>"},{"location":"api/enumerations/EntityFieldDataType/#multiline_text","title":"MULTILINE_TEXT","text":"<pre><code>MULTILINE_TEXT: \"MULTILINE_TEXT\";\n</code></pre>"},{"location":"api/enumerations/EntityType/","title":"EntityType","text":"<p>Entity type enum</p>"},{"location":"api/enumerations/EntityType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/EntityType/#entity","title":"Entity","text":"<pre><code>Entity: \"Entity\";\n</code></pre>"},{"location":"api/enumerations/EntityType/#choiceset","title":"ChoiceSet","text":"<pre><code>ChoiceSet: \"ChoiceSet\";\n</code></pre>"},{"location":"api/enumerations/EntityType/#internalentity","title":"InternalEntity","text":"<pre><code>InternalEntity: \"InternalEntity\";\n</code></pre>"},{"location":"api/enumerations/EntityType/#systementity","title":"SystemEntity","text":"<pre><code>SystemEntity: \"SystemEntity\";\n</code></pre>"},{"location":"api/enumerations/EscalationActionType/","title":"EscalationActionType","text":"<p>Escalation action type</p>"},{"location":"api/enumerations/EscalationActionType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/EscalationActionType/#notification","title":"NOTIFICATION","text":"<pre><code>NOTIFICATION: \"notification\";\n</code></pre>"},{"location":"api/enumerations/EscalationRecipientScope/","title":"EscalationRecipientScope","text":"<p>Escalation recipient scope</p>"},{"location":"api/enumerations/EscalationRecipientScope/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/EscalationRecipientScope/#user","title":"USER","text":"<pre><code>USER: \"user\";\n</code></pre>"},{"location":"api/enumerations/EscalationRecipientScope/#user_group","title":"USER_GROUP","text":"<pre><code>USER_GROUP: \"usergroup\";\n</code></pre>"},{"location":"api/enumerations/EscalationTriggerType/","title":"EscalationTriggerType","text":"<p>Escalation rule trigger type</p>"},{"location":"api/enumerations/EscalationTriggerType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/EscalationTriggerType/#sla_breached","title":"SLA_BREACHED","text":"<pre><code>SLA_BREACHED: \"sla-breached\";\n</code></pre>"},{"location":"api/enumerations/EscalationTriggerType/#at_risk","title":"AT_RISK","text":"<pre><code>AT_RISK: \"at-risk\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/","title":"FieldDisplayType","text":"<p>Field display types</p>"},{"location":"api/enumerations/FieldDisplayType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/FieldDisplayType/#basic","title":"Basic","text":"<pre><code>Basic: \"Basic\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/#relationship","title":"Relationship","text":"<pre><code>Relationship: \"Relationship\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/#file","title":"File","text":"<pre><code>File: \"File\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/#choicesetsingle","title":"ChoiceSetSingle","text":"<pre><code>ChoiceSetSingle: \"ChoiceSetSingle\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/#choicesetmultiple","title":"ChoiceSetMultiple","text":"<pre><code>ChoiceSetMultiple: \"ChoiceSetMultiple\";\n</code></pre>"},{"location":"api/enumerations/FieldDisplayType/#autonumber","title":"AutoNumber","text":"<pre><code>AutoNumber: \"AutoNumber\";\n</code></pre>"},{"location":"api/enumerations/JobPriority/","title":"JobPriority","text":"<p>Enum for job priority</p>"},{"location":"api/enumerations/JobPriority/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/JobPriority/#low","title":"Low","text":"<pre><code>Low: \"Low\";\n</code></pre>"},{"location":"api/enumerations/JobPriority/#normal","title":"Normal","text":"<pre><code>Normal: \"Normal\";\n</code></pre>"},{"location":"api/enumerations/JobPriority/#high","title":"High","text":"<pre><code>High: \"High\";\n</code></pre>"},{"location":"api/enumerations/JobState/","title":"JobState","text":"<p>Common enum for job state used across services</p>"},{"location":"api/enumerations/JobState/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/JobState/#pending","title":"Pending","text":"<pre><code>Pending: \"Pending\";\n</code></pre>"},{"location":"api/enumerations/JobState/#running","title":"Running","text":"<pre><code>Running: \"Running\";\n</code></pre>"},{"location":"api/enumerations/JobState/#stopping","title":"Stopping","text":"<pre><code>Stopping: \"Stopping\";\n</code></pre>"},{"location":"api/enumerations/JobState/#terminating","title":"Terminating","text":"<pre><code>Terminating: \"Terminating\";\n</code></pre>"},{"location":"api/enumerations/JobState/#faulted","title":"Faulted","text":"<pre><code>Faulted: \"Faulted\";\n</code></pre>"},{"location":"api/enumerations/JobState/#successful","title":"Successful","text":"<pre><code>Successful: \"Successful\";\n</code></pre>"},{"location":"api/enumerations/JobState/#stopped","title":"Stopped","text":"<pre><code>Stopped: \"Stopped\";\n</code></pre>"},{"location":"api/enumerations/JobState/#suspended","title":"Suspended","text":"<pre><code>Suspended: \"Suspended\";\n</code></pre>"},{"location":"api/enumerations/JobState/#resumed","title":"Resumed","text":"<pre><code>Resumed: \"Resumed\";\n</code></pre>"},{"location":"api/enumerations/JobType/","title":"JobType","text":"<p>Enum for job type</p>"},{"location":"api/enumerations/JobType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/JobType/#unattended","title":"Unattended","text":"<pre><code>Unattended: \"Unattended\";\n</code></pre>"},{"location":"api/enumerations/JobType/#attended","title":"Attended","text":"<pre><code>Attended: \"Attended\";\n</code></pre>"},{"location":"api/enumerations/JobType/#serverlessgeneric","title":"ServerlessGeneric","text":"<pre><code>ServerlessGeneric: \"ServerlessGeneric\";\n</code></pre>"},{"location":"api/enumerations/JoinType/","title":"JoinType","text":"<p>Join type for source join criteria</p>"},{"location":"api/enumerations/JoinType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/JoinType/#leftjoin","title":"LeftJoin","text":"<pre><code>LeftJoin: \"LeftJoin\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/","title":"PackageSourceType","text":"<p>Enum for package source type</p>"},{"location":"api/enumerations/PackageSourceType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/PackageSourceType/#manual","title":"Manual","text":"<pre><code>Manual: \"Manual\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#schedule","title":"Schedule","text":"<pre><code>Schedule: \"Schedule\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#queue","title":"Queue","text":"<pre><code>Queue: \"Queue\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#studioweb","title":"StudioWeb","text":"<pre><code>StudioWeb: \"StudioWeb\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#integrationtrigger","title":"IntegrationTrigger","text":"<pre><code>IntegrationTrigger: \"IntegrationTrigger\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#studiodesktop","title":"StudioDesktop","text":"<pre><code>StudioDesktop: \"StudioDesktop\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#automationopspipelines","title":"AutomationOpsPipelines","text":"<pre><code>AutomationOpsPipelines: \"AutomationOpsPipelines\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#apps","title":"Apps","text":"<pre><code>Apps: \"Apps\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#sap","title":"SAP","text":"<pre><code>SAP: \"SAP\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#httptrigger","title":"HttpTrigger","text":"<pre><code>HttpTrigger: \"HttpTrigger\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#httptriggerwithcallback","title":"HttpTriggerWithCallback","text":"<pre><code>HttpTriggerWithCallback: \"HttpTriggerWithCallback\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#robotapi","title":"RobotAPI","text":"<pre><code>RobotAPI: \"RobotAPI\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#assistant","title":"Assistant","text":"<pre><code>Assistant: \"Assistant\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#commandline","title":"CommandLine","text":"<pre><code>CommandLine: \"CommandLine\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#robotnetapi","title":"RobotNetAPI","text":"<pre><code>RobotNetAPI: \"RobotNetAPI\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#autopilot","title":"Autopilot","text":"<pre><code>Autopilot: \"Autopilot\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#testmanager","title":"TestManager","text":"<pre><code>TestManager: \"TestManager\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#agentservice","title":"AgentService","text":"<pre><code>AgentService: \"AgentService\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#processorchestration","title":"ProcessOrchestration","text":"<pre><code>ProcessOrchestration: \"ProcessOrchestration\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#pluginecosystem","title":"PluginEcosystem","text":"<pre><code>PluginEcosystem: \"PluginEcosystem\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#performancetesting","title":"PerformanceTesting","text":"<pre><code>PerformanceTesting: \"PerformanceTesting\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#agenthub","title":"AgentHub","text":"<pre><code>AgentHub: \"AgentHub\";\n</code></pre>"},{"location":"api/enumerations/PackageSourceType/#apiworkflow","title":"ApiWorkflow","text":"<pre><code>ApiWorkflow: \"ApiWorkflow\";\n</code></pre>"},{"location":"api/enumerations/PackageType/","title":"PackageType","text":"<p>Enum for package types</p>"},{"location":"api/enumerations/PackageType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/PackageType/#undefined","title":"Undefined","text":"<pre><code>Undefined: \"Undefined\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#process","title":"Process","text":"<pre><code>Process: \"Process\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#processorchestration","title":"ProcessOrchestration","text":"<pre><code>ProcessOrchestration: \"ProcessOrchestration\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#webapp","title":"WebApp","text":"<pre><code>WebApp: \"WebApp\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#agent","title":"Agent","text":"<pre><code>Agent: \"Agent\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#testautomationprocess","title":"TestAutomationProcess","text":"<pre><code>TestAutomationProcess: \"TestAutomationProcess\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#api","title":"Api","text":"<pre><code>Api: \"Api\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#mcpserver","title":"MCPServer","text":"<pre><code>MCPServer: \"MCPServer\";\n</code></pre>"},{"location":"api/enumerations/PackageType/#businessrules","title":"BusinessRules","text":"<pre><code>BusinessRules: \"BusinessRules\";\n</code></pre>"},{"location":"api/enumerations/ReferenceType/","title":"ReferenceType","text":"<p>Reference types for fields</p>"},{"location":"api/enumerations/ReferenceType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/ReferenceType/#manytoone","title":"ManyToOne","text":"<pre><code>ManyToOne: \"ManyToOne\";\n</code></pre>"},{"location":"api/enumerations/RemoteControlAccess/","title":"RemoteControlAccess","text":"<p>Enum for remote control access</p>"},{"location":"api/enumerations/RemoteControlAccess/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/RemoteControlAccess/#none","title":"None","text":"<pre><code>None: \"None\";\n</code></pre>"},{"location":"api/enumerations/RemoteControlAccess/#readonly","title":"ReadOnly","text":"<pre><code>ReadOnly: \"ReadOnly\";\n</code></pre>"},{"location":"api/enumerations/RemoteControlAccess/#full","title":"Full","text":"<pre><code>Full: \"Full\";\n</code></pre>"},{"location":"api/enumerations/RobotSize/","title":"RobotSize","text":"<p>Enum for robot size</p>"},{"location":"api/enumerations/RobotSize/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/RobotSize/#small","title":"Small","text":"<pre><code>Small: \"Small\";\n</code></pre>"},{"location":"api/enumerations/RobotSize/#standard","title":"Standard","text":"<pre><code>Standard: \"Standard\";\n</code></pre>"},{"location":"api/enumerations/RobotSize/#medium","title":"Medium","text":"<pre><code>Medium: \"Medium\";\n</code></pre>"},{"location":"api/enumerations/RobotSize/#large","title":"Large","text":"<pre><code>Large: \"Large\";\n</code></pre>"},{"location":"api/enumerations/SLADurationUnit/","title":"SLADurationUnit","text":"<p>SLA duration unit</p>"},{"location":"api/enumerations/SLADurationUnit/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/SLADurationUnit/#hours","title":"HOURS","text":"<pre><code>HOURS: \"h\";\n</code></pre>"},{"location":"api/enumerations/SLADurationUnit/#days","title":"DAYS","text":"<pre><code>DAYS: \"d\";\n</code></pre>"},{"location":"api/enumerations/SLADurationUnit/#weeks","title":"WEEKS","text":"<pre><code>WEEKS: \"w\";\n</code></pre>"},{"location":"api/enumerations/SLADurationUnit/#months","title":"MONTHS","text":"<pre><code>MONTHS: \"m\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/","title":"StageTaskType","text":"<p>Case stage task type</p>"},{"location":"api/enumerations/StageTaskType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/StageTaskType/#external_agent","title":"EXTERNAL_AGENT","text":"<pre><code>EXTERNAL_AGENT: \"external-agent\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/#rpa","title":"RPA","text":"<pre><code>RPA: \"rpa\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/#agentic_process","title":"AGENTIC_PROCESS","text":"<pre><code>AGENTIC_PROCESS: \"process\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/#agent","title":"AGENT","text":"<pre><code>AGENT: \"agent\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/#action","title":"ACTION","text":"<pre><code>ACTION: \"action\";\n</code></pre>"},{"location":"api/enumerations/StageTaskType/#api_workflow","title":"API_WORKFLOW","text":"<pre><code>API_WORKFLOW: \"api-workflow\";\n</code></pre>"},{"location":"api/enumerations/StartStrategy/","title":"StartStrategy","text":"<p>Enum for process start strategy</p>"},{"location":"api/enumerations/StartStrategy/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/StartStrategy/#all","title":"All","text":"<pre><code>All: \"All\";\n</code></pre>"},{"location":"api/enumerations/StartStrategy/#specific","title":"Specific","text":"<pre><code>Specific: \"Specific\";\n</code></pre>"},{"location":"api/enumerations/StartStrategy/#robotcount","title":"RobotCount","text":"<pre><code>RobotCount: \"RobotCount\";\n</code></pre>"},{"location":"api/enumerations/StartStrategy/#jobscount","title":"JobsCount","text":"<pre><code>JobsCount: \"JobsCount\";\n</code></pre>"},{"location":"api/enumerations/StartStrategy/#modernjobscount","title":"ModernJobsCount","text":"<pre><code>ModernJobsCount: \"ModernJobsCount\";\n</code></pre>"},{"location":"api/enumerations/StopStrategy/","title":"StopStrategy","text":"<p>Enum for stop strategy</p>"},{"location":"api/enumerations/StopStrategy/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/StopStrategy/#softstop","title":"SoftStop","text":"<pre><code>SoftStop: \"SoftStop\";\n</code></pre>"},{"location":"api/enumerations/StopStrategy/#kill","title":"Kill","text":"<pre><code>Kill: \"Kill\";\n</code></pre>"},{"location":"api/enumerations/TargetFramework/","title":"TargetFramework","text":"<p>Enum for target framework</p>"},{"location":"api/enumerations/TargetFramework/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TargetFramework/#legacy","title":"Legacy","text":"<pre><code>Legacy: \"Legacy\";\n</code></pre>"},{"location":"api/enumerations/TargetFramework/#windows","title":"Windows","text":"<pre><code>Windows: \"Windows\";\n</code></pre>"},{"location":"api/enumerations/TargetFramework/#portable","title":"Portable","text":"<pre><code>Portable: \"Portable\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/","title":"TaskActivityType","text":"<p>Task activity types</p>"},{"location":"api/enumerations/TaskActivityType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskActivityType/#created","title":"Created","text":"<pre><code>Created: \"Created\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#assigned","title":"Assigned","text":"<pre><code>Assigned: \"Assigned\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#reassigned","title":"Reassigned","text":"<pre><code>Reassigned: \"Reassigned\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#unassigned","title":"Unassigned","text":"<pre><code>Unassigned: \"Unassigned\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#saved","title":"Saved","text":"<pre><code>Saved: \"Saved\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#forwarded","title":"Forwarded","text":"<pre><code>Forwarded: \"Forwarded\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#completed","title":"Completed","text":"<pre><code>Completed: \"Completed\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#commented","title":"Commented","text":"<pre><code>Commented: \"Commented\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#deleted","title":"Deleted","text":"<pre><code>Deleted: \"Deleted\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#bulksaved","title":"BulkSaved","text":"<pre><code>BulkSaved: \"BulkSaved\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#bulkcompleted","title":"BulkCompleted","text":"<pre><code>BulkCompleted: \"BulkCompleted\";\n</code></pre>"},{"location":"api/enumerations/TaskActivityType/#firstopened","title":"FirstOpened","text":"<pre><code>FirstOpened: \"FirstOpened\";\n</code></pre>"},{"location":"api/enumerations/TaskPriority/","title":"TaskPriority","text":""},{"location":"api/enumerations/TaskPriority/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskPriority/#low","title":"Low","text":"<pre><code>Low: \"Low\";\n</code></pre>"},{"location":"api/enumerations/TaskPriority/#medium","title":"Medium","text":"<pre><code>Medium: \"Medium\";\n</code></pre>"},{"location":"api/enumerations/TaskPriority/#high","title":"High","text":"<pre><code>High: \"High\";\n</code></pre>"},{"location":"api/enumerations/TaskPriority/#critical","title":"Critical","text":"<pre><code>Critical: \"Critical\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaCriteria/","title":"TaskSlaCriteria","text":""},{"location":"api/enumerations/TaskSlaCriteria/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskSlaCriteria/#taskcreated","title":"TaskCreated","text":"<pre><code>TaskCreated: \"TaskCreated\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaCriteria/#taskassigned","title":"TaskAssigned","text":"<pre><code>TaskAssigned: \"TaskAssigned\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaCriteria/#taskcompleted","title":"TaskCompleted","text":"<pre><code>TaskCompleted: \"TaskCompleted\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaStatus/","title":"TaskSlaStatus","text":""},{"location":"api/enumerations/TaskSlaStatus/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskSlaStatus/#overduelater","title":"OverdueLater","text":"<pre><code>OverdueLater: \"OverdueLater\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaStatus/#overduesoon","title":"OverdueSoon","text":"<pre><code>OverdueSoon: \"OverdueSoon\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaStatus/#overdue","title":"Overdue","text":"<pre><code>Overdue: \"Overdue\";\n</code></pre>"},{"location":"api/enumerations/TaskSlaStatus/#completedintime","title":"CompletedInTime","text":"<pre><code>CompletedInTime: \"CompletedInTime\";\n</code></pre>"},{"location":"api/enumerations/TaskSourceName/","title":"TaskSourceName","text":""},{"location":"api/enumerations/TaskSourceName/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskSourceName/#agent","title":"Agent","text":"<pre><code>Agent: \"Agent\";\n</code></pre>"},{"location":"api/enumerations/TaskSourceName/#workflow","title":"Workflow","text":"<pre><code>Workflow: \"Workflow\";\n</code></pre>"},{"location":"api/enumerations/TaskSourceName/#maestro","title":"Maestro","text":"<pre><code>Maestro: \"Maestro\";\n</code></pre>"},{"location":"api/enumerations/TaskSourceName/#default","title":"Default","text":"<pre><code>Default: \"Default\";\n</code></pre>"},{"location":"api/enumerations/TaskStatus/","title":"TaskStatus","text":""},{"location":"api/enumerations/TaskStatus/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskStatus/#unassigned","title":"Unassigned","text":"<pre><code>Unassigned: \"Unassigned\";\n</code></pre>"},{"location":"api/enumerations/TaskStatus/#pending","title":"Pending","text":"<pre><code>Pending: \"Pending\";\n</code></pre>"},{"location":"api/enumerations/TaskStatus/#completed","title":"Completed","text":"<pre><code>Completed: \"Completed\";\n</code></pre>"},{"location":"api/enumerations/TaskType/","title":"TaskType","text":""},{"location":"api/enumerations/TaskType/#enumeration-members","title":"Enumeration Members","text":""},{"location":"api/enumerations/TaskType/#form","title":"Form","text":"<pre><code>Form: \"FormTask\";\n</code></pre>"},{"location":"api/enumerations/TaskType/#external","title":"External","text":"<pre><code>External: \"ExternalTask\";\n</code></pre>"},{"location":"api/enumerations/TaskType/#app","title":"App","text":"<pre><code>App: \"AppTask\";\n</code></pre>"},{"location":"api/functions/createCaseInstanceWithMethods/","title":"createCaseInstanceWithMethods","text":"<pre><code>function createCaseInstanceWithMethods(instanceData: RawCaseInstanceGetResponse, service: CaseInstancesServiceModel): CaseInstanceGetResponse;\n</code></pre> <p>Creates an actionable case instance by combining API case instance data with operational methods.</p>"},{"location":"api/functions/createCaseInstanceWithMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>instanceData</code> <code>RawCaseInstanceGetResponse</code> The case instance data from API <code>service</code> <code>CaseInstancesServiceModel</code> The case instance service instance"},{"location":"api/functions/createCaseInstanceWithMethods/#returns","title":"Returns","text":"<p><code>CaseInstanceGetResponse</code></p> <p>A case instance object with added methods</p>"},{"location":"api/functions/createEntityWithMethods/","title":"createEntityWithMethods","text":"<pre><code>function createEntityWithMethods(entityData: RawEntityGetResponse, service: EntityServiceModel): EntityGetResponse;\n</code></pre> <p>Creates an actionable entity metadata by combining entity with operational methods</p>"},{"location":"api/functions/createEntityWithMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>entityData</code> <code>RawEntityGetResponse</code> Entity metadata <code>service</code> <code>EntityServiceModel</code> The entity service instance"},{"location":"api/functions/createEntityWithMethods/#returns","title":"Returns","text":"<p><code>EntityGetResponse</code></p> <p>Entity metadata with added methods</p>"},{"location":"api/functions/createProcessInstanceWithMethods/","title":"createProcessInstanceWithMethods","text":"<pre><code>function createProcessInstanceWithMethods(instanceData: RawProcessInstanceGetResponse, service: ProcessInstancesServiceModel): ProcessInstanceGetResponse;\n</code></pre> <p>Creates an actionable process instance by combining API process instance data with operational methods.</p>"},{"location":"api/functions/createProcessInstanceWithMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>instanceData</code> <code>RawProcessInstanceGetResponse</code> The process instance data from API <code>service</code> <code>ProcessInstancesServiceModel</code> The process instance service instance"},{"location":"api/functions/createProcessInstanceWithMethods/#returns","title":"Returns","text":"<p><code>ProcessInstanceGetResponse</code></p> <p>A process instance object with added methods</p>"},{"location":"api/functions/createTaskWithMethods/","title":"createTaskWithMethods","text":"<pre><code>function createTaskWithMethods(taskData: \n  | RawTaskGetResponse\n  | RawTaskCreateResponse, service: TaskServiceModel): \n  | TaskGetResponse\n  | TaskCreateResponse;\n</code></pre> <p>Creates an actionable task by combining API task data with operational methods.</p>"},{"location":"api/functions/createTaskWithMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>taskData</code> | <code>RawTaskGetResponse</code> | <code>RawTaskCreateResponse</code> The task data from API <code>service</code> <code>TaskServiceModel</code> The task service instance"},{"location":"api/functions/createTaskWithMethods/#returns","title":"Returns","text":"<p>| <code>TaskGetResponse</code>   | <code>TaskCreateResponse</code></p> <p>A task object with added methods</p>"},{"location":"api/functions/getErrorDetails/","title":"getErrorDetails","text":"<pre><code>function getErrorDetails(error: unknown): {\n  message: string;\n  statusCode?: number;\n};\n</code></pre> <p>Helper to get error details in a safe way</p>"},{"location":"api/functions/getErrorDetails/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/getErrorDetails/#returns","title":"Returns","text":"<pre><code>{\n  message: string;\n  statusCode?: number;\n}\n</code></pre>"},{"location":"api/functions/getErrorDetails/#message","title":"message","text":"<pre><code>message: string;\n</code></pre>"},{"location":"api/functions/getErrorDetails/#statuscode","title":"statusCode?","text":"<pre><code>optional statusCode: number;\n</code></pre>"},{"location":"api/functions/getLimitedPageSize/","title":"getLimitedPageSize","text":"<pre><code>function getLimitedPageSize(pageSize?: number): number;\n</code></pre> <p>Limits the page size to the maximum allowed value</p>"},{"location":"api/functions/getLimitedPageSize/#parameters","title":"Parameters","text":"Parameter Type Description <code>pageSize?</code> <code>number</code> Requested page size"},{"location":"api/functions/getLimitedPageSize/#returns","title":"Returns","text":"<p><code>number</code></p> <p>Limited page size value</p>"},{"location":"api/functions/isAuthenticationError/","title":"isAuthenticationError","text":"<pre><code>function isAuthenticationError(error: unknown): error is AuthenticationError;\n</code></pre> <p>Type guard to check if an error is an AuthenticationError</p>"},{"location":"api/functions/isAuthenticationError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isAuthenticationError/#returns","title":"Returns","text":"<p><code>error is AuthenticationError</code></p>"},{"location":"api/functions/isAuthorizationError/","title":"isAuthorizationError","text":"<pre><code>function isAuthorizationError(error: unknown): error is AuthorizationError;\n</code></pre> <p>Type guard to check if an error is an AuthorizationError</p>"},{"location":"api/functions/isAuthorizationError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isAuthorizationError/#returns","title":"Returns","text":"<p><code>error is AuthorizationError</code></p>"},{"location":"api/functions/isNetworkError/","title":"isNetworkError","text":"<pre><code>function isNetworkError(error: unknown): error is NetworkError;\n</code></pre> <p>Type guard to check if an error is a NetworkError</p>"},{"location":"api/functions/isNetworkError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isNetworkError/#returns","title":"Returns","text":"<p><code>error is NetworkError</code></p>"},{"location":"api/functions/isNotFoundError/","title":"isNotFoundError","text":"<pre><code>function isNotFoundError(error: unknown): error is NotFoundError;\n</code></pre> <p>Type guard to check if an error is a NotFoundError</p>"},{"location":"api/functions/isNotFoundError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isNotFoundError/#returns","title":"Returns","text":"<p><code>error is NotFoundError</code></p>"},{"location":"api/functions/isRateLimitError/","title":"isRateLimitError","text":"<pre><code>function isRateLimitError(error: unknown): error is RateLimitError;\n</code></pre> <p>Type guard to check if an error is a RateLimitError</p>"},{"location":"api/functions/isRateLimitError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isRateLimitError/#returns","title":"Returns","text":"<p><code>error is RateLimitError</code></p>"},{"location":"api/functions/isServerError/","title":"isServerError","text":"<pre><code>function isServerError(error: unknown): error is ServerError;\n</code></pre> <p>Type guard to check if an error is a ServerError</p>"},{"location":"api/functions/isServerError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isServerError/#returns","title":"Returns","text":"<p><code>error is ServerError</code></p>"},{"location":"api/functions/isUiPathError/","title":"isUiPathError","text":"<pre><code>function isUiPathError(error: unknown): error is UiPathError;\n</code></pre> <p>Type guard to check if an error is a UiPathError</p>"},{"location":"api/functions/isUiPathError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isUiPathError/#returns","title":"Returns","text":"<p><code>error is UiPathError</code></p>"},{"location":"api/functions/isValidationError/","title":"isValidationError","text":"<pre><code>function isValidationError(error: unknown): error is ValidationError;\n</code></pre> <p>Type guard to check if an error is a ValidationError</p>"},{"location":"api/functions/isValidationError/#parameters","title":"Parameters","text":"Parameter Type <code>error</code> <code>unknown</code>"},{"location":"api/functions/isValidationError/#returns","title":"Returns","text":"<p><code>error is ValidationError</code></p>"},{"location":"api/functions/track/","title":"Track","text":"<pre><code>function track(nameOrOptions?: string | TrackOptions, options?: TrackOptions): MethodDecorator | (target: any) =&gt; any;\n</code></pre> <p>Track decorator that can be used to automatically track function calls</p> <p>Usage: @track(\"Service.Method\") function myFunction() { ... }</p> <p>@track(\"Queue.GetAll\") async getAll() { ... }</p> <p>@track(\"Tasks.Create\") async create() { ... }</p> <p>@track(\"Assets.Update\", { condition: false }) function myFunction() { ... }</p> <p>@track(\"Processes.Start\", { attributes: { customProp: \"value\" } }) function myFunction() { ... }</p>"},{"location":"api/functions/track/#parameters","title":"Parameters","text":"Parameter Type <code>nameOrOptions?</code> <code>string</code> | <code>TrackOptions</code> <code>options?</code> <code>TrackOptions</code>"},{"location":"api/functions/track/#returns","title":"Returns","text":"<p><code>MethodDecorator</code> | (<code>target</code>: <code>any</code>) =&gt; <code>any</code></p>"},{"location":"api/functions/trackEvent/","title":"trackEvent","text":"<pre><code>function trackEvent(\n   eventName: string, \n   name?: string, \n   attributes?: TelemetryAttributes): void;\n</code></pre> <p>Direct tracking function</p>"},{"location":"api/functions/trackEvent/#parameters","title":"Parameters","text":"Parameter Type <code>eventName</code> <code>string</code> <code>name?</code> <code>string</code> <code>attributes?</code> <code>TelemetryAttributes</code>"},{"location":"api/functions/trackEvent/#returns","title":"Returns","text":"<p><code>void</code></p>"},{"location":"api/interfaces/ArgumentMetadata/","title":"ArgumentMetadata","text":"<p>Interface for argument metadata</p>"},{"location":"api/interfaces/ArgumentMetadata/#properties","title":"Properties","text":"Property Type <code>input?</code> <code>string</code> <code>output?</code> <code>string</code>"},{"location":"api/interfaces/AssetGetResponse/","title":"AssetGetResponse","text":"<p>Interface for asset response</p>"},{"location":"api/interfaces/AssetGetResponse/#properties","title":"Properties","text":"Property Type <code>key</code> <code>string</code> <code>name</code> <code>string</code> <code>id</code> <code>number</code> <code>canBeDeleted</code> <code>boolean</code> <code>valueScope</code> <code>AssetValueScope</code> <code>valueType</code> <code>AssetValueType</code> <code>value</code> <code>null</code> | <code>string</code> <code>credentialStoreId</code> <code>null</code> | <code>number</code> <code>keyValueList</code> <code>CustomKeyValuePair</code>[] <code>hasDefaultValue</code> <code>boolean</code> <code>description</code> <code>null</code> | <code>string</code> <code>foldersCount</code> <code>number</code> <code>lastModifiedTime</code> <code>null</code> | <code>string</code> <code>lastModifierUserId</code> <code>null</code> | <code>number</code> <code>createdTime</code> <code>string</code> <code>creatorUserId</code> <code>number</code>"},{"location":"api/interfaces/AssetServiceModel/","title":"Assets","text":"<p>Service for managing UiPath Assets.</p> <p>Assets are key-value pairs that can be used to store configuration data, credentials, and other settings used by automation processes. UiPath Assets Guide</p>"},{"location":"api/interfaces/AssetServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/AssetServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;AssetGetResponse&gt; : NonPaginatedResponse&lt;AssetGetResponse&gt;&gt;;\n</code></pre> <p>Gets all assets across folders with optional filtering</p>"},{"location":"api/interfaces/AssetServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>AssetGetAllOptions</code> <code>AssetGetAllOptions</code>"},{"location":"api/interfaces/AssetServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options including optional folderId and pagination options"},{"location":"api/interfaces/AssetServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>AssetGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>AssetGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of assets NonPaginatedResponse or a PaginatedResponse when pagination options are used. AssetGetResponse"},{"location":"api/interfaces/AssetServiceModel/#example","title":"Example","text":"<pre><code>// Standard array return\nconst assets = await sdk.assets.getAll();\n\n// With folder\nconst folderAssets = await sdk.assets.getAll({ folderId: &lt;folderId&gt; });\n\n// First page with pagination\nconst page1 = await sdk.assets.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.assets.getAll({ cursor: page1.nextCursor });\n}\n\n// Jump to specific page\nconst page5 = await sdk.assets.getAll({\n  jumpToPage: 5,\n  pageSize: 10\n});\n</code></pre>"},{"location":"api/interfaces/AssetServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(\n   id: number, \n   folderId: number, \n   options?: BaseOptions): Promise&lt;AssetGetResponse&gt;;\n</code></pre> <p>Gets a single asset by ID</p>"},{"location":"api/interfaces/AssetServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>number</code> Asset ID <code>folderId</code> <code>number</code> Required folder ID <code>options?</code> <code>BaseOptions</code> Optional query parameters (expand, select)"},{"location":"api/interfaces/AssetServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>AssetGetResponse</code>&gt;</p> <p>Promise resolving to a single asset AssetGetResponse</p>"},{"location":"api/interfaces/AssetServiceModel/#example_1","title":"Example","text":"<pre><code>// Get asset by ID\nconst asset = await sdk.assets.getById(&lt;assetId&gt;, &lt;folderId&gt;);\n</code></pre>"},{"location":"api/interfaces/BaseConfig/","title":"BaseConfig","text":""},{"location":"api/interfaces/BaseConfig/#properties","title":"Properties","text":"Property Type <code>baseUrl</code> <code>string</code> <code>orgName</code> <code>string</code> <code>tenantName</code> <code>string</code>"},{"location":"api/interfaces/BaseOptions/","title":"BaseOptions","text":""},{"location":"api/interfaces/BaseOptions/#extended-by","title":"Extended by","text":"<ul> <li><code>RequestOptions</code></li> <li><code>BucketGetUriOptions</code></li> </ul>"},{"location":"api/interfaces/BaseOptions/#properties","title":"Properties","text":"Property Type <code>expand?</code> <code>string</code> <code>select?</code> <code>string</code>"},{"location":"api/interfaces/BlobItem/","title":"BlobItem","text":"<p>Represents a file or blob in a bucket</p>"},{"location":"api/interfaces/BlobItem/#properties","title":"Properties","text":"Property Type Description <code>path</code> <code>string</code> Full path to the blob <code>contentType</code> <code>string</code> Content type of the blob <code>size</code> <code>number</code> Size of the blob in bytes <code>lastModified</code> <code>null</code> | <code>string</code> Last modified timestamp"},{"location":"api/interfaces/BodyOptions/","title":"BodyOptions","text":"<p>Options for request body transformation</p>"},{"location":"api/interfaces/BodyOptions/#properties","title":"Properties","text":"Property Type Description <code>stringify?</code> <code>boolean</code> Whether to stringify the body <code>contentType?</code> <code>string</code> Content type override"},{"location":"api/interfaces/BucketGetFileMetaDataOptions/","title":"BucketGetFileMetaDataOptions","text":"<p>Request options for getting files in a bucket</p>"},{"location":"api/interfaces/BucketGetFileMetaDataOptions/#properties","title":"Properties","text":"Property Type Description <code>prefix?</code> <code>string</code> The path prefix to filter files by"},{"location":"api/interfaces/BucketGetFileMetaDataResponse/","title":"BucketGetFileMetaDataResponse","text":"<p>Response from the GetFiles API</p>"},{"location":"api/interfaces/BucketGetFileMetaDataResponse/#properties","title":"Properties","text":"Property Type Description <code>blobItems</code> <code>BlobItem</code>[] Array of blob items in the bucket <code>continuationToken</code> <code>null</code> | <code>string</code> Token for retrieving the next set of results"},{"location":"api/interfaces/BucketGetResponse/","title":"BucketGetResponse","text":""},{"location":"api/interfaces/BucketGetResponse/#properties","title":"Properties","text":"Property Type <code>id</code> <code>number</code> <code>name</code> <code>string</code> <code>description</code> <code>null</code> | <code>string</code> <code>identifier</code> <code>string</code> <code>storageProvider</code> <code>null</code> | <code>string</code> <code>storageParameters</code> <code>null</code> | <code>string</code> <code>storageContainer</code> <code>null</code> | <code>string</code> <code>options</code> <code>BucketOptions</code> <code>credentialStoreId</code> <code>null</code> | <code>number</code> <code>externalName</code> <code>null</code> | <code>string</code> <code>password</code> <code>null</code> | <code>string</code> <code>foldersCount</code> <code>number</code>"},{"location":"api/interfaces/BucketGetUriOptions/","title":"BucketGetUriOptions","text":""},{"location":"api/interfaces/BucketGetUriOptions/#extends","title":"Extends","text":"<ul> <li><code>BaseOptions</code></li> </ul>"},{"location":"api/interfaces/BucketGetUriOptions/#properties","title":"Properties","text":"Property Type Description <code>expand?</code> <code>string</code> - <code>select?</code> <code>string</code> - <code>bucketId</code> <code>number</code> The ID of the bucket <code>folderId</code> <code>number</code> The ID of the folder <code>path</code> <code>string</code> The full path to the BlobFile <code>expiryInMinutes?</code> <code>number</code> URL expiration time in minutes (0 for default)"},{"location":"api/interfaces/BucketGetUriResponse/","title":"BucketGetUriResponse","text":"<p>Response from the GetReadUri API</p>"},{"location":"api/interfaces/BucketGetUriResponse/#properties","title":"Properties","text":"Property Type Description <code>uri</code> <code>string</code> The URI for accessing the blob file <code>httpMethod</code> <code>string</code> HTTP method to use with the URI <code>requiresAuth</code> <code>boolean</code> Whether authentication is required to access the URI <code>headers</code> <code>ResponseDictionary</code> Headers to be included in the request"},{"location":"api/interfaces/BucketServiceModel/","title":"Buckets","text":"<p>Service for managing UiPath storage Buckets.</p> <p>Buckets are cloud storage containers that can be used to store and manage files used by automation processes. UiPath Buckets Guide</p>"},{"location":"api/interfaces/BucketServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/BucketServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;BucketGetResponse&gt; : NonPaginatedResponse&lt;BucketGetResponse&gt;&gt;;\n</code></pre> <p>Gets all buckets across folders with optional filtering</p> <p>The method returns either: - A NonPaginatedResponse with data and totalCount (when no pagination parameters are provided) - A paginated result with navigation cursors (when any pagination parameter is provided)</p>"},{"location":"api/interfaces/BucketServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>BucketGetAllOptions</code> <code>BucketGetAllOptions</code>"},{"location":"api/interfaces/BucketServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options including optional folderId and pagination options"},{"location":"api/interfaces/BucketServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>BucketGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>BucketGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of buckets NonPaginatedResponse or a PaginatedResponse when pagination options are used. BucketGetResponse"},{"location":"api/interfaces/BucketServiceModel/#example","title":"Example","text":"<pre><code>// Get all buckets across folders\nconst buckets = await sdk.buckets.getAll();\n\n// Get buckets within a specific folder\nconst buckets = await sdk.buckets.getAll({ \n  folderId: &lt;folderId&gt;\n});\n\n// Get buckets with filtering\nconst buckets = await sdk.buckets.getAll({ \n  filter: \"name eq 'MyBucket'\"\n});\n\n// First page with pagination\nconst page1 = await sdk.buckets.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.buckets.getAll({ cursor: page1.nextCursor });\n}\n\n// Jump to specific page\nconst page5 = await sdk.buckets.getAll({\n  jumpToPage: 5,\n  pageSize: 10\n});\n</code></pre>"},{"location":"api/interfaces/BucketServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(\n   bucketId: number, \n   folderId: number, \n   options?: BaseOptions): Promise&lt;BucketGetResponse&gt;;\n</code></pre> <p>Gets a single bucket by ID</p>"},{"location":"api/interfaces/BucketServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>bucketId</code> <code>number</code> Bucket ID <code>folderId</code> <code>number</code> Required folder ID <code>options?</code> <code>BaseOptions</code> Optional query parameters"},{"location":"api/interfaces/BucketServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>BucketGetResponse</code>&gt;</p> <p>Promise resolving to a bucket definition BucketGetResponse</p>"},{"location":"api/interfaces/BucketServiceModel/#example_1","title":"Example","text":"<pre><code>// Get bucket by ID\nconst bucket = await sdk.buckets.getById(&lt;bucketId&gt;, &lt;folderId&gt;);\n</code></pre>"},{"location":"api/interfaces/BucketServiceModel/#getfilemetadata","title":"getFileMetaData()","text":"<pre><code>getFileMetaData&lt;T&gt;(\n   bucketId: number, \n   folderId: number, \n   options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;BlobItem&gt; : NonPaginatedResponse&lt;BlobItem&gt;&gt;;\n</code></pre> <p>Gets metadata for files in a bucket with optional filtering and pagination</p> <p>The method returns either: - A NonPaginatedResponse with items array (when no pagination parameters are provided) - A PaginatedResponse with navigation cursors (when any pagination parameter is provided)</p>"},{"location":"api/interfaces/BucketServiceModel/#type-parameters_1","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>BucketGetFileMetaDataWithPaginationOptions</code> <code>BucketGetFileMetaDataWithPaginationOptions</code>"},{"location":"api/interfaces/BucketServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>bucketId</code> <code>number</code> The ID of the bucket to get file metadata from <code>folderId</code> <code>number</code> Required folder ID for organization unit context <code>options?</code> <code>T</code> Optional parameters for filtering, pagination and access URL generation"},{"location":"api/interfaces/BucketServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>BlobItem</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>BlobItem</code>&gt;&gt;</p> <p>Promise resolving to either an array of files metadata NonPaginatedResponse or a PaginatedResponse when pagination options are used. BlobItem"},{"location":"api/interfaces/BucketServiceModel/#example_2","title":"Example","text":"<pre><code>// Get metadata for all files in a bucket\nconst fileMetadata = await sdk.buckets.getFileMetaData(&lt;bucketId&gt;, &lt;folderId&gt;);\n\n// Get file metadata with a specific prefix\nconst fileMetadata = await sdk.buckets.getFileMetaData(&lt;bucketId&gt;, &lt;folderId&gt;, {\n  prefix: '/folder1'\n});\n\n// First page with pagination\nconst page1 = await sdk.buckets.getFileMetaData(&lt;bucketId&gt;, &lt;folderId&gt;, { pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.buckets.getFileMetaData(&lt;bucketId&gt;, &lt;folderId&gt;, { cursor: page1.nextCursor });\n}\n</code></pre>"},{"location":"api/interfaces/BucketServiceModel/#getreaduri","title":"getReadUri()","text":"<pre><code>getReadUri(options: BucketGetUriOptions): Promise&lt;BucketGetUriResponse&gt;;\n</code></pre> <p>Gets a direct download URL for a file in the bucket</p>"},{"location":"api/interfaces/BucketServiceModel/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>BucketGetUriOptions</code> Contains bucketId, folderId, file path and optional expiry time"},{"location":"api/interfaces/BucketServiceModel/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>BucketGetUriResponse</code>&gt;</p> <p>Promise resolving to blob file access information BucketGetUriResponse</p>"},{"location":"api/interfaces/BucketServiceModel/#example_3","title":"Example","text":"<pre><code>// Get download URL for a file\nconst fileAccess = await sdk.buckets.getReadUri({\n  bucketId: &lt;bucketId&gt;, \n  folderId: &lt;folderId&gt;,\n  path: '/folder/file.pdf'\n});\n</code></pre>"},{"location":"api/interfaces/BucketServiceModel/#uploadfile","title":"uploadFile()","text":"<pre><code>uploadFile(options: BucketUploadFileOptions): Promise&lt;BucketUploadResponse&gt;;\n</code></pre> <p>Uploads a file to a bucket</p>"},{"location":"api/interfaces/BucketServiceModel/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>BucketUploadFileOptions</code> Options for file upload including bucket ID, folder ID, path, content, and optional parameters"},{"location":"api/interfaces/BucketServiceModel/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>BucketUploadResponse</code>&gt;</p> <p>Promise resolving bucket upload response BucketUploadResponse</p>"},{"location":"api/interfaces/BucketServiceModel/#example_4","title":"Example","text":"<pre><code>// Upload a file from browser\nconst file = new File(['file content'], 'example.txt');\nconst result = await sdk.buckets.uploadFile({\n  bucketId: &lt;bucketId&gt;,\n  folderId: &lt;folderId&gt;, \n  path: '/folder/example.txt',\n  content: file\n});\n\n// In Node env with Buffer\nconst buffer = Buffer.from('file content');\nconst result = await sdk.buckets.uploadFile({\n  bucketId: &lt;bucketId&gt;,\n  folderId: &lt;folderId&gt;,\n  path: '/folder/example.txt',\n  content: buffer,\n});\n</code></pre>"},{"location":"api/interfaces/BucketUploadFileOptions/","title":"BucketUploadFileOptions","text":"<p>Options for uploading files to a bucket</p>"},{"location":"api/interfaces/BucketUploadFileOptions/#properties","title":"Properties","text":"Property Type Description <code>bucketId</code> <code>number</code> The ID of the bucket to upload to <code>folderId</code> <code>number</code> The folder/organization unit ID for context <code>path</code> <code>string</code> Path where the file should be stored in the bucket <code>content</code> <code>Blob</code> | <code>Buffer</code>&lt;<code>ArrayBufferLike</code>&gt; | <code>File</code> File content to upload"},{"location":"api/interfaces/BucketUploadResponse/","title":"BucketUploadResponse","text":"<p>Response from file upload operations</p>"},{"location":"api/interfaces/BucketUploadResponse/#properties","title":"Properties","text":"Property Type Description <code>success</code> <code>boolean</code> Whether the upload was successful <code>statusCode</code> <code>number</code> HTTP status code from the upload operation"},{"location":"api/interfaces/CaseAppConfig/","title":"CaseAppConfig","text":"<p>Case App Configuration from case JSON</p>"},{"location":"api/interfaces/CaseAppConfig/#properties","title":"Properties","text":"Property Type <code>caseSummary?</code> <code>string</code> <code>overview?</code> <code>CaseAppOverview</code>[]"},{"location":"api/interfaces/CaseAppOverview/","title":"CaseAppOverview","text":"<p>Case App Configuration Overview</p>"},{"location":"api/interfaces/CaseAppOverview/#properties","title":"Properties","text":"Property Type <code>title</code> <code>string</code> <code>details</code> <code>string</code>"},{"location":"api/interfaces/CaseGetAllResponse/","title":"CaseGetAllResponse","text":"<p>Case information with instance statistics</p>"},{"location":"api/interfaces/CaseGetAllResponse/#properties","title":"Properties","text":"Property Type Description <code>processKey</code> <code>string</code> Unique key identifying the case process <code>packageId</code> <code>string</code> Package identifier <code>name</code> <code>string</code> Case name <code>folderKey</code> <code>string</code> Folder key of the folder where case process is located <code>folderName</code> <code>string</code> Name of the folder where case process is located <code>packageVersions</code> <code>string</code>[] Available package versions <code>versionCount</code> <code>number</code> Total number of versions <code>pendingCount</code> <code>number</code> Case instance count - pending <code>runningCount</code> <code>number</code> Case instance count - running <code>completedCount</code> <code>number</code> Case instance count - completed <code>pausedCount</code> <code>number</code> Case instance count - paused <code>cancelledCount</code> <code>number</code> Case instance count - cancelled <code>faultedCount</code> <code>number</code> Case instance count - faulted <code>retryingCount</code> <code>number</code> Case instance count - retrying <code>resumingCount</code> <code>number</code> Case instance count - resuming <code>pausingCount</code> <code>number</code> Case instance count - pausing <code>cancelingCount</code> <code>number</code> Case instance count - canceling"},{"location":"api/interfaces/CaseGetStageResponse/","title":"CaseGetStageResponse","text":"<p>Stage information from case instances</p>"},{"location":"api/interfaces/CaseGetStageResponse/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>name</code> <code>string</code> <code>sla?</code> <code>StageSLA</code> <code>status</code> <code>string</code> <code>tasks</code> <code>StageTask</code>[][]"},{"location":"api/interfaces/CaseInstanceExecutionHistoryResponse/","title":"CaseInstanceExecutionHistoryResponse","text":"<p>Response for getting case instance element executions</p>"},{"location":"api/interfaces/CaseInstanceExecutionHistoryResponse/#properties","title":"Properties","text":"Property Type Description <code>creationUserKey</code> <code>null</code> | <code>string</code> - <code>folderKey</code> <code>string</code> - <code>instanceDisplayName</code> <code>string</code> - <code>instanceId</code> <code>string</code> - <code>packageId</code> <code>string</code> - <code>packageKey</code> <code>string</code> - <code>packageVersion</code> <code>string</code> - <code>processKey</code> <code>string</code> - <code>source</code> <code>string</code> - <code>status</code> <code>string</code> Element status (e.g., \"Completed\", \"Faulted\", \"Running\", \"Pausing\", \"Canceling\") <code>startedTime</code> <code>string</code> - <code>completedTime</code> <code>null</code> | <code>string</code> - <code>elementExecutions</code> <code>ElementExecutionMetadata</code>[] -"},{"location":"api/interfaces/CaseInstanceGetAllOptions/","title":"CaseInstanceGetAllOptions","text":"<p>Query options for getting case instances</p>"},{"location":"api/interfaces/CaseInstanceGetAllOptions/#properties","title":"Properties","text":"Property Type <code>packageId?</code> <code>string</code> <code>packageVersion?</code> <code>string</code> <code>processKey?</code> <code>string</code> <code>errorCode?</code> <code>string</code>"},{"location":"api/interfaces/CaseInstanceMethods/","title":"CaseInstanceMethods","text":""},{"location":"api/interfaces/CaseInstanceMethods/#methods","title":"Methods","text":""},{"location":"api/interfaces/CaseInstanceMethods/#close","title":"close()","text":"<pre><code>close(options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Closes/cancels this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional close options with comment"},{"location":"api/interfaces/CaseInstanceMethods/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/CaseInstanceMethods/#pause","title":"pause()","text":"<pre><code>pause(options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Pauses this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional pause options with comment"},{"location":"api/interfaces/CaseInstanceMethods/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/CaseInstanceMethods/#resume","title":"resume()","text":"<pre><code>resume(options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Resumes this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional resume options with comment"},{"location":"api/interfaces/CaseInstanceMethods/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/CaseInstanceMethods/#getexecutionhistory","title":"getExecutionHistory()","text":"<pre><code>getExecutionHistory(): Promise&lt;CaseInstanceExecutionHistoryResponse&gt;;\n</code></pre> <p>Gets execution history for this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseInstanceExecutionHistoryResponse</code>&gt;</p> <p>Promise resolving to instance execution history</p>"},{"location":"api/interfaces/CaseInstanceMethods/#getstages","title":"getStages()","text":"<pre><code>getStages(): Promise&lt;CaseGetStageResponse[]&gt;;\n</code></pre> <p>Gets stages and their associated tasks for this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseGetStageResponse</code>[]&gt;</p> <p>Promise resolving to an array of case stages with their tasks and status</p>"},{"location":"api/interfaces/CaseInstanceMethods/#getactiontasks","title":"getActionTasks()","text":"<pre><code>getActionTasks&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;TaskGetResponse&gt; : NonPaginatedResponse&lt;TaskGetResponse&gt;&gt;;\n</code></pre> <p>Gets human in the loop tasks associated with this case instance</p>"},{"location":"api/interfaces/CaseInstanceMethods/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>TaskGetAllOptions</code> <code>TaskGetAllOptions</code>"},{"location":"api/interfaces/CaseInstanceMethods/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Optional filtering and pagination options"},{"location":"api/interfaces/CaseInstanceMethods/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt;&gt;</p> <p>Promise resolving to human in the loop tasks associated with the case instance</p>"},{"location":"api/interfaces/CaseInstanceOperationOptions/","title":"CaseInstanceOperationOptions","text":"<p>Request for case instance operations (close, pause, resume)</p>"},{"location":"api/interfaces/CaseInstanceOperationOptions/#properties","title":"Properties","text":"Property Type <code>comment?</code> <code>string</code>"},{"location":"api/interfaces/CaseInstanceOperationResponse/","title":"CaseInstanceOperationResponse","text":"<p>Response for case instance operations (close, pause, resume)</p>"},{"location":"api/interfaces/CaseInstanceOperationResponse/#properties","title":"Properties","text":"Property Type <code>instanceId</code> <code>string</code> <code>status</code> <code>string</code>"},{"location":"api/interfaces/CaseInstanceRun/","title":"CaseInstanceRun","text":"<p>Case instance run information</p>"},{"location":"api/interfaces/CaseInstanceRun/#properties","title":"Properties","text":"Property Type <code>runId</code> <code>string</code> <code>status</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>completedTime</code> <code>string</code>"},{"location":"api/interfaces/CaseInstancesServiceModel/","title":"Case Instances","text":"<p>Service model for managing Maestro Case Instances</p> <p>Maestro case instances are the running instances of Maestro cases.</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/CaseInstancesServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;CaseInstanceGetResponse&gt; : NonPaginatedResponse&lt;CaseInstanceGetResponse&gt;&gt;;\n</code></pre> <p>Get all case instances with optional filtering and pagination</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>CaseInstanceGetAllWithPaginationOptions</code> <code>CaseInstanceGetAllWithPaginationOptions</code>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query parameters for filtering instances and pagination"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>CaseInstanceGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>CaseInstanceGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of case instances NonPaginatedResponse or a PaginatedResponse when pagination options are used. CaseInstanceGetResponse"},{"location":"api/interfaces/CaseInstancesServiceModel/#example","title":"Example","text":"<pre><code>// Get all case instances (non-paginated)\nconst instances = await sdk.maestro.cases.instances.getAll();\n\n// Cancel/Close faulted instances using methods directly on instances\nfor (const instance of instances.items) {\n  if (instance.latestRunStatus === 'Faulted') {\n    await instance.close({ comment: 'Closing faulted case instance' });\n  }\n}\n\n// With filtering\nconst instances = await sdk.maestro.cases.instances.getAll({\n  processKey: 'MyCaseProcess'\n});\n\n// First page with pagination\nconst page1 = await sdk.maestro.cases.instances.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.maestro.cases.instances.getAll({ cursor: page1.nextCursor });\n}\n</code></pre>"},{"location":"api/interfaces/CaseInstancesServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(instanceId: string, folderKey: string): Promise&lt;CaseInstanceGetResponse&gt;;\n</code></pre> <p>Get a specific case instance by ID</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The case instance ID <code>folderKey</code> <code>string</code> Required folder key"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseInstanceGetResponse</code>&gt;</p> <p>Promise resolving to case instance with methods CaseInstanceGetResponse</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#example_1","title":"Example","text":"<pre><code>// Get a specific case instance\nconst instance = await sdk.maestro.cases.instances.getById(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Access instance properties\nconsole.log(`Status: ${instance.latestRunStatus}`);\n</code></pre>"},{"location":"api/interfaces/CaseInstancesServiceModel/#close","title":"close()","text":"<pre><code>close(\n   instanceId: string, \n   folderKey: string, \n   options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Close/Cancel a case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to cancel <code>folderKey</code> <code>string</code> Required folder key <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional close options with comment"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#example_2","title":"Example","text":"<pre><code>// Close a case instance\nconst result = await sdk.maestro.cases.instances.close(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\nor\n\nconst instance = await sdk.maestro.cases.instances.getById(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\nconst result = await instance.close();\n\nconsole.log(`Closed: ${result.success}`);\n\n// Close with a comment\nconst result = await instance.close({\n  comment: 'Closing due to invalid input data'\n});\n\nif (result.success) {\n  console.log(`Instance ${result.data.instanceId} status: ${result.data.status}`);\n}\n</code></pre>"},{"location":"api/interfaces/CaseInstancesServiceModel/#pause","title":"pause()","text":"<pre><code>pause(\n   instanceId: string, \n   folderKey: string, \n   options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Pause a case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to pause <code>folderKey</code> <code>string</code> Required folder key <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional pause options with comment"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#resume","title":"resume()","text":"<pre><code>resume(\n   instanceId: string, \n   folderKey: string, \n   options?: CaseInstanceOperationOptions): Promise&lt;OperationResponse&lt;CaseInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Resume a case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to resume <code>folderKey</code> <code>string</code> Required folder key <code>options?</code> <code>CaseInstanceOperationOptions</code> Optional resume options with comment"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>CaseInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#getexecutionhistory","title":"getExecutionHistory()","text":"<pre><code>getExecutionHistory(instanceId: string, folderKey: string): Promise&lt;CaseInstanceExecutionHistoryResponse&gt;;\n</code></pre> <p>Get execution history for a case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the case instance <code>folderKey</code> <code>string</code> Required folder key"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseInstanceExecutionHistoryResponse</code>&gt;</p> <p>Promise resolving to instance execution history CaseInstanceExecutionHistoryResponse</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#example_3","title":"Example","text":"<pre><code>// Get execution history for a case instance\nconst history = await sdk.maestro.cases.instances.getExecutionHistory(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Access element executions\nif (history.elementExecutions) {\n  for (const execution of history.elementExecutions) {\n    console.log(`Element: ${execution.elementName} - Status: ${execution.status}`);\n  }\n}\n</code></pre>"},{"location":"api/interfaces/CaseInstancesServiceModel/#getstages","title":"getStages()","text":"<pre><code>getStages(caseInstanceId: string, folderKey: string): Promise&lt;CaseGetStageResponse[]&gt;;\n</code></pre> <p>Get stages and its associated tasks information for a case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>caseInstanceId</code> <code>string</code> The ID of the case instance <code>folderKey</code> <code>string</code> Required folder key"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseGetStageResponse</code>[]&gt;</p> <p>Promise resolving to an array of case stages with their tasks and status</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#example_4","title":"Example","text":"<pre><code>// Get stages for a case instance\nconst stages = await sdk.maestro.cases.instances.getStages(\n  &lt;caseInstanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Iterate through stages\nfor (const stage of stages) {\n  console.log(`Stage: ${stage.name} - Status: ${stage.status}`);\n\n  // Check tasks in the stage\n  for (const taskGroup of stage.tasks) {\n    for (const task of taskGroup) {\n      console.log(`  Task: ${task.name} - Status: ${task.status}`);\n    }\n  }\n}\n</code></pre>"},{"location":"api/interfaces/CaseInstancesServiceModel/#getactiontasks","title":"getActionTasks()","text":"<pre><code>getActionTasks&lt;T&gt;(caseInstanceId: string, options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;TaskGetResponse&gt; : NonPaginatedResponse&lt;TaskGetResponse&gt;&gt;;\n</code></pre> <p>Get human in the loop tasks associated with a case instance</p> <p>The method returns either: - An array of tasks (when no pagination parameters are provided) - A paginated result with navigation cursors (when any pagination parameter is provided)</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#type-parameters_1","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>TaskGetAllOptions</code> <code>TaskGetAllOptions</code>"},{"location":"api/interfaces/CaseInstancesServiceModel/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>caseInstanceId</code> <code>string</code> The ID of the case instance <code>options?</code> <code>T</code> Optional filtering and pagination options"},{"location":"api/interfaces/CaseInstancesServiceModel/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt;&gt;</p> <p>Promise resolving to human in the loop tasks associated with the case instance</p>"},{"location":"api/interfaces/CaseInstancesServiceModel/#example_5","title":"Example","text":"<pre><code>// Get all tasks for a case instance (non-paginated)\nconst tasks = await sdk.maestro.cases.instances.getActionTasks(\n  &lt;caseInstanceId&gt;,\n);\n\n// First page with pagination\nconst page1 = await sdk.maestro.cases.instances.getActionTasks(\n  &lt;caseInstanceId&gt;,\n  { pageSize: 10 }\n);\n// Iterate through tasks\nfor (const task of page1.items) {\n  console.log(`Task: ${task.title}`);\n  console.log(`Task: ${task.status}`);\n}\n\n// Jump to specific page\nconst page5 = await sdk.maestro.cases.instances.getActionTasks(\n  &lt;caseInstanceId&gt;,\n  {\n    jumpToPage: 5,\n    pageSize: 10\n  }\n);\n</code></pre>"},{"location":"api/interfaces/CasesServiceModel/","title":"Cases","text":"<p>Service for managing UiPath Maestro Cases</p> <p>UiPath Maestro Case Management describes solutions that help manage and automate the full flow of complex E2E scenarios.</p>"},{"location":"api/interfaces/CasesServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/CasesServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll(): Promise&lt;CaseGetAllResponse[]&gt;;\n</code></pre>"},{"location":"api/interfaces/CasesServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>CaseGetAllResponse</code>[]&gt;</p> <p>Promise resolving to array of Case objects CaseGetAllResponse</p>"},{"location":"api/interfaces/CasesServiceModel/#example","title":"Example","text":"<pre><code>// Get all case management processes\nconst cases = await sdk.maestro.cases.getAll();\n\n// Access case information\nfor (const caseProcess of cases) {\n  console.log(`Case Process: ${caseProcess.processKey}`);\n  console.log(`Running instances: ${caseProcess.runningCount}`);\n  console.log(`Completed instances: ${caseProcess.completedCount}`);\n}\n</code></pre>"},{"location":"api/interfaces/CollectionResponse/","title":"CollectionResponse","text":""},{"location":"api/interfaces/CollectionResponse/#type-parameters","title":"Type Parameters","text":"Type Parameter <code>T</code>"},{"location":"api/interfaces/CollectionResponse/#properties","title":"Properties","text":"Property Type <code>value</code> <code>T</code>[]"},{"location":"api/interfaces/CustomKeyValuePair/","title":"CustomKeyValuePair","text":"<p>Interface for key-value pair used in assets</p>"},{"location":"api/interfaces/CustomKeyValuePair/#properties","title":"Properties","text":"Property Type <code>key?</code> <code>string</code> <code>value?</code> <code>string</code>"},{"location":"api/interfaces/ElementExecutionMetadata/","title":"ElementExecutionMetadata","text":"<p>Case element execution metadata</p>"},{"location":"api/interfaces/ElementExecutionMetadata/#properties","title":"Properties","text":"Property Type Description <code>completedTime</code> <code>null</code> | <code>string</code> - <code>elementId</code> <code>string</code> - <code>elementName</code> <code>string</code> - <code>parentElementId</code> <code>null</code> | <code>string</code> - <code>startedTime</code> <code>string</code> - <code>status</code> <code>string</code> Element status (e.g., \"Completed\", \"Faulted\", \"Running\") <code>processKey</code> <code>string</code> - <code>externalLink</code> <code>string</code> External reference link, eg link to the HITL task in Action Center <code>elementRuns</code> <code>ElementRunMetadata</code>[] List of element runs for the element"},{"location":"api/interfaces/ElementMetaData/","title":"ElementMetaData","text":"<p>Process Instance element metadata</p>"},{"location":"api/interfaces/ElementMetaData/#properties","title":"Properties","text":"Property Type <code>elementId</code> <code>string</code> <code>elementRunId</code> <code>string</code> <code>isMarker</code> <code>boolean</code> <code>inputs</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; <code>inputDefinitions</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; <code>outputs</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;"},{"location":"api/interfaces/ElementRunMetadata/","title":"ElementRunMetadata","text":"<p>Element run metadata</p>"},{"location":"api/interfaces/ElementRunMetadata/#properties","title":"Properties","text":"Property Type <code>status</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>completedTime</code> <code>null</code> | <code>string</code> <code>elementRunId</code> <code>string</code> <code>parentElementRunId</code> <code>null</code> | <code>string</code>"},{"location":"api/interfaces/EntityDeleteOptions/","title":"EntityDeleteOptions","text":"<p>Options for deleting data from an entity</p>"},{"location":"api/interfaces/EntityDeleteOptions/#properties","title":"Properties","text":"Property Type Description <code>failOnFirst?</code> <code>boolean</code> Whether to fail on first error (default: false)"},{"location":"api/interfaces/EntityMethods/","title":"EntityMethods","text":"<p>Entity methods interface - defines operations that can be performed on an entity</p>"},{"location":"api/interfaces/EntityMethods/#methods","title":"Methods","text":""},{"location":"api/interfaces/EntityMethods/#insert","title":"insert()","text":"<pre><code>insert(data: Record&lt;string, any&gt;[], options?: EntityOperationOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Insert data into this entity</p>"},{"location":"api/interfaces/EntityMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>data</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;[] Array of records to insert <code>options?</code> <code>EntityOperationOptions</code> Insert options"},{"location":"api/interfaces/EntityMethods/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to insert response</p>"},{"location":"api/interfaces/EntityMethods/#update","title":"update()","text":"<pre><code>update(data: EntityRecord[], options?: EntityOperationOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Update data in this entity</p>"},{"location":"api/interfaces/EntityMethods/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>data</code> <code>EntityRecord</code>[] Array of records to update. Each record MUST contain the record Id, otherwise the update will fail. <code>options?</code> <code>EntityOperationOptions</code> Update options"},{"location":"api/interfaces/EntityMethods/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to update response</p>"},{"location":"api/interfaces/EntityMethods/#delete","title":"delete()","text":"<pre><code>delete(recordIds: string[], options?: EntityDeleteOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Delete data from this entity</p>"},{"location":"api/interfaces/EntityMethods/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>recordIds</code> <code>string</code>[] Array of record UUIDs to delete <code>options?</code> <code>EntityDeleteOptions</code> Delete options"},{"location":"api/interfaces/EntityMethods/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to delete response</p>"},{"location":"api/interfaces/EntityMethods/#getrecords","title":"getRecords()","text":"<pre><code>getRecords&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;EntityRecord&gt; : NonPaginatedResponse&lt;EntityRecord&gt;&gt;;\n</code></pre> <p>Get records from this entity</p>"},{"location":"api/interfaces/EntityMethods/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>EntityGetRecordsByIdOptions</code> <code>EntityGetRecordsByIdOptions</code>"},{"location":"api/interfaces/EntityMethods/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options"},{"location":"api/interfaces/EntityMethods/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>EntityRecord</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>EntityRecord</code>&gt;&gt;</p> <p>Promise resolving to query response</p>"},{"location":"api/interfaces/EntityOperationOptions/","title":"EntityOperationOptions","text":"<p>Common options for entity operations that modify multiple records</p>"},{"location":"api/interfaces/EntityOperationOptions/#properties","title":"Properties","text":"Property Type Description <code>expansionLevel?</code> <code>number</code> Level of entity expansion (default: 0) <code>failOnFirst?</code> <code>boolean</code> Whether to fail on first error (default: false)"},{"location":"api/interfaces/EntityOperationResponse/","title":"EntityOperationResponse","text":"<p>Response from an entity operation that modifies multiple records</p>"},{"location":"api/interfaces/EntityOperationResponse/#properties","title":"Properties","text":"Property Type Description <code>successRecords</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;[] Records that were successfully processed <code>failureRecords</code> <code>FailureRecord</code>[] Records that failed processing"},{"location":"api/interfaces/EntityRecord/","title":"EntityRecord","text":"<p>Represents a single entity record</p>"},{"location":"api/interfaces/EntityRecord/#indexable","title":"Indexable","text":"<pre><code>[key: string]: any\n</code></pre> <p>Additional dynamic fields for the entity</p>"},{"location":"api/interfaces/EntityRecord/#properties","title":"Properties","text":"Property Type Description <code>id</code> <code>string</code> Unique identifier for the record"},{"location":"api/interfaces/EntityServiceModel/","title":"Entities","text":"<p>Service for managing UiPath Data Fabric Entities.</p> <p>Entities are collections of records that can be used to store and manage data in the Data Fabric. UiPath Data Fabric Guide</p>"},{"location":"api/interfaces/EntityServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/EntityServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll(): Promise&lt;EntityGetResponse[]&gt;;\n</code></pre> <p>Gets all entities in the system</p>"},{"location":"api/interfaces/EntityServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityGetResponse</code>[]&gt;</p> <p>Promise resolving to either an array of entities NonPaginatedResponse or a PaginatedResponse when pagination options are used. EntityGetResponse"},{"location":"api/interfaces/EntityServiceModel/#example","title":"Example","text":"<pre><code>// Get all entities\nconst entities = await sdk.entities.getAll();\n\n// Iterate through entities\nentities.forEach(entity =&gt; {\n  console.log(`Entity: ${entity.displayName} (${entity.name})`);\n  console.log(`Type: ${entity.entityType}`);\n});\n\n// Find a specific entity by name\nconst customerEntity = entities.find(e =&gt; e.name === 'Customer');\n\n// Use entity methods directly\nif (customerEntity) {\n  const records = await customerEntity.getRecords();\n  console.log(`Customer records: ${records.items.length}`);\n\n  const insertResult = await customerEntity.insert([\n    { name: \"John\", age: 30 }\n  ]);\n}\n</code></pre>"},{"location":"api/interfaces/EntityServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(id: string): Promise&lt;EntityGetResponse&gt;;\n</code></pre> <p>Gets entity metadata by entity ID with attached operation methods</p>"},{"location":"api/interfaces/EntityServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>string</code> UUID of the entity"},{"location":"api/interfaces/EntityServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityGetResponse</code>&gt;</p> <p>Promise resolving to entity metadata with operation methods EntityGetResponse</p>"},{"location":"api/interfaces/EntityServiceModel/#example_1","title":"Example","text":"<pre><code>// Get entity metadata with methods\nconst entity = await sdk.entities.getById(&lt;entityId&gt;);\n\n// Call operations directly on the entity\nconst records = await entity.getRecords();\n\nconst insertResult = await entity.insert([\n  { name: \"John\", age: 30 }\n]);\n</code></pre>"},{"location":"api/interfaces/EntityServiceModel/#getrecordsbyid","title":"getRecordsById()","text":"<pre><code>getRecordsById&lt;T&gt;(entityId: string, options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;EntityRecord&gt; : NonPaginatedResponse&lt;EntityRecord&gt;&gt;;\n</code></pre> <p>Gets entity records by entity ID</p>"},{"location":"api/interfaces/EntityServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>EntityGetRecordsByIdOptions</code> <code>EntityGetRecordsByIdOptions</code>"},{"location":"api/interfaces/EntityServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>entityId</code> <code>string</code> UUID of the entity <code>options?</code> <code>T</code> Query options"},{"location":"api/interfaces/EntityServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>EntityRecord</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>EntityRecord</code>&gt;&gt;</p> <p>Promise resolving to either an array of entity records NonPaginatedResponse or a PaginatedResponse when pagination options are used. EntityRecord"},{"location":"api/interfaces/EntityServiceModel/#example_2","title":"Example","text":"<pre><code>// Basic usage (non-paginated)\nconst records = await sdk.entities.getRecordsById(&lt;entityId&gt;);\n\n// With expansion level\nconst records = await sdk.entities.getRecordsById(&lt;entityId&gt;, {\n  expansionLevel: 1\n});\n\n// With pagination\nconst paginatedResponse = await sdk.entities.getRecordsById(&lt;entityId&gt;, {\n  pageSize: 50,\n  expansionLevel: 1\n});\n\n// Navigate to next page\nconst nextPage = await sdk.entities.getRecordsById(&lt;entityId&gt;, {\n  cursor: paginatedResponse.nextCursor,\n  expansionLevel: 1\n});\n</code></pre>"},{"location":"api/interfaces/EntityServiceModel/#insertbyid","title":"insertById()","text":"<pre><code>insertById(\n   id: string, \n   data: Record&lt;string, any&gt;[], \n   options?: EntityOperationOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Inserts data into an entity by entity ID</p>"},{"location":"api/interfaces/EntityServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>string</code> UUID of the entity <code>data</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;[] Array of records to insert <code>options?</code> <code>EntityOperationOptions</code> Insert options"},{"location":"api/interfaces/EntityServiceModel/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to insert response EntityInsertResponse</p>"},{"location":"api/interfaces/EntityServiceModel/#example_3","title":"Example","text":"<pre><code>// Basic usage\nconst result = await sdk.entities.insertById(&lt;entityId&gt;, [\n  { name: \"John\", age: 30 },\n  { name: \"Jane\", age: 25 }\n]);\n\n// With options\nconst result = await sdk.entities.insertById(&lt;entityId&gt;, [\n  { name: \"John\", age: 30 },\n  { name: \"Jane\", age: 25 }\n], {\n  expansionLevel: 1,\n  failOnFirst: true\n});\n</code></pre>"},{"location":"api/interfaces/EntityServiceModel/#updatebyid","title":"updateById()","text":"<pre><code>updateById(\n   id: string, \n   data: EntityRecord[], \n   options?: EntityOperationOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Updates data in an entity by entity ID</p>"},{"location":"api/interfaces/EntityServiceModel/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>string</code> UUID of the entity <code>data</code> <code>EntityRecord</code>[] Array of records to update. Each record MUST contain the record Id. <code>options?</code> <code>EntityOperationOptions</code> Update options"},{"location":"api/interfaces/EntityServiceModel/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to update response EntityUpdateResponse</p>"},{"location":"api/interfaces/EntityServiceModel/#example_4","title":"Example","text":"<pre><code>// Basic usage\nconst result = await sdk.entities.updateById(&lt;entityId&gt;, [\n  { Id: \"123\", name: \"John Updated\", age: 31 },\n  { Id: \"456\", name: \"Jane Updated\", age: 26 }\n]);\n\n// With options\nconst result = await sdk.entities.updateById(&lt;entityId&gt;, [\n  { Id: \"123\", name: \"John Updated\", age: 31 },\n  { Id: \"456\", name: \"Jane Updated\", age: 26 }\n], {\n  expansionLevel: 1,\n  failOnFirst: true\n});\n</code></pre>"},{"location":"api/interfaces/EntityServiceModel/#deletebyid","title":"deleteById()","text":"<pre><code>deleteById(\n   id: string, \n   recordIds: string[], \n   options?: EntityDeleteOptions): Promise&lt;EntityOperationResponse&gt;;\n</code></pre> <p>Deletes data from an entity by entity ID</p>"},{"location":"api/interfaces/EntityServiceModel/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>string</code> UUID of the entity <code>recordIds</code> <code>string</code>[] Array of record UUIDs to delete <code>options?</code> <code>EntityDeleteOptions</code> Delete options"},{"location":"api/interfaces/EntityServiceModel/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>EntityOperationResponse</code>&gt;</p> <p>Promise resolving to delete response EntityDeleteResponse</p>"},{"location":"api/interfaces/EntityServiceModel/#example_5","title":"Example","text":"<pre><code>// Basic usage\nconst result = await sdk.entities.deleteById(&lt;entityId&gt;, [\n  &lt;recordId-1&gt;, &lt;recordId-2&gt;\n]);\n</code></pre>"},{"location":"api/interfaces/EscalationAction/","title":"EscalationAction","text":"<p>Escalation rule action configuration</p>"},{"location":"api/interfaces/EscalationAction/#properties","title":"Properties","text":"Property Type <code>type</code> <code>NOTIFICATION</code> <code>recipients</code> <code>EscalationRecipient</code>[]"},{"location":"api/interfaces/EscalationRecipient/","title":"EscalationRecipient","text":"<p>Escalation rule recipient information</p>"},{"location":"api/interfaces/EscalationRecipient/#properties","title":"Properties","text":"Property Type Description <code>scope</code> <code>EscalationRecipientScope</code> Type of recipient (user or usergroup) <code>target</code> <code>string</code> Identifier for a user/usergroup <code>value</code> <code>string</code> The email id of the user/usergroup"},{"location":"api/interfaces/EscalationRule/","title":"EscalationRule","text":"<p>Escalation rule configuration</p>"},{"location":"api/interfaces/EscalationRule/#properties","title":"Properties","text":"Property Type <code>triggerInfo</code> <code>EscalationTriggerMetadata</code> <code>action?</code> <code>EscalationAction</code>"},{"location":"api/interfaces/EscalationTriggerMetadata/","title":"EscalationTriggerMetadata","text":"<p>Escalation rule trigger metadata</p>"},{"location":"api/interfaces/EscalationTriggerMetadata/#properties","title":"Properties","text":"Property Type <code>type?</code> <code>EscalationTriggerType</code> <code>atRiskPercentage?</code> <code>number</code>"},{"location":"api/interfaces/ExternalConnection/","title":"ExternalConnection","text":"<p>External connection details</p>"},{"location":"api/interfaces/ExternalConnection/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>connectionId</code> <code>string</code> <code>elementInstanceId</code> <code>number</code> <code>folderKey</code> <code>string</code> <code>connectorKey?</code> <code>string</code> <code>connectorName?</code> <code>string</code> <code>connectionName?</code> <code>string</code>"},{"location":"api/interfaces/ExternalField/","title":"ExternalField","text":"<p>External field</p>"},{"location":"api/interfaces/ExternalField/#properties","title":"Properties","text":"Property Type <code>fieldMetaData</code> <code>FieldMetaData</code> <code>externalFieldMappingDetail</code> <code>ExternalFieldMapping</code>"},{"location":"api/interfaces/ExternalFieldMapping/","title":"ExternalFieldMapping","text":"<p>External field mapping</p>"},{"location":"api/interfaces/ExternalFieldMapping/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>externalFieldName?</code> <code>string</code> <code>externalFieldDisplayName?</code> <code>string</code> <code>externalObjectId</code> <code>string</code> <code>externalFieldType?</code> <code>string</code> <code>internalFieldId</code> <code>string</code> <code>directionType</code> <code>DataDirectionType</code>"},{"location":"api/interfaces/ExternalObject/","title":"ExternalObject","text":"<p>External object details</p>"},{"location":"api/interfaces/ExternalObject/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>externalObjectName?</code> <code>string</code> <code>externalObjectDisplayName?</code> <code>string</code> <code>primaryKey?</code> <code>string</code> <code>externalConnectionId</code> <code>string</code> <code>entityId?</code> <code>string</code> <code>isPrimarySource</code> <code>boolean</code>"},{"location":"api/interfaces/ExternalSourceFields/","title":"ExternalSourceFields","text":"<p>External source fields</p>"},{"location":"api/interfaces/ExternalSourceFields/#properties","title":"Properties","text":"Property Type <code>fields?</code> <code>ExternalField</code>[] <code>externalObjectDetail?</code> <code>ExternalObject</code> <code>externalConnectionDetail?</code> <code>ExternalConnection</code>"},{"location":"api/interfaces/FailureRecord/","title":"FailureRecord","text":"<p>Represents a failure record in an entity operation</p>"},{"location":"api/interfaces/FailureRecord/#properties","title":"Properties","text":"Property Type Description <code>error?</code> <code>string</code> Error message <code>record?</code> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt; Original record that failed"},{"location":"api/interfaces/Field/","title":"Field","text":"<p>Field reference with ID</p>"},{"location":"api/interfaces/Field/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>definition?</code> <code>FieldMetaData</code>"},{"location":"api/interfaces/FieldDataType/","title":"FieldDataType","text":"<p>Field type metadata</p>"},{"location":"api/interfaces/FieldDataType/#properties","title":"Properties","text":"Property Type <code>name</code> <code>EntityFieldDataType</code> <code>lengthLimit?</code> <code>number</code> <code>maxValue?</code> <code>number</code> <code>minValue?</code> <code>number</code> <code>decimalPrecision?</code> <code>number</code>"},{"location":"api/interfaces/FieldMetaData/","title":"FieldMetaData","text":"<p>Detailed field definition</p>"},{"location":"api/interfaces/FieldMetaData/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>name</code> <code>string</code> <code>isPrimaryKey</code> <code>boolean</code> <code>isForeignKey</code> <code>boolean</code> <code>isExternalField</code> <code>boolean</code> <code>isHiddenField</code> <code>boolean</code> <code>isUnique</code> <code>boolean</code> <code>referenceName?</code> <code>string</code> <code>referenceEntity?</code> <code>RawEntityGetResponse</code> <code>referenceChoiceSet?</code> <code>RawEntityGetResponse</code> <code>referenceField?</code> <code>Field</code> <code>referenceType</code> <code>ManyToOne</code> <code>fieldDataType</code> <code>FieldDataType</code> <code>isRequired</code> <code>boolean</code> <code>displayName</code> <code>string</code> <code>description</code> <code>string</code> <code>createdTime</code> <code>string</code> <code>createdBy</code> <code>string</code> <code>updatedTime</code> <code>string</code> <code>updatedBy?</code> <code>string</code> <code>isSystemField</code> <code>boolean</code> <code>fieldDisplayType?</code> <code>FieldDisplayType</code> <code>choiceSetId?</code> <code>string</code> <code>defaultValue?</code> <code>string</code> <code>isAttachment</code> <code>boolean</code> <code>isRbacEnabled</code> <code>boolean</code>"},{"location":"api/interfaces/FolderProperties/","title":"FolderProperties","text":"<p>Interface for common folder properties</p>"},{"location":"api/interfaces/FolderProperties/#extended-by","title":"Extended by","text":"<ul> <li><code>ProcessStartResponse</code></li> <li><code>ProcessGetResponse</code></li> </ul>"},{"location":"api/interfaces/FolderProperties/#properties","title":"Properties","text":"Property Type <code>folderId?</code> <code>number</code> <code>folderName?</code> <code>string</code>"},{"location":"api/interfaces/GlobalVariableMetaData/","title":"GlobalVariableMetaData","text":"<p>Process Instance global variable metadata</p>"},{"location":"api/interfaces/GlobalVariableMetaData/#properties","title":"Properties","text":"Property Type Description <code>id</code> <code>string</code> - <code>name</code> <code>string</code> - <code>type</code> <code>string</code> Common values: \"integer\", \"string\", \"boolean\" May also contain custom types or \"any\" when type cannot be determined <code>elementId</code> <code>string</code> - <code>source</code> <code>string</code> Name of the BPMN node/element <code>value</code> <code>any</code> -"},{"location":"api/interfaces/JobAttachment/","title":"JobAttachment","text":"<p>Interface for Job Attachment</p>"},{"location":"api/interfaces/JobAttachment/#properties","title":"Properties","text":"Property Type <code>attachmentId</code> <code>string</code> <code>jobKey?</code> <code>string</code> <code>category?</code> <code>string</code> <code>attachmentName?</code> <code>string</code>"},{"location":"api/interfaces/JobError/","title":"JobError","text":"<p>Interface for job error</p>"},{"location":"api/interfaces/JobError/#properties","title":"Properties","text":"Property Type <code>code?</code> <code>string</code> <code>title?</code> <code>string</code> <code>detail?</code> <code>string</code> <code>category?</code> <code>string</code> <code>status?</code> <code>number</code> <code>timestamp?</code> <code>string</code>"},{"location":"api/interfaces/Machine/","title":"Machine","text":"<p>Interface for machine</p>"},{"location":"api/interfaces/Machine/#properties","title":"Properties","text":"Property Type <code>id</code> <code>number</code> <code>name?</code> <code>string</code>"},{"location":"api/interfaces/MaestroProcessGetAllResponse/","title":"MaestroProcessGetAllResponse","text":"<p>Process information with instance statistics</p>"},{"location":"api/interfaces/MaestroProcessGetAllResponse/#properties","title":"Properties","text":"Property Type Description <code>processKey</code> <code>string</code> Unique key identifying the process <code>packageId</code> <code>string</code> Package identifier <code>name</code> <code>string</code> Process name <code>folderKey</code> <code>string</code> Folder key where process is located <code>folderName</code> <code>string</code> Folder name <code>packageVersions</code> <code>string</code>[] Available package versions <code>versionCount</code> <code>number</code> Total number of versions <code>pendingCount</code> <code>number</code> Process instance count - pending <code>runningCount</code> <code>number</code> Process instance count - running <code>completedCount</code> <code>number</code> Process instance count - completed <code>pausedCount</code> <code>number</code> Process instance count - paused <code>cancelledCount</code> <code>number</code> Process instance count - cancelled <code>faultedCount</code> <code>number</code> Process instance count - faulted <code>retryingCount</code> <code>number</code> Process instance count - retrying <code>resumingCount</code> <code>number</code> Process instance count - resuming <code>pausingCount</code> <code>number</code> Process instance count - pausing <code>cancelingCount</code> <code>number</code> Process instance count - canceling"},{"location":"api/interfaces/MaestroProcessesServiceModel/","title":"Processes","text":"<p>Service for managing UiPath Maestro Processes</p> <p>UiPath Maestro is a cloud-native orchestration layer that coordinates bots, AI agents, and humans for seamless, intelligent automation of complex workflows. UiPath Maestro Guide</p>"},{"location":"api/interfaces/MaestroProcessesServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/MaestroProcessesServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll(): Promise&lt;MaestroProcessGetAllResponse[]&gt;;\n</code></pre>"},{"location":"api/interfaces/MaestroProcessesServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>MaestroProcessGetAllResponse</code>[]&gt;</p> <p>Promise resolving to array of MaestroProcess objects MaestroProcessGetAllResponse</p>"},{"location":"api/interfaces/MaestroProcessesServiceModel/#example","title":"Example","text":"<pre><code>// Get all processes\nconst processes = await sdk.maestro.processes.getAll();\n\n// Access process information\nfor (const process of processes) {\n  console.log(`Process: ${process.processKey}`);\n  console.log(`Running instances: ${process.runningCount}`);\n  console.log(`Faulted instances: ${process.faultedCount}`);\n}\n</code></pre>"},{"location":"api/interfaces/NonPaginatedResponse/","title":"NonPaginatedResponse","text":"<p>Response for non-paginated calls that includes both data and total count</p>"},{"location":"api/interfaces/NonPaginatedResponse/#type-parameters","title":"Type Parameters","text":"Type Parameter <code>T</code>"},{"location":"api/interfaces/NonPaginatedResponse/#properties","title":"Properties","text":"Property Type <code>items</code> <code>T</code>[] <code>totalCount?</code> <code>number</code>"},{"location":"api/interfaces/OAuthFields/","title":"OAuthFields","text":""},{"location":"api/interfaces/OAuthFields/#properties","title":"Properties","text":"Property Type <code>clientId</code> <code>string</code> <code>redirectUri</code> <code>string</code> <code>scope</code> <code>string</code>"},{"location":"api/interfaces/OperationResponse/","title":"OperationResponse","text":"<p>Standardized result interface for all operation methods (pause, cancel, complete, update, upload, etc.) Success responses include data from the request context or API response</p>"},{"location":"api/interfaces/OperationResponse/#type-parameters","title":"Type Parameters","text":"Type Parameter <code>TData</code>"},{"location":"api/interfaces/OperationResponse/#properties","title":"Properties","text":"Property Type Description <code>success</code> <code>boolean</code> Whether the operation was successful <code>data</code> <code>TData</code> Response data (can contain error details in case of failure)"},{"location":"api/interfaces/PaginatedResponse/","title":"PaginatedResponse","text":"<p>Paginated response containing items and navigation information</p>"},{"location":"api/interfaces/PaginatedResponse/#type-parameters","title":"Type Parameters","text":"Type Parameter <code>T</code>"},{"location":"api/interfaces/PaginatedResponse/#properties","title":"Properties","text":"Property Type Description <code>items</code> <code>T</code>[] The items in the current page <code>totalCount?</code> <code>number</code> Total count of items across all pages (if available) <code>hasNextPage</code> <code>boolean</code> Whether more pages are available <code>nextCursor?</code> <code>PaginationCursor</code> Cursor to fetch the next page (if available) <code>previousCursor?</code> <code>PaginationCursor</code> Cursor to fetch the previous page (if available) <code>currentPage?</code> <code>number</code> Current page number (1-based, if available) <code>totalPages?</code> <code>number</code> Total number of pages (if available) <code>supportsPageJump</code> <code>boolean</code> Whether this pagination type supports jumping to arbitrary pages"},{"location":"api/interfaces/PaginationCursor/","title":"PaginationCursor","text":"<p>Simplified universal pagination cursor Used to fetch next/previous pages</p>"},{"location":"api/interfaces/PaginationCursor/#properties","title":"Properties","text":"Property Type Description <code>value</code> <code>string</code> Opaque string containing all information needed to fetch next page"},{"location":"api/interfaces/PaginationMetadata/","title":"PaginationMetadata","text":"<p>Pagination metadata for API requests</p>"},{"location":"api/interfaces/PaginationMetadata/#properties","title":"Properties","text":"Property Type Description <code>paginationType</code> <code>PaginationType</code> Type of pagination used by the API endpoint <code>itemsField?</code> <code>string</code> Response field containing items array (defaults to 'value') <code>totalCountField?</code> <code>string</code> Response field containing total count (defaults to '@odata.count') <code>continuationTokenField?</code> <code>string</code> Response field containing continuation token (defaults to 'continuationToken')"},{"location":"api/interfaces/ProcessGetResponse/","title":"ProcessGetResponse","text":"<p>Interface for process response</p>"},{"location":"api/interfaces/ProcessGetResponse/#extends","title":"Extends","text":"<ul> <li><code>ProcessProperties</code>.<code>FolderProperties</code></li> </ul>"},{"location":"api/interfaces/ProcessGetResponse/#properties","title":"Properties","text":"Property Type <code>jobPriority?</code> <code>JobPriority</code> <code>specificPriorityValue?</code> <code>number</code> <code>inputArguments?</code> <code>string</code> <code>environmentVariables?</code> <code>string</code> <code>entryPointPath?</code> <code>string</code> <code>remoteControlAccess?</code> <code>RemoteControlAccess</code> <code>requiresUserInteraction?</code> <code>boolean</code> <code>folderId?</code> <code>number</code> <code>folderName?</code> <code>string</code> <code>key</code> <code>string</code> <code>packageKey</code> <code>string</code> <code>packageVersion</code> <code>string</code> <code>isLatestVersion</code> <code>boolean</code> <code>isPackageDeleted</code> <code>boolean</code> <code>description</code> <code>string</code> <code>name</code> <code>string</code> <code>entryPointId</code> <code>number</code> <code>packageType</code> <code>PackageType</code> <code>supportsMultipleEntryPoints</code> <code>boolean</code> <code>isConversational</code> <code>null</code> | <code>boolean</code> <code>minRequiredRobotVersion</code> <code>null</code> | <code>string</code> <code>isCompiled</code> <code>boolean</code> <code>arguments</code> <code>ArgumentMetadata</code> <code>autoUpdate</code> <code>boolean</code> <code>hiddenForAttendedUser</code> <code>boolean</code> <code>feedId</code> <code>string</code> <code>folderKey</code> <code>string</code> <code>targetFramework</code> <code>TargetFramework</code> <code>robotSize</code> <code>null</code> | <code>RobotSize</code> <code>lastModifiedTime</code> <code>null</code> | <code>string</code> <code>lastModifierUserId</code> <code>null</code> | <code>number</code> <code>createdTime</code> <code>string</code> <code>creatorUserId</code> <code>number</code> <code>id</code> <code>number</code>"},{"location":"api/interfaces/ProcessInstanceExecutionHistoryResponse/","title":"ProcessInstanceExecutionHistoryResponse","text":"<p>Response for process instance execution history</p>"},{"location":"api/interfaces/ProcessInstanceExecutionHistoryResponse/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>traceId</code> <code>string</code> <code>parentId</code> <code>null</code> | <code>string</code> <code>name</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>endTime</code> <code>null</code> | <code>string</code> <code>attributes</code> <code>null</code> | <code>string</code> <code>createdTime</code> <code>string</code> <code>updatedTime?</code> <code>string</code> <code>expiredTime</code> <code>null</code> | <code>string</code>"},{"location":"api/interfaces/ProcessInstanceGetAllOptions/","title":"ProcessInstanceGetAllOptions","text":"<p>Query options for getting process instances</p>"},{"location":"api/interfaces/ProcessInstanceGetAllOptions/#properties","title":"Properties","text":"Property Type <code>packageId?</code> <code>string</code> <code>packageVersion?</code> <code>string</code> <code>processKey?</code> <code>string</code> <code>errorCode?</code> <code>string</code>"},{"location":"api/interfaces/ProcessInstanceGetVariablesOptions/","title":"ProcessInstanceGetVariablesOptions","text":"<p>Options for getting global variables</p>"},{"location":"api/interfaces/ProcessInstanceGetVariablesOptions/#properties","title":"Properties","text":"Property Type <code>parentElementId?</code> <code>string</code>"},{"location":"api/interfaces/ProcessInstanceGetVariablesResponse/","title":"ProcessInstanceGetVariablesResponse","text":"<p>Response for getting global variables for process instance</p>"},{"location":"api/interfaces/ProcessInstanceGetVariablesResponse/#properties","title":"Properties","text":"Property Type <code>elements</code> <code>ElementMetaData</code>[] <code>globalVariables</code> <code>GlobalVariableMetaData</code>[] <code>instanceId</code> <code>string</code> <code>parentElementId</code> <code>null</code> | <code>string</code>"},{"location":"api/interfaces/ProcessInstanceMethods/","title":"ProcessInstanceMethods","text":""},{"location":"api/interfaces/ProcessInstanceMethods/#methods","title":"Methods","text":""},{"location":"api/interfaces/ProcessInstanceMethods/#cancel","title":"cancel()","text":"<pre><code>cancel(options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Cancels this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional cancellation options with comment"},{"location":"api/interfaces/ProcessInstanceMethods/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#pause","title":"pause()","text":"<pre><code>pause(options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Pauses this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional pause options with comment"},{"location":"api/interfaces/ProcessInstanceMethods/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#resume","title":"resume()","text":"<pre><code>resume(options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Resumes this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional resume options with comment"},{"location":"api/interfaces/ProcessInstanceMethods/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#getexecutionhistory","title":"getExecutionHistory()","text":"<pre><code>getExecutionHistory(): Promise&lt;ProcessInstanceExecutionHistoryResponse[]&gt;;\n</code></pre> <p>Gets execution history (spans) for this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessInstanceExecutionHistoryResponse</code>[]&gt;</p> <p>Promise resolving to execution history</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#getbpmn","title":"getBpmn()","text":"<pre><code>getBpmn(): Promise&lt;string&gt;;\n</code></pre> <p>Gets BPMN XML file for this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Promise resolving to BPMN XML file</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#getvariables","title":"getVariables()","text":"<pre><code>getVariables(options?: ProcessInstanceGetVariablesOptions): Promise&lt;ProcessInstanceGetVariablesResponse&gt;;\n</code></pre> <p>Gets global variables for this process instance</p>"},{"location":"api/interfaces/ProcessInstanceMethods/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>ProcessInstanceGetVariablesOptions</code> Optional options including parentElementId to filter by parent element"},{"location":"api/interfaces/ProcessInstanceMethods/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessInstanceGetVariablesResponse</code>&gt;</p> <p>Promise resolving to variables response with elements and globals</p>"},{"location":"api/interfaces/ProcessInstanceOperationOptions/","title":"ProcessInstanceOperationOptions","text":"<p>Request for process instance operations (cancel, pause, resume)</p>"},{"location":"api/interfaces/ProcessInstanceOperationOptions/#properties","title":"Properties","text":"Property Type <code>comment?</code> <code>string</code>"},{"location":"api/interfaces/ProcessInstanceOperationResponse/","title":"ProcessInstanceOperationResponse","text":"<p>Response from PIMS operations (cancel, pause, resume)</p>"},{"location":"api/interfaces/ProcessInstanceOperationResponse/#properties","title":"Properties","text":"Property Type <code>instanceId</code> <code>string</code> <code>status</code> <code>string</code>"},{"location":"api/interfaces/ProcessInstanceRun/","title":"ProcessInstanceRun","text":"<p>Process Instance run</p>"},{"location":"api/interfaces/ProcessInstanceRun/#properties","title":"Properties","text":"Property Type <code>runId</code> <code>string</code> <code>status</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>completedTime</code> <code>string</code>"},{"location":"api/interfaces/ProcessInstancesServiceModel/","title":"Process Instances","text":"<p>Service for managing UiPath Maestro Process instances</p> <p>Maestro process instances are the running instances of Maestro processes. UiPath Maestro Process Instances Guide</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/ProcessInstancesServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;ProcessInstanceGetResponse&gt; : NonPaginatedResponse&lt;ProcessInstanceGetResponse&gt;&gt;;\n</code></pre> <p>Get all process instances with optional filtering and pagination</p> <p>The method returns either: - A NonPaginatedResponse with items array (when no pagination parameters are provided) - A PaginatedResponse with navigation cursors (when any pagination parameter is provided)</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>ProcessInstanceGetAllWithPaginationOptions</code> <code>ProcessInstanceGetAllWithPaginationOptions</code>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query parameters for filtering instances and pagination"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>ProcessInstanceGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>ProcessInstanceGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of process instances NonPaginatedResponse or a PaginatedResponse when pagination options are used. ProcessInstanceGetResponse"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example","title":"Example","text":"<pre><code>// Get all instances (non-paginated)\nconst instances = await sdk.maestro.processes.instances.getAll();\n\n// Cancel faulted instances using methods directly on instances\nfor (const instance of instances.items) {\n  if (instance.latestRunStatus === 'Faulted') {\n    await instance.cancel({ comment: 'Cancelling faulted instance' });\n  }\n}\n\n// With filtering\nconst instances = await sdk.maestro.processes.instances.getAll({\n  processKey: 'MyProcess'\n});\n\n// First page with pagination\nconst page1 = await sdk.maestro.processes.instances.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.maestro.processes.instances.getAll({ cursor: page1.nextCursor });\n}\n</code></pre>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(id: string, folderKey: string): Promise&lt;ProcessInstanceGetResponse&gt;;\n</code></pre> <p>Get a process instance by ID with operation methods (cancel, pause, resume)</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>string</code> The ID of the instance to retrieve <code>folderKey</code> <code>string</code> The folder key for authorization"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessInstanceGetResponse</code>&gt;</p> <p>Promise resolving to a process instance ProcessInstanceGetResponse</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example_1","title":"Example","text":"<pre><code>// Get a specific process instance\nconst instance = await sdk.maestro.processes.instances.getById(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Access instance properties\nconsole.log(`Status: ${instance.latestRunStatus}`);\n</code></pre>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#getexecutionhistory","title":"getExecutionHistory()","text":"<pre><code>getExecutionHistory(instanceId: string): Promise&lt;ProcessInstanceExecutionHistoryResponse[]&gt;;\n</code></pre> <p>Get execution history (spans) for a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to get history for"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessInstanceExecutionHistoryResponse</code>[]&gt;</p> <p>Promise resolving to execution history ProcessInstanceExecutionHistoryResponse</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example_2","title":"Example","text":"<pre><code>// Get execution history for a process instance\nconst history = await sdk.maestro.processes.instances.getExecutionHistory(\n  &lt;instanceId&gt;\n);\n\n// Analyze execution timeline\nhistory.forEach(span =&gt; {\n  console.log(`Activity: ${span.name}`);\n  console.log(`Start: ${span.startTime}`);\n  console.log(`Duration: ${span.duration}ms`);\n});\n</code></pre>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#getbpmn","title":"getBpmn()","text":"<pre><code>getBpmn(instanceId: string, folderKey: string): Promise&lt;string&gt;;\n</code></pre> <p>Get BPMN XML file for a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to get BPMN for <code>folderKey</code> <code>string</code> The folder key for authorization"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>string</code>&gt;</p> <p>Promise resolving to BPMN XML file BpmnXmlString</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example_3","title":"Example","text":"<pre><code>// Get BPMN XML for a process instance\nconst bpmnXml = await sdk.maestro.processes.instances.getBpmn(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Render BPMN diagram in frontend using bpmn-js\nimport BpmnViewer from 'bpmn-js/lib/Viewer';\n\nconst viewer = new BpmnViewer({\n  container: '#bpmn-diagram'\n});\n\nawait viewer.importXML(bpmnXml);\n\n// Zoom to fit the diagram\nviewer.get('canvas').zoom('fit-viewport');\n</code></pre>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#cancel","title":"cancel()","text":"<pre><code>cancel(\n   instanceId: string, \n   folderKey: string, \n   options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Cancel a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to cancel <code>folderKey</code> <code>string</code> The folder key for authorization <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional cancellation options with comment"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example_4","title":"Example","text":"<pre><code>// Cancel a process instance\nconst result = await sdk.maestro.processes.instances.cancel(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\nor\n\nconst instance = await sdk.maestro.processes.instances.getById(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\nconst result = await instance.cancel();\n\nconsole.log(`Cancelled: ${result.success}`);\n\n// Cancel with a comment\nconst result = await instance.cancel({\n  comment: 'Cancelling due to invalid input data'\n});\n\nif (result.success) {\n  console.log(`Instance ${result.data.instanceId} status: ${result.data.status}`);\n}\n</code></pre>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#pause","title":"pause()","text":"<pre><code>pause(\n   instanceId: string, \n   folderKey: string, \n   options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Pause a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to pause <code>folderKey</code> <code>string</code> The folder key for authorization <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional pause options with comment"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#resume","title":"resume()","text":"<pre><code>resume(\n   instanceId: string, \n   folderKey: string, \n   options?: ProcessInstanceOperationOptions): Promise&lt;OperationResponse&lt;ProcessInstanceOperationResponse&gt;&gt;;\n</code></pre> <p>Resume a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to resume <code>folderKey</code> <code>string</code> The folder key for authorization <code>options?</code> <code>ProcessInstanceOperationOptions</code> Optional resume options with comment"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>ProcessInstanceOperationResponse</code>&gt;&gt;</p> <p>Promise resolving to operation result with instance data</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#getvariables","title":"getVariables()","text":"<pre><code>getVariables(\n   instanceId: string, \n   folderKey: string, \n   options?: ProcessInstanceGetVariablesOptions): Promise&lt;ProcessInstanceGetVariablesResponse&gt;;\n</code></pre> <p>Get global variables for a process instance</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>instanceId</code> <code>string</code> The ID of the instance to get variables for <code>folderKey</code> <code>string</code> The folder key for authorization <code>options?</code> <code>ProcessInstanceGetVariablesOptions</code> Optional options including parentElementId to filter by parent element"},{"location":"api/interfaces/ProcessInstancesServiceModel/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessInstanceGetVariablesResponse</code>&gt;</p> <p>Promise resolving to variables response with elements and globals ProcessInstanceGetVariablesResponse</p>"},{"location":"api/interfaces/ProcessInstancesServiceModel/#example_5","title":"Example","text":"<pre><code>// Get all variables for a process instance\nconst variables = await sdk.maestro.processes.instances.getVariables(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;\n);\n\n// Access global variables\nconsole.log('Global variables:', variables.globalVariables);\n\n// Iterate through global variables with metadata\nvariables.globalVariables?.forEach(variable =&gt; {\n  console.log(`Variable: ${variable.name} (${variable.id})`);\n  console.log(`  Type: ${variable.type}`);\n  console.log(`  Element: ${variable.elementId}`);\n  console.log(`  Value: ${variable.value}`);\n});\n\n// Get variables for a specific parent element\nconst variables = await sdk.maestro.processes.instances.getVariables(\n  &lt;instanceId&gt;,\n  &lt;folderKey&gt;,\n  { parentElementId: &lt;parentElementId&gt; }\n);\n</code></pre>"},{"location":"api/interfaces/ProcessProperties/","title":"ProcessProperties","text":"<p>Interface for common process properties shared across multiple interfaces</p>"},{"location":"api/interfaces/ProcessProperties/#extended-by","title":"Extended by","text":"<ul> <li><code>ProcessStartResponse</code></li> <li><code>ProcessGetResponse</code></li> </ul>"},{"location":"api/interfaces/ProcessProperties/#properties","title":"Properties","text":"Property Type <code>jobPriority?</code> <code>JobPriority</code> <code>specificPriorityValue?</code> <code>number</code> <code>inputArguments?</code> <code>string</code> <code>environmentVariables?</code> <code>string</code> <code>entryPointPath?</code> <code>string</code> <code>remoteControlAccess?</code> <code>RemoteControlAccess</code> <code>requiresUserInteraction?</code> <code>boolean</code>"},{"location":"api/interfaces/ProcessServiceModel/","title":"Processes","text":"<p>Service for managing and executing UiPath Automation Processes.</p> <p>Processes (also known as automations or workflows) are the core units of automation in UiPath, representing sequences of activities that perform specific business tasks. UiPath Processes Guide</p>"},{"location":"api/interfaces/ProcessServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/ProcessServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;ProcessGetResponse&gt; : NonPaginatedResponse&lt;ProcessGetResponse&gt;&gt;;\n</code></pre> <p>Gets all processes across folders with optional filtering Returns a NonPaginatedResponse with data and totalCount when no pagination parameters are provided, or a PaginatedResponse when any pagination parameter is provided</p>"},{"location":"api/interfaces/ProcessServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>ProcessGetAllOptions</code> <code>ProcessGetAllOptions</code>"},{"location":"api/interfaces/ProcessServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options including optional folderId and pagination options"},{"location":"api/interfaces/ProcessServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>ProcessGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>ProcessGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of processes NonPaginatedResponse or a PaginatedResponse when pagination options are used. ProcessGetResponse"},{"location":"api/interfaces/ProcessServiceModel/#example","title":"Example","text":"<pre><code>// Standard array return\nconst processes = await sdk.processes.getAll();\n\n// Get processes within a specific folder\nconst processes = await sdk.processes.getAll({ \n  folderId: &lt;folderId&gt;\n});\n\n// Get processes with filtering\nconst processes = await sdk.processes.getAll({ \n  filter: \"name eq 'MyProcess'\"\n});\n\n// First page with pagination\nconst page1 = await sdk.processes.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.processes.getAll({ cursor: page1.nextCursor });\n}\n\n// Jump to specific page\nconst page5 = await sdk.processes.getAll({\n  jumpToPage: 5,\n  pageSize: 10\n});\n</code></pre>"},{"location":"api/interfaces/ProcessServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(\n   id: number, \n   folderId: number, \n   options?: BaseOptions): Promise&lt;ProcessGetResponse&gt;;\n</code></pre> <p>Gets a single process by ID</p>"},{"location":"api/interfaces/ProcessServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>number</code> Process ID <code>folderId</code> <code>number</code> Required folder ID <code>options?</code> <code>BaseOptions</code> Optional query parameters"},{"location":"api/interfaces/ProcessServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessGetResponse</code>&gt;</p> <p>Promise resolving to a single process ProcessGetResponse</p>"},{"location":"api/interfaces/ProcessServiceModel/#example_1","title":"Example","text":"<pre><code>// Get process by ID\nconst process = await sdk.processes.getById(&lt;processId&gt;, &lt;folderId&gt;);\n</code></pre>"},{"location":"api/interfaces/ProcessServiceModel/#start","title":"start()","text":"<pre><code>start(\n   request: ProcessStartRequest, \n   folderId: number, \n   options?: RequestOptions): Promise&lt;ProcessStartResponse[]&gt;;\n</code></pre> <p>Starts a process with the specified configuration</p>"},{"location":"api/interfaces/ProcessServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>request</code> <code>ProcessStartRequest</code> Process start configuration <code>folderId</code> <code>number</code> Required folder ID <code>options?</code> <code>RequestOptions</code> Optional request options"},{"location":"api/interfaces/ProcessServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>ProcessStartResponse</code>[]&gt;</p> <p>Promise resolving to array of started process instances ProcessStartResponse</p>"},{"location":"api/interfaces/ProcessServiceModel/#example_2","title":"Example","text":"<pre><code>// Start a process by process key\nconst process = await sdk.processes.start({\n  processKey: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n}, &lt;folderId&gt;); // folderId is required\n\n// Start a process by name with specific robots\nconst process = await sdk.processes.start({\n  processName: \"MyProcess\"\n}, &lt;folderId&gt;); // folderId is required\n</code></pre>"},{"location":"api/interfaces/ProcessStartResponse/","title":"ProcessStartResponse","text":"<p>Interface for job response</p>"},{"location":"api/interfaces/ProcessStartResponse/#extends","title":"Extends","text":"<ul> <li><code>ProcessProperties</code>.<code>FolderProperties</code></li> </ul>"},{"location":"api/interfaces/ProcessStartResponse/#properties","title":"Properties","text":"Property Type <code>jobPriority?</code> <code>JobPriority</code> <code>specificPriorityValue?</code> <code>number</code> <code>inputArguments?</code> <code>string</code> <code>environmentVariables?</code> <code>string</code> <code>entryPointPath?</code> <code>string</code> <code>remoteControlAccess?</code> <code>RemoteControlAccess</code> <code>requiresUserInteraction?</code> <code>boolean</code> <code>folderId?</code> <code>number</code> <code>folderName?</code> <code>string</code> <code>key</code> <code>string</code> <code>startTime</code> <code>null</code> | <code>string</code> <code>endTime</code> <code>null</code> | <code>string</code> <code>state</code> <code>JobState</code> <code>source</code> <code>string</code> <code>sourceType</code> <code>string</code> <code>batchExecutionKey</code> <code>string</code> <code>info</code> <code>null</code> | <code>string</code> <code>createdTime</code> <code>string</code> <code>startingScheduleId</code> <code>null</code> | <code>number</code> <code>processName</code> <code>string</code> <code>type</code> <code>JobType</code> <code>inputFile</code> <code>null</code> | <code>string</code> <code>outputArguments</code> <code>null</code> | <code>string</code> <code>outputFile</code> <code>null</code> | <code>string</code> <code>hostMachineName</code> <code>null</code> | <code>string</code> <code>persistenceId</code> <code>null</code> | <code>string</code> <code>resumeVersion</code> <code>null</code> | <code>number</code> <code>stopStrategy</code> <code>null</code> | <code>StopStrategy</code> <code>runtimeType</code> <code>string</code> <code>processVersionId</code> <code>null</code> | <code>number</code> <code>reference</code> <code>string</code> <code>packageType</code> <code>PackageType</code> <code>machine?</code> <code>Machine</code> <code>resumeOnSameContext</code> <code>boolean</code> <code>localSystemAccount</code> <code>string</code> <code>orchestratorUserIdentity</code> <code>null</code> | <code>string</code> <code>startingTriggerId</code> <code>null</code> | <code>string</code> <code>maxExpectedRunningTimeSeconds</code> <code>null</code> | <code>number</code> <code>parentJobKey</code> <code>null</code> | <code>string</code> <code>resumeTime</code> <code>null</code> | <code>string</code> <code>lastModifiedTime</code> <code>null</code> | <code>string</code> <code>jobError</code> <code>null</code> | <code>JobError</code> <code>errorCode</code> <code>null</code> | <code>string</code> <code>robot?</code> <code>RobotMetadata</code> <code>id</code> <code>number</code>"},{"location":"api/interfaces/QueueGetResponse/","title":"QueueGetResponse","text":"<p>Interface for queue response</p>"},{"location":"api/interfaces/QueueGetResponse/#properties","title":"Properties","text":"Property Type <code>key</code> <code>string</code> <code>name</code> <code>string</code> <code>id</code> <code>number</code> <code>description</code> <code>string</code> <code>maxNumberOfRetries</code> <code>number</code> <code>acceptAutomaticallyRetry</code> <code>boolean</code> <code>retryAbandonedItems</code> <code>boolean</code> <code>enforceUniqueReference</code> <code>boolean</code> <code>encrypted</code> <code>boolean</code> <code>specificDataJsonSchema</code> <code>null</code> | <code>string</code> <code>outputDataJsonSchema</code> <code>null</code> | <code>string</code> <code>analyticsDataJsonSchema</code> <code>null</code> | <code>string</code> <code>createdTime</code> <code>string</code> <code>processScheduleId</code> <code>null</code> | <code>number</code> <code>slaInMinutes</code> <code>number</code> <code>riskSlaInMinutes</code> <code>number</code> <code>releaseId</code> <code>null</code> | <code>number</code> <code>isProcessInCurrentFolder</code> <code>null</code> | <code>boolean</code> <code>foldersCount</code> <code>number</code> <code>folderId</code> <code>number</code> <code>folderName</code> <code>string</code>"},{"location":"api/interfaces/QueueServiceModel/","title":"Queues","text":"<p>Service for managing UiPath Queues</p> <p>Queues are a fundamental component of UiPath automation that enable distributed and scalable processing of work items. UiPath Queues Guide</p>"},{"location":"api/interfaces/QueueServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/QueueServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;QueueGetResponse&gt; : NonPaginatedResponse&lt;QueueGetResponse&gt;&gt;;\n</code></pre> <p>Gets all queues across folders with optional filtering and folder scoping</p>"},{"location":"api/interfaces/QueueServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>QueueGetAllOptions</code> <code>QueueGetAllOptions</code>"},{"location":"api/interfaces/QueueServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options including optional folderId and pagination options"},{"location":"api/interfaces/QueueServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>QueueGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>QueueGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of queues NonPaginatedResponse or a PaginatedResponse when pagination options are used. QueueGetResponse"},{"location":"api/interfaces/QueueServiceModel/#signature","title":"Signature","text":"<p>getAll(options?) \u2192 Promise&lt;QueueGetResponse[]&gt;</p>"},{"location":"api/interfaces/QueueServiceModel/#example","title":"Example","text":"<pre><code>// Standard array return\nconst queues = await sdk.queues.getAll();\n\n// Get queues within a specific folder\nconst queues = await sdk.queues.getAll({ \n  folderId: &lt;folderId&gt;\n});\n\n// Get queues with filtering\nconst queues = await sdk.queues.getAll({ \n  filter: \"name eq 'MyQueue'\"\n});\n\n// First page with pagination\nconst page1 = await sdk.queues.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.queues.getAll({ cursor: page1.nextCursor });\n}\n\n// Jump to specific page\nconst page5 = await sdk.queues.getAll({\n  jumpToPage: 5,\n  pageSize: 10\n});\n</code></pre>"},{"location":"api/interfaces/QueueServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(\n   id: number, \n   folderId: number, \n   options?: BaseOptions): Promise&lt;QueueGetResponse&gt;;\n</code></pre> <p>Gets a single queue by ID</p>"},{"location":"api/interfaces/QueueServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>number</code> Queue ID <code>folderId</code> <code>number</code> Required folder ID <code>options?</code> <code>BaseOptions</code> -"},{"location":"api/interfaces/QueueServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>QueueGetResponse</code>&gt;</p> <p>Promise resolving to a queue definition</p>"},{"location":"api/interfaces/QueueServiceModel/#example_1","title":"Example","text":"<pre><code>// Get queue by ID \nconst queue = await sdk.queues.getById(&lt;queueId&gt;, &lt;folderId&gt;);\n</code></pre>"},{"location":"api/interfaces/RawCaseInstanceGetResponse/","title":"RawCaseInstanceGetResponse","text":"<p>Response for getting a single case instance</p>"},{"location":"api/interfaces/RawCaseInstanceGetResponse/#properties","title":"Properties","text":"Property Type <code>instanceId</code> <code>string</code> <code>packageKey</code> <code>string</code> <code>packageId</code> <code>string</code> <code>packageVersion</code> <code>string</code> <code>latestRunId</code> <code>string</code> <code>latestRunStatus</code> <code>string</code> <code>processKey</code> <code>string</code> <code>folderKey</code> <code>string</code> <code>userId</code> <code>number</code> <code>instanceDisplayName</code> <code>string</code> <code>startedByUser</code> <code>string</code> <code>source</code> <code>string</code> <code>creatorUserKey</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>completedTime</code> <code>string</code> <code>instanceRuns</code> <code>CaseInstanceRun</code>[] <code>caseAppConfig?</code> <code>CaseAppConfig</code> <code>caseType?</code> <code>string</code> <code>caseTitle?</code> <code>string</code>"},{"location":"api/interfaces/RawEntityGetResponse/","title":"RawEntityGetResponse","text":"<p>Entity metadata returned by getById</p>"},{"location":"api/interfaces/RawEntityGetResponse/#properties","title":"Properties","text":"Property Type <code>name</code> <code>string</code> <code>displayName</code> <code>string</code> <code>entityType</code> <code>EntityType</code> <code>description</code> <code>string</code> <code>fields</code> <code>FieldMetaData</code>[] <code>externalFields?</code> <code>ExternalSourceFields</code>[] <code>sourceJoinCriterias?</code> <code>SourceJoinCriteria</code>[] <code>recordCount?</code> <code>number</code> <code>storageSizeInMB?</code> <code>number</code> <code>usedStorageSizeInMB?</code> <code>number</code> <code>attachmentSizeInByte?</code> <code>number</code> <code>isRbacEnabled</code> <code>boolean</code> <code>id</code> <code>string</code> <code>createdBy</code> <code>string</code> <code>createdTime</code> <code>string</code> <code>updatedTime?</code> <code>string</code> <code>updatedBy?</code> <code>string</code>"},{"location":"api/interfaces/RawProcessInstanceGetResponse/","title":"RawProcessInstanceGetResponse","text":"<p>Response for getting a single process instance</p>"},{"location":"api/interfaces/RawProcessInstanceGetResponse/#properties","title":"Properties","text":"Property Type <code>instanceId</code> <code>string</code> <code>packageKey</code> <code>string</code> <code>packageId</code> <code>string</code> <code>packageVersion</code> <code>string</code> <code>latestRunId</code> <code>string</code> <code>latestRunStatus</code> <code>string</code> <code>processKey</code> <code>string</code> <code>folderKey</code> <code>string</code> <code>userId</code> <code>number</code> <code>instanceDisplayName</code> <code>string</code> <code>startedByUser</code> <code>string</code> <code>source</code> <code>string</code> <code>creatorUserKey</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>completedTime</code> <code>null</code> | <code>string</code> <code>instanceRuns</code> <code>ProcessInstanceRun</code>[]"},{"location":"api/interfaces/RawTaskCreateResponse/","title":"RawTaskCreateResponse","text":"<p>Base interface containing common fields shared across all task response types</p>"},{"location":"api/interfaces/RawTaskCreateResponse/#extends","title":"Extends","text":"<ul> <li><code>TaskBaseResponse</code></li> </ul>"},{"location":"api/interfaces/RawTaskCreateResponse/#properties","title":"Properties","text":"Property Type <code>status</code> <code>TaskStatus</code> <code>title</code> <code>string</code> <code>type</code> <code>TaskType</code> <code>priority</code> <code>TaskPriority</code> <code>folderId</code> <code>number</code> <code>key</code> <code>string</code> <code>isDeleted</code> <code>boolean</code> <code>creationTime</code> <code>string</code> <code>id</code> <code>number</code> <code>action</code> <code>null</code> | <code>string</code> <code>externalTag</code> <code>null</code> | <code>string</code> <code>lastAssignedTime</code> <code>null</code> | <code>string</code> <code>completionTime</code> <code>null</code> | <code>string</code> <code>parentOperationId</code> <code>null</code> | <code>string</code> <code>deleterUserId</code> <code>null</code> | <code>number</code> <code>deletionTime</code> <code>null</code> | <code>string</code> <code>lastModificationTime</code> <code>null</code> | <code>string</code> <code>waitJobState</code> <code>null</code> | <code>JobState</code> <code>assignedToUser</code> <code>null</code> | <code>UserLoginInfo</code> <code>taskSlaDetails</code> <code>null</code> | <code>TaskSlaDetail</code>[] <code>completedByUser</code> <code>null</code> | <code>UserLoginInfo</code> <code>taskAssignees</code> <code>null</code> | <code>UserLoginInfo</code>[] <code>processingTime</code> <code>null</code> | <code>number</code> <code>data</code> <code>null</code> | <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"api/interfaces/RawTaskGetResponse/","title":"RawTaskGetResponse","text":"<p>Base interface containing common fields shared across all task response types</p>"},{"location":"api/interfaces/RawTaskGetResponse/#extends","title":"Extends","text":"<ul> <li><code>TaskBaseResponse</code></li> </ul>"},{"location":"api/interfaces/RawTaskGetResponse/#properties","title":"Properties","text":"Property Type <code>status</code> <code>TaskStatus</code> <code>title</code> <code>string</code> <code>type</code> <code>TaskType</code> <code>priority</code> <code>TaskPriority</code> <code>folderId</code> <code>number</code> <code>key</code> <code>string</code> <code>isDeleted</code> <code>boolean</code> <code>creationTime</code> <code>string</code> <code>id</code> <code>number</code> <code>action</code> <code>null</code> | <code>string</code> <code>externalTag</code> <code>null</code> | <code>string</code> <code>lastAssignedTime</code> <code>null</code> | <code>string</code> <code>completionTime</code> <code>null</code> | <code>string</code> <code>parentOperationId</code> <code>null</code> | <code>string</code> <code>deleterUserId</code> <code>null</code> | <code>number</code> <code>deletionTime</code> <code>null</code> | <code>string</code> <code>lastModificationTime</code> <code>null</code> | <code>string</code> <code>isCompleted</code> <code>boolean</code> <code>encrypted</code> <code>boolean</code> <code>bulkFormLayoutId</code> <code>null</code> | <code>number</code> <code>formLayoutId</code> <code>null</code> | <code>number</code> <code>taskSlaDetail</code> <code>null</code> | <code>TaskSlaDetail</code> <code>taskAssigneeName</code> <code>null</code> | <code>string</code> <code>lastModifierUserId</code> <code>null</code> | <code>number</code> <code>assignedToUser</code> <code>null</code> | <code>UserLoginInfo</code> <code>creatorUser?</code> <code>UserLoginInfo</code> <code>lastModifierUser?</code> <code>UserLoginInfo</code> <code>taskAssignments?</code> <code>TaskAssignment</code>[] <code>activities?</code> <code>TaskActivity</code>[] <code>tags?</code> <code>Tag</code>[] <code>formLayout?</code> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; <code>actionLabel?</code> <code>null</code> | <code>string</code> <code>taskSlaDetails?</code> <code>null</code> | <code>TaskSlaDetail</code>[] <code>completedByUser?</code> <code>null</code> | <code>UserLoginInfo</code> <code>taskAssignmentCriteria?</code> <code>string</code> <code>taskAssignees?</code> <code>null</code> | <code>UserLoginInfo</code>[] <code>taskSource?</code> <code>null</code> | <code>TaskSource</code> <code>processingTime?</code> <code>null</code> | <code>number</code> <code>data?</code> <code>null</code> | <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"api/interfaces/RequestOptions/","title":"RequestOptions","text":"<p>Common request options interface used across services for querying data</p>"},{"location":"api/interfaces/RequestOptions/#extends","title":"Extends","text":"<ul> <li><code>BaseOptions</code></li> </ul>"},{"location":"api/interfaces/RequestOptions/#properties","title":"Properties","text":"Property Type <code>expand?</code> <code>string</code> <code>select?</code> <code>string</code> <code>filter?</code> <code>string</code> <code>orderby?</code> <code>string</code>"},{"location":"api/interfaces/RequestSpec/","title":"RequestSpec","text":"<p>Base interface for all API requests</p>"},{"location":"api/interfaces/RequestSpec/#properties","title":"Properties","text":"Property Type Description <code>method?</code> <code>HttpMethod</code> HTTP method for the request <code>url?</code> <code>string</code> URL endpoint for the request <code>params?</code> <code>QueryParams</code> Query parameters to be appended to the URL <code>headers?</code> <code>Headers</code> HTTP headers to include with the request <code>body?</code> <code>unknown</code> Raw body content (takes precedence over data) <code>responseType?</code> <code>ResponseType</code> Expected response type <code>timeoutOptions?</code> <code>TimeoutOptions</code> Request timeout options <code>retryOptions?</code> <code>RetryOptions</code> Retry behavior options <code>bodyOptions?</code> <code>BodyOptions</code> Body transformation options <code>signal?</code> <code>AbortSignal</code> AbortSignal for cancelling the request <code>pagination?</code> <code>PaginationMetadata</code> Pagination metadata for the request"},{"location":"api/interfaces/RetryOptions/","title":"RetryOptions","text":"<p>Options for request retries</p>"},{"location":"api/interfaces/RetryOptions/#properties","title":"Properties","text":"Property Type Description <code>maxRetries?</code> <code>number</code> Maximum number of retry attempts <code>retryDelay?</code> <code>number</code> Base delay between retries in milliseconds <code>useExponentialBackoff?</code> <code>boolean</code> Whether to use exponential backoff <code>retryableStatusCodes?</code> <code>number</code>[] Status codes that should trigger a retry"},{"location":"api/interfaces/RobotMetadata/","title":"RobotMetadata","text":"<p>Interface for robot metadata</p>"},{"location":"api/interfaces/RobotMetadata/#properties","title":"Properties","text":"Property Type <code>id</code> <code>number</code> <code>name?</code> <code>string</code> <code>username?</code> <code>string</code>"},{"location":"api/interfaces/SourceJoinCriteria/","title":"SourceJoinCriteria","text":"<p>Source join criteria</p>"},{"location":"api/interfaces/SourceJoinCriteria/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>entityId</code> <code>string</code> <code>joinFieldName?</code> <code>string</code> <code>joinType</code> <code>LeftJoin</code> <code>relatedSourceObjectId?</code> <code>string</code> <code>relatedSourceFieldName?</code> <code>string</code>"},{"location":"api/interfaces/StageSLA/","title":"StageSLA","text":"<p>SLA configuration for stages</p>"},{"location":"api/interfaces/StageSLA/#properties","title":"Properties","text":"Property Type <code>length?</code> <code>number</code> <code>duration?</code> <code>SLADurationUnit</code> <code>escalationRule?</code> <code>EscalationRule</code>[]"},{"location":"api/interfaces/StageTask/","title":"StageTask","text":"<p>Stage task information</p>"},{"location":"api/interfaces/StageTask/#properties","title":"Properties","text":"Property Type <code>id</code> <code>string</code> <code>name</code> <code>string</code> <code>completedTime</code> <code>string</code> <code>startedTime</code> <code>string</code> <code>status</code> <code>string</code> <code>type</code> <code>StageTaskType</code>"},{"location":"api/interfaces/Tag/","title":"Tag","text":"<p>Tag information for tasks</p>"},{"location":"api/interfaces/Tag/#properties","title":"Properties","text":"Property Type <code>name</code> <code>string</code> <code>displayName</code> <code>string</code> <code>displayValue</code> <code>string</code>"},{"location":"api/interfaces/TaskActivity/","title":"TaskActivity","text":"<p>Task activity information</p>"},{"location":"api/interfaces/TaskActivity/#properties","title":"Properties","text":"Property Type <code>task?</code> <code>RawTaskGetResponse</code> <code>organizationUnitId</code> <code>number</code> <code>taskId</code> <code>number</code> <code>taskKey</code> <code>string</code> <code>activityType</code> <code>TaskActivityType</code> <code>creatorUserId</code> <code>number</code> <code>targetUserId</code> <code>null</code> | <code>number</code> <code>creationTime</code> <code>string</code>"},{"location":"api/interfaces/TaskAssignment/","title":"TaskAssignment","text":""},{"location":"api/interfaces/TaskAssignment/#properties","title":"Properties","text":"Property Type <code>assignee?</code> <code>UserLoginInfo</code> <code>task?</code> <code>RawTaskGetResponse</code> <code>id?</code> <code>number</code>"},{"location":"api/interfaces/TaskAssignmentOptions/","title":"TaskAssignmentOptions","text":""},{"location":"api/interfaces/TaskAssignmentOptions/#properties","title":"Properties","text":"Property Type <code>taskId</code> <code>number</code> <code>userId</code> <code>number</code> <code>userNameOrEmail?</code> <code>string</code>"},{"location":"api/interfaces/TaskAssignmentResponse/","title":"TaskAssignmentResponse","text":""},{"location":"api/interfaces/TaskAssignmentResponse/#properties","title":"Properties","text":"Property Type <code>taskId?</code> <code>number</code> <code>userId?</code> <code>number</code> <code>errorCode?</code> <code>number</code> <code>errorMessage?</code> <code>string</code> <code>userNameOrEmail?</code> <code>string</code>"},{"location":"api/interfaces/TaskBaseResponse/","title":"TaskBaseResponse","text":"<p>Base interface containing common fields shared across all task response types</p>"},{"location":"api/interfaces/TaskBaseResponse/#extended-by","title":"Extended by","text":"<ul> <li><code>RawTaskCreateResponse</code></li> <li><code>RawTaskGetResponse</code></li> </ul>"},{"location":"api/interfaces/TaskBaseResponse/#properties","title":"Properties","text":"Property Type <code>status</code> <code>TaskStatus</code> <code>title</code> <code>string</code> <code>type</code> <code>TaskType</code> <code>priority</code> <code>TaskPriority</code> <code>folderId</code> <code>number</code> <code>key</code> <code>string</code> <code>isDeleted</code> <code>boolean</code> <code>creationTime</code> <code>string</code> <code>id</code> <code>number</code> <code>action</code> <code>null</code> | <code>string</code> <code>externalTag</code> <code>null</code> | <code>string</code> <code>lastAssignedTime</code> <code>null</code> | <code>string</code> <code>completionTime</code> <code>null</code> | <code>string</code> <code>parentOperationId</code> <code>null</code> | <code>string</code> <code>deleterUserId</code> <code>null</code> | <code>number</code> <code>deletionTime</code> <code>null</code> | <code>string</code> <code>lastModificationTime</code> <code>null</code> | <code>string</code>"},{"location":"api/interfaces/TaskCompletionOptions/","title":"TaskCompletionOptions","text":""},{"location":"api/interfaces/TaskCompletionOptions/#properties","title":"Properties","text":"Property Type <code>taskId</code> <code>number</code> <code>data?</code> <code>any</code> <code>action?</code> <code>string</code>"},{"location":"api/interfaces/TaskCreateOptions/","title":"TaskCreateOptions","text":""},{"location":"api/interfaces/TaskCreateOptions/#properties","title":"Properties","text":"Property Type <code>title</code> <code>string</code> <code>priority?</code> <code>TaskPriority</code>"},{"location":"api/interfaces/TaskMethods/","title":"TaskMethods","text":""},{"location":"api/interfaces/TaskMethods/#methods","title":"Methods","text":""},{"location":"api/interfaces/TaskMethods/#assign","title":"assign()","text":"<pre><code>assign(options: TaskAssignOptions): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentOptions[]\n  | TaskAssignmentResponse[]&gt;&gt;;\n</code></pre> <p>Assigns this task to a user or users</p>"},{"location":"api/interfaces/TaskMethods/#parameters","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>TaskAssignOptions</code> Assignment options (requires at least one of: userId, userNameOrEmail)"},{"location":"api/interfaces/TaskMethods/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentOptions</code>[]   | <code>TaskAssignmentResponse</code>[]&gt;&gt;</p> <p>Promise resolving to task assignment results</p>"},{"location":"api/interfaces/TaskMethods/#reassign","title":"reassign()","text":"<pre><code>reassign(options: TaskAssignOptions): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentOptions[]\n  | TaskAssignmentResponse[]&gt;&gt;;\n</code></pre> <p>Reassigns this task to a new user</p>"},{"location":"api/interfaces/TaskMethods/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>TaskAssignOptions</code> Assignment options (requires at least one of: userId, userNameOrEmail)"},{"location":"api/interfaces/TaskMethods/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentOptions</code>[]   | <code>TaskAssignmentResponse</code>[]&gt;&gt;</p> <p>Promise resolving to task assignment results</p>"},{"location":"api/interfaces/TaskMethods/#unassign","title":"unassign()","text":"<pre><code>unassign(): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentResponse[]\n  | {\n  taskId: number;\n}[]&gt;&gt;;\n</code></pre> <p>Unassigns this task (removes current assignee)</p>"},{"location":"api/interfaces/TaskMethods/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentResponse</code>[]   | {   <code>taskId</code>: <code>number</code>; }[]&gt;&gt;</p> <p>Promise resolving to task assignment results</p>"},{"location":"api/interfaces/TaskMethods/#complete","title":"complete()","text":"<pre><code>complete(options: TaskCompleteOptions): Promise&lt;OperationResponse&lt;TaskCompletionOptions&gt;&gt;;\n</code></pre> <p>Completes this task with optional data and action</p>"},{"location":"api/interfaces/TaskMethods/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>TaskCompleteOptions</code> Completion options"},{"location":"api/interfaces/TaskMethods/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>TaskCompletionOptions</code>&gt;&gt;</p> <p>Promise resolving to completion result</p>"},{"location":"api/interfaces/TaskServiceModel/","title":"Tasks","text":"<p>Service for managing UiPath Action Center</p> <p>Tasks are task-based automation components that can be integrated into applications and processes. They represent discrete units of work that can be triggered and monitored through the UiPath API. UiPath Action Center Guide</p>"},{"location":"api/interfaces/TaskServiceModel/#methods","title":"Methods","text":""},{"location":"api/interfaces/TaskServiceModel/#getall","title":"getAll()","text":"<pre><code>getAll&lt;T&gt;(options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;TaskGetResponse&gt; : NonPaginatedResponse&lt;TaskGetResponse&gt;&gt;;\n</code></pre> <p>Gets all tasks across folders with optional filtering</p>"},{"location":"api/interfaces/TaskServiceModel/#type-parameters","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>TaskGetAllOptions</code> <code>TaskGetAllOptions</code>"},{"location":"api/interfaces/TaskServiceModel/#parameters","title":"Parameters","text":"Parameter Type Description <code>options?</code> <code>T</code> Query options including optional folderId and pagination options"},{"location":"api/interfaces/TaskServiceModel/#returns","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>TaskGetResponse</code>&gt;&gt;</p> <p>Promise resolving to either an array of tasks NonPaginatedResponse or a PaginatedResponse when pagination options are used. TaskGetResponse"},{"location":"api/interfaces/TaskServiceModel/#example","title":"Example","text":"<pre><code>// Standard array return\nconst tasks = await sdk.tasks.getAll();\n\n// Get tasks within a specific folder\nconst tasks = await sdk.tasks.getAll({ \n  folderId: 123\n});\n\n// First page with pagination\nconst page1 = await sdk.tasks.getAll({ pageSize: 10 });\n\n// Navigate using cursor\nif (page1.hasNextPage) {\n  const page2 = await sdk.tasks.getAll({ cursor: page1.nextCursor });\n}\n\n// Jump to specific page\nconst page5 = await sdk.tasks.getAll({\n  jumpToPage: 5,\n  pageSize: 10\n});\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#getbyid","title":"getById()","text":"<pre><code>getById(\n   id: number, \n   options?: BaseOptions, \n   folderId?: number): Promise&lt;TaskGetResponse&gt;;\n</code></pre> <p>Gets a task by ID IMPORTANT: For form tasks, folderId must be provided.</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>id</code> <code>number</code> The ID of the task to retrieve <code>options?</code> <code>BaseOptions</code> Optional query parameters <code>folderId?</code> <code>number</code> Optional folder ID (REQUIRED for form tasks)"},{"location":"api/interfaces/TaskServiceModel/#returns_1","title":"Returns","text":"<p><code>Promise</code>&lt;<code>TaskGetResponse</code>&gt;</p> <p>Promise resolving to the task TaskGetResponse</p>"},{"location":"api/interfaces/TaskServiceModel/#example_1","title":"Example","text":"<pre><code>// Get a task by ID\nconst task = await sdk.tasks.getById(&lt;taskId&gt;);\n\n// Get a form task by ID\nconst formTask = await sdk.tasks.getById(&lt;taskId&gt;, &lt;folderId&gt;);\n\n// Access form task properties\nconsole.log(formTask.formLayout);\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#create","title":"create()","text":"<pre><code>create(options: TaskCreateOptions, folderId: number): Promise&lt;TaskCreateResponse&gt;;\n</code></pre> <p>Creates a new task</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>options</code> <code>TaskCreateOptions</code> The task to be created <code>folderId</code> <code>number</code> Required folder ID"},{"location":"api/interfaces/TaskServiceModel/#returns_2","title":"Returns","text":"<p><code>Promise</code>&lt;<code>TaskCreateResponse</code>&gt;</p> <p>Promise resolving to the created task TaskCreateResponse</p>"},{"location":"api/interfaces/TaskServiceModel/#example_2","title":"Example","text":"<pre><code>import { TaskPriority } from '@uipath/uipath-typescript';\nconst task = await sdk.tasks.create({\n  title: \"My Task\",\n  priority: TaskPriority.Medium\n}, &lt;folderId&gt;); // folderId is required\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#assign","title":"assign()","text":"<pre><code>assign(options: \n  | TaskAssignmentOptions\n  | TaskAssignmentOptions[]): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentOptions[]\n  | TaskAssignmentResponse[]&gt;&gt;;\n</code></pre> <p>Assigns tasks to users</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>options</code> | <code>TaskAssignmentOptions</code> | <code>TaskAssignmentOptions</code>[] Single task assignment or array of task assignments"},{"location":"api/interfaces/TaskServiceModel/#returns_3","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentOptions</code>[]   | <code>TaskAssignmentResponse</code>[]&gt;&gt;</p> <p>Promise resolving to array of task assignment results TaskAssignmentResponse</p>"},{"location":"api/interfaces/TaskServiceModel/#example_3","title":"Example","text":"<pre><code>// Assign a single task to a user by ID\nconst result = await sdk.tasks.assign({\n  taskId: &lt;taskId&gt;,\n  userId: &lt;userId&gt;\n});\n\nor\n\nconst task = await sdk.tasks.getById(&lt;taskId&gt;);\nconst result = await task.assign({\n  userId: &lt;userId&gt;\n});\n\n// Assign a single task to a user by email\nconst result = await sdk.tasks.assign({\n  taskId: &lt;taskId&gt;,\n  userNameOrEmail: \"user@example.com\"\n});\n\n// Assign multiple tasks\nconst result = await sdk.tasks.assign([\n  { taskId: &lt;taskId1&gt;, userId: &lt;userId&gt; },\n  { taskId: &lt;taskId2&gt;, userNameOrEmail: \"user@example.com\" }\n]);\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#reassign","title":"reassign()","text":"<pre><code>reassign(options: \n  | TaskAssignmentOptions\n  | TaskAssignmentOptions[]): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentOptions[]\n  | TaskAssignmentResponse[]&gt;&gt;;\n</code></pre> <p>Reassigns tasks to new users</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>options</code> | <code>TaskAssignmentOptions</code> | <code>TaskAssignmentOptions</code>[] Single task assignment or array of task assignments"},{"location":"api/interfaces/TaskServiceModel/#returns_4","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentOptions</code>[]   | <code>TaskAssignmentResponse</code>[]&gt;&gt;</p> <p>Promise resolving to array of task assignment results TaskAssignmentResponse</p>"},{"location":"api/interfaces/TaskServiceModel/#example_4","title":"Example","text":"<pre><code>// Reassign a single task to a user by ID\nconst result = await sdk.tasks.reassign({\n  taskId: &lt;taskId&gt;,\n  userId: &lt;userId&gt;\n});\n\nor\n\nconst task = await sdk.tasks.getById(&lt;taskId&gt;);\nconst result = await task.reassign({\n  userId: &lt;userId&gt;\n});\n\n// Reassign a single task to a user by email\nconst result = await sdk.tasks.reassign({\n  taskId: &lt;taskId&gt;,\n  userNameOrEmail: \"user@example.com\"\n});\n\n// Reassign multiple tasks\nconst result = await sdk.tasks.reassign([\n  { taskId: &lt;taskId1&gt;, userId: &lt;userId&gt; },\n  { taskId: &lt;taskId2&gt;, userNameOrEmail: \"user@example.com\" }\n]);\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#unassign","title":"unassign()","text":"<pre><code>unassign(taskId: number | number[]): Promise&lt;OperationResponse&lt;\n  | TaskAssignmentResponse[]\n  | {\n  taskId: number;\n}[]&gt;&gt;;\n</code></pre> <p>Unassigns tasks (removes current assignees)</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>taskId</code> <code>number</code> | <code>number</code>[] Single task ID or array of task IDs to unassign"},{"location":"api/interfaces/TaskServiceModel/#returns_5","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;   | <code>TaskAssignmentResponse</code>[]   | {   <code>taskId</code>: <code>number</code>; }[]&gt;&gt;</p> <p>Promise resolving to array of task assignment results TaskAssignmentResponse</p>"},{"location":"api/interfaces/TaskServiceModel/#example_5","title":"Example","text":"<pre><code>// Unassign a single task\nconst result = await sdk.tasks.unassign(&lt;taskId&gt;);\n\nor\n\nconst task = await sdk.tasks.getById(&lt;taskId&gt;);\nconst result = await task.unassign();\n\n// Unassign multiple tasks\nconst result = await sdk.tasks.unassign([&lt;taskId1&gt;, &lt;taskId2&gt;, &lt;taskId3&gt;]);\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#complete","title":"complete()","text":"<pre><code>complete(\n   taskType: TaskType, \n   options: TaskCompletionOptions, \n   folderId: number): Promise&lt;OperationResponse&lt;TaskCompletionOptions&gt;&gt;;\n</code></pre> <p>Completes a task with the specified type and data</p>"},{"location":"api/interfaces/TaskServiceModel/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>taskType</code> <code>TaskType</code> The type of task (Form, App, or External) <code>options</code> <code>TaskCompletionOptions</code> The completion options <code>folderId</code> <code>number</code> Required folder ID"},{"location":"api/interfaces/TaskServiceModel/#returns_6","title":"Returns","text":"<p><code>Promise</code>&lt;<code>OperationResponse</code>&lt;<code>TaskCompletionOptions</code>&gt;&gt;</p> <p>Promise resolving to completion result TaskCompletionOptions</p>"},{"location":"api/interfaces/TaskServiceModel/#example_6","title":"Example","text":"<pre><code>// Complete an app task\nawait sdk.tasks.complete(TaskType.App, {\n  taskId: &lt;taskId&gt;,\n  data: {},\n  action: \"submit\"\n}, &lt;folderId&gt;); // folderId is required\n\n// Complete an external task\nawait sdk.tasks.complete(TaskType.External, {\n  taskId: &lt;taskId&gt;\n}, &lt;folderId&gt;); // folderId is required\n</code></pre>"},{"location":"api/interfaces/TaskServiceModel/#getusers","title":"getUsers()","text":"<pre><code>getUsers&lt;T&gt;(folderId: number, options?: T): Promise&lt;T extends HasPaginationOptions&lt;T&gt; ? PaginatedResponse&lt;UserLoginInfo&gt; : NonPaginatedResponse&lt;UserLoginInfo&gt;&gt;;\n</code></pre> <p>Gets users in the given folder who have Tasks.View and Tasks.Edit permissions Returns a NonPaginatedResponse with data and totalCount when no pagination parameters are provided, or a PaginatedResponse when any pagination parameter is provided</p>"},{"location":"api/interfaces/TaskServiceModel/#type-parameters_1","title":"Type Parameters","text":"Type Parameter Default type <code>T</code> extends <code>TaskGetUsersOptions</code> <code>TaskGetUsersOptions</code>"},{"location":"api/interfaces/TaskServiceModel/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>folderId</code> <code>number</code> The folder ID to get users from <code>options?</code> <code>T</code> Optional query and pagination parameters"},{"location":"api/interfaces/TaskServiceModel/#returns_7","title":"Returns","text":"<p><code>Promise</code>&lt;<code>T</code> extends <code>HasPaginationOptions</code>&lt;<code>T</code>&gt; ? <code>PaginatedResponse</code>&lt;<code>UserLoginInfo</code>&gt; : <code>NonPaginatedResponse</code>&lt;<code>UserLoginInfo</code>&gt;&gt;</p> <p>Promise resolving to either an array of users NonPaginatedResponse or a PaginatedResponse when pagination options are used.  UserLoginInfo"},{"location":"api/interfaces/TaskServiceModel/#example_7","title":"Example","text":"<pre><code>// Get users from a folder\nconst users = await sdk.tasks.getUsers(&lt;folderId&gt;);\n\n// Access user properties\nconsole.log(users.items[0].name);\nconsole.log(users.items[0].emailAddress);\n</code></pre>"},{"location":"api/interfaces/TaskSlaDetail/","title":"TaskSlaDetail","text":""},{"location":"api/interfaces/TaskSlaDetail/#properties","title":"Properties","text":"Property Type <code>expiryTime?</code> <code>string</code> <code>startCriteria?</code> <code>TaskSlaCriteria</code> <code>endCriteria?</code> <code>TaskSlaCriteria</code> <code>status?</code> <code>TaskSlaStatus</code>"},{"location":"api/interfaces/TaskSource/","title":"TaskSource","text":""},{"location":"api/interfaces/TaskSource/#properties","title":"Properties","text":"Property Type <code>sourceName</code> <code>TaskSourceName</code> <code>sourceId</code> <code>string</code> <code>taskSourceMetadata</code> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;"},{"location":"api/interfaces/TasksUnassignOptions/","title":"TasksUnassignOptions","text":""},{"location":"api/interfaces/TasksUnassignOptions/#properties","title":"Properties","text":"Property Type <code>taskIds</code> <code>number</code>[]"},{"location":"api/interfaces/TimeoutOptions/","title":"TimeoutOptions","text":"<p>Options for request timeouts</p>"},{"location":"api/interfaces/TimeoutOptions/#properties","title":"Properties","text":"Property Type Description <code>timeout?</code> <code>number</code> Request timeout in milliseconds <code>abortOnTimeout?</code> <code>boolean</code> Whether to abort the request on timeout"},{"location":"api/interfaces/UserLoginInfo/","title":"UserLoginInfo","text":""},{"location":"api/interfaces/UserLoginInfo/#properties","title":"Properties","text":"Property Type <code>name</code> <code>string</code> <code>surname</code> <code>string</code> <code>userName</code> <code>string</code> <code>emailAddress</code> <code>string</code> <code>displayName</code> <code>string</code> <code>id</code> <code>number</code>"},{"location":"api/type-aliases/AssetGetAllOptions/","title":"AssetGetAllOptions","text":"<pre><code>type AssetGetAllOptions = RequestOptions &amp; PaginationOptions &amp; {\n  folderId?: number;\n};\n</code></pre> <p>Options for getting assets across folders</p>"},{"location":"api/type-aliases/AssetGetAllOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/AssetGetAllOptions/#folderid","title":"folderId?","text":"<pre><code>optional folderId: number;\n</code></pre> <p>Optional folder ID to filter assets by folder</p>"},{"location":"api/type-aliases/AssetGetByIdOptions/","title":"AssetGetByIdOptions","text":"<pre><code>type AssetGetByIdOptions = BaseOptions;\n</code></pre> <p>Options for getting a single asset by ID</p>"},{"location":"api/type-aliases/BpmnXmlString/","title":"BpmnXmlString","text":"<pre><code>type BpmnXmlString = string;\n</code></pre>"},{"location":"api/type-aliases/BucketGetAllOptions/","title":"BucketGetAllOptions","text":"<pre><code>type BucketGetAllOptions = RequestOptions &amp; PaginationOptions &amp; {\n  folderId?: number;\n};\n</code></pre>"},{"location":"api/type-aliases/BucketGetAllOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/BucketGetAllOptions/#folderid","title":"folderId?","text":"<pre><code>optional folderId: number;\n</code></pre>"},{"location":"api/type-aliases/BucketGetByIdOptions/","title":"BucketGetByIdOptions","text":"<pre><code>type BucketGetByIdOptions = BaseOptions;\n</code></pre>"},{"location":"api/type-aliases/BucketGetFileMetaDataWithPaginationOptions/","title":"BucketGetFileMetaDataWithPaginationOptions","text":"<pre><code>type BucketGetFileMetaDataWithPaginationOptions = BucketGetFileMetaDataOptions &amp; PaginationOptions;\n</code></pre> <p>Request options for getting files in a bucket with pagination support</p>"},{"location":"api/type-aliases/BucketGetReadUriOptions/","title":"BucketGetReadUriOptions","text":"<pre><code>type BucketGetReadUriOptions = BucketGetUriOptions;\n</code></pre> <p>Request options for getting a read URI for a file in a bucket</p>"},{"location":"api/type-aliases/CaseInstanceGetAllWithPaginationOptions/","title":"CaseInstanceGetAllWithPaginationOptions","text":"<pre><code>type CaseInstanceGetAllWithPaginationOptions = CaseInstanceGetAllOptions &amp; PaginationOptions;\n</code></pre> <p>Query options for getting case instances with pagination support</p>"},{"location":"api/type-aliases/CaseInstanceGetResponse/","title":"CaseInstanceGetResponse","text":"<pre><code>type CaseInstanceGetResponse = RawCaseInstanceGetResponse &amp; CaseInstanceMethods;\n</code></pre>"},{"location":"api/type-aliases/EntityDeleteResponse/","title":"EntityDeleteResponse","text":"<pre><code>type EntityDeleteResponse = EntityOperationResponse;\n</code></pre> <p>Response from deleting data from an entity</p>"},{"location":"api/type-aliases/EntityGetRecordsByIdOptions/","title":"EntityGetRecordsByIdOptions","text":"<pre><code>type EntityGetRecordsByIdOptions = {\n  expansionLevel?: number;\n} &amp; PaginationOptions;\n</code></pre> <p>Options for getting an entity by Id</p>"},{"location":"api/type-aliases/EntityGetRecordsByIdOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/EntityGetRecordsByIdOptions/#expansionlevel","title":"expansionLevel?","text":"<pre><code>optional expansionLevel: number;\n</code></pre> <p>Level of entity expansion (default: 0)</p>"},{"location":"api/type-aliases/EntityGetResponse/","title":"EntityGetResponse","text":"<pre><code>type EntityGetResponse = RawEntityGetResponse &amp; EntityMethods;\n</code></pre> <p>Entity with methods combining metadata with operation methods</p>"},{"location":"api/type-aliases/EntityInsertOptions/","title":"EntityInsertOptions","text":"<pre><code>type EntityInsertOptions = EntityOperationOptions;\n</code></pre> <p>Options for inserting data into an entity</p>"},{"location":"api/type-aliases/EntityInsertResponse/","title":"EntityInsertResponse","text":"<pre><code>type EntityInsertResponse = EntityOperationResponse;\n</code></pre> <p>Response from inserting data into an entity</p>"},{"location":"api/type-aliases/EntityUpdateOptions/","title":"EntityUpdateOptions","text":"<pre><code>type EntityUpdateOptions = EntityOperationOptions;\n</code></pre> <p>Options for updating data in an entity</p>"},{"location":"api/type-aliases/EntityUpdateResponse/","title":"EntityUpdateResponse","text":"<pre><code>type EntityUpdateResponse = EntityOperationResponse;\n</code></pre> <p>Response from updating data in an entity</p>"},{"location":"api/type-aliases/HasPaginationOptions/","title":"HasPaginationOptions","text":"<pre><code>type HasPaginationOptions&lt;T&gt; = \n  | T &amp; {\n  pageSize: number;\n}\n  | T &amp; {\n  cursor: PaginationCursor;\n}\n  | T &amp; {\n  jumpToPage: number;\n};\n</code></pre> <p>Helper type for defining paginated method overloads Creates a union type of all ways pagination can be triggered</p>"},{"location":"api/type-aliases/HasPaginationOptions/#type-parameters","title":"Type Parameters","text":"Type Parameter <code>T</code>"},{"location":"api/type-aliases/Headers/","title":"Headers","text":"<pre><code>type Headers = Record&lt;string, string&gt;;\n</code></pre> <p>Standard HTTP headers type</p>"},{"location":"api/type-aliases/HttpMethod/","title":"HttpMethod","text":"<pre><code>type HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\" | \"HEAD\" | \"OPTIONS\";\n</code></pre> <p>HTTP methods supported by the API client</p>"},{"location":"api/type-aliases/PaginationMethodUnion/","title":"PaginationMethodUnion","text":"<pre><code>type PaginationMethodUnion = \n  | {\n  cursor?: PaginationCursor;\n  jumpToPage?: never;\n}\n  | {\n  cursor?: never;\n  jumpToPage?: number;\n}\n  | {\n  cursor?: never;\n  jumpToPage?: never;\n};\n</code></pre> <p>Discriminated union for pagination methods - ensures cursor and jumpToPage are mutually exclusive</p>"},{"location":"api/type-aliases/PaginationOptions/","title":"PaginationOptions","text":"<pre><code>type PaginationOptions = {\n  pageSize?: number;\n} &amp; PaginationMethodUnion;\n</code></pre> <p>Pagination options. Users cannot specify both cursor and jumpToPage.</p>"},{"location":"api/type-aliases/PaginationOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/PaginationOptions/#pagesize","title":"pageSize?","text":"<pre><code>optional pageSize: number;\n</code></pre> <p>Size of the page to fetch (items per page)</p>"},{"location":"api/type-aliases/ProcessGetAllOptions/","title":"ProcessGetAllOptions","text":"<pre><code>type ProcessGetAllOptions = RequestOptions &amp; PaginationOptions &amp; {\n  folderId?: number;\n};\n</code></pre> <p>Options for getting processes across folders</p>"},{"location":"api/type-aliases/ProcessGetAllOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/ProcessGetAllOptions/#folderid","title":"folderId?","text":"<pre><code>optional folderId: number;\n</code></pre> <p>Optional folder ID to filter processes by folder</p>"},{"location":"api/type-aliases/ProcessGetByIdOptions/","title":"ProcessGetByIdOptions","text":"<pre><code>type ProcessGetByIdOptions = BaseOptions;\n</code></pre> <p>Options for getting a single process by ID</p>"},{"location":"api/type-aliases/ProcessInstanceGetAllWithPaginationOptions/","title":"ProcessInstanceGetAllWithPaginationOptions","text":"<pre><code>type ProcessInstanceGetAllWithPaginationOptions = ProcessInstanceGetAllOptions &amp; PaginationOptions;\n</code></pre> <p>Query options for getting process instances with pagination support</p>"},{"location":"api/type-aliases/ProcessInstanceGetResponse/","title":"ProcessInstanceGetResponse","text":"<pre><code>type ProcessInstanceGetResponse = RawProcessInstanceGetResponse &amp; ProcessInstanceMethods;\n</code></pre>"},{"location":"api/type-aliases/ProcessStartRequest/","title":"ProcessStartRequest","text":"<pre><code>type ProcessStartRequest = ProcessStartRequestWithKey | ProcessStartRequestWithName;\n</code></pre> <p>Interface for start process request Either processKey or processName must be provided</p>"},{"location":"api/type-aliases/QueryParams/","title":"QueryParams","text":"<pre><code>type QueryParams = Record&lt;string, \n  | string\n  | number\n  | boolean\n  | (string | number | boolean)[]\n  | null\n  | undefined&gt;;\n</code></pre> <p>Query parameters type with support for arrays and nested objects</p>"},{"location":"api/type-aliases/QueueGetAllOptions/","title":"QueueGetAllOptions","text":"<pre><code>type QueueGetAllOptions = RequestOptions &amp; PaginationOptions &amp; {\n  folderId?: number;\n};\n</code></pre> <p>Options for getting queues across folders</p>"},{"location":"api/type-aliases/QueueGetAllOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/QueueGetAllOptions/#folderid","title":"folderId?","text":"<pre><code>optional folderId: number;\n</code></pre> <p>Optional folder ID to filter queues by folder</p>"},{"location":"api/type-aliases/QueueGetByIdOptions/","title":"QueueGetByIdOptions","text":"<pre><code>type QueueGetByIdOptions = BaseOptions;\n</code></pre>"},{"location":"api/type-aliases/ResponseDictionary/","title":"ResponseDictionary","text":"<pre><code>type ResponseDictionary = Record&lt;string, string&gt;;\n</code></pre> <p>Maps header names to their values</p>"},{"location":"api/type-aliases/ResponseDictionary/#example","title":"Example","text":"<pre><code>{\n  \"x-ms-blob-type\": \"BlockBlob\"\n}\n</code></pre>"},{"location":"api/type-aliases/ResponseType/","title":"ResponseType","text":"<pre><code>type ResponseType = \"json\" | \"text\" | \"blob\" | \"arraybuffer\" | \"stream\";\n</code></pre> <p>Supported response types for API requests</p>"},{"location":"api/type-aliases/TaskAssignOptions/","title":"TaskAssignOptions","text":"<pre><code>type TaskAssignOptions = \n  | {\n  userId: number;\n  userNameOrEmail?: string;\n}\n  | {\n  userId?: number;\n  userNameOrEmail: string;\n};\n</code></pre> <p>Options for task assignment operations in the Task class At least one identification parameter is required</p>"},{"location":"api/type-aliases/TaskCompleteOptions/","title":"TaskCompleteOptions","text":"<pre><code>type TaskCompleteOptions = \n  | {\n  type: External;\n  data?: any;\n  action?: string;\n}\n  | {\n  type: Exclude&lt;TaskType, External&gt;;\n  data: any;\n  action: string;\n};\n</code></pre> <p>Options for completing a task</p>"},{"location":"api/type-aliases/TaskCreateResponse/","title":"TaskCreateResponse","text":"<pre><code>type TaskCreateResponse = RawTaskCreateResponse &amp; TaskMethods;\n</code></pre>"},{"location":"api/type-aliases/TaskGetAllOptions/","title":"TaskGetAllOptions","text":"<pre><code>type TaskGetAllOptions = RequestOptions &amp; PaginationOptions &amp; {\n  folderId?: number;\n};\n</code></pre> <p>Options for getting tasks across folders</p>"},{"location":"api/type-aliases/TaskGetAllOptions/#type-declaration","title":"Type Declaration","text":""},{"location":"api/type-aliases/TaskGetAllOptions/#folderid","title":"folderId?","text":"<pre><code>optional folderId: number;\n</code></pre> <p>Optional folder ID to filter tasks by folder</p>"},{"location":"api/type-aliases/TaskGetByIdOptions/","title":"TaskGetByIdOptions","text":"<pre><code>type TaskGetByIdOptions = BaseOptions;\n</code></pre> <p>Query options for getting a task by ID</p>"},{"location":"api/type-aliases/TaskGetResponse/","title":"TaskGetResponse","text":"<pre><code>type TaskGetResponse = RawTaskGetResponse &amp; TaskMethods;\n</code></pre>"},{"location":"api/type-aliases/TaskGetUsersOptions/","title":"TaskGetUsersOptions","text":"<pre><code>type TaskGetUsersOptions = RequestOptions &amp; PaginationOptions;\n</code></pre> <p>Options for getting users with task permissions</p>"},{"location":"api/type-aliases/UiPathSDKConfig/","title":"UiPathSDKConfig","text":"<pre><code>type UiPathSDKConfig = BaseConfig &amp; \n  | {\n  secret: string;\n  clientId?: never;\n  redirectUri?: never;\n  scope?: never;\n}\n  | {\n  secret?: never;\n} &amp; OAuthFields;\n</code></pre>"},{"location":"api/variables/APP_NAME/","title":"APP NAME","text":"<pre><code>const APP_NAME: \"ApplicationName\" = \"ApplicationName\";\n</code></pre>"},{"location":"api/variables/CLOUD_CLIENT_ID/","title":"CLOUD CLIENT ID","text":"<pre><code>const CLOUD_CLIENT_ID: \"CloudClientId\" = \"CloudClientId\";\n</code></pre>"},{"location":"api/variables/CLOUD_ORGANIZATION_NAME/","title":"CLOUD ORGANIZATION NAME","text":"<pre><code>const CLOUD_ORGANIZATION_NAME: \"CloudOrganizationName\" = \"CloudOrganizationName\";\n</code></pre>"},{"location":"api/variables/CLOUD_REDIRECT_URI/","title":"CLOUD REDIRECT URI","text":"<pre><code>const CLOUD_REDIRECT_URI: \"CloudRedirectUri\" = \"CloudRedirectUri\";\n</code></pre>"},{"location":"api/variables/CLOUD_ROLE_NAME/","title":"CLOUD ROLE NAME","text":"<pre><code>const CLOUD_ROLE_NAME: \"uipath-ts-sdk\" = \"uipath-ts-sdk\";\n</code></pre>"},{"location":"api/variables/CLOUD_TENANT_NAME/","title":"CLOUD TENANT NAME","text":"<pre><code>const CLOUD_TENANT_NAME: \"CloudTenantName\" = \"CloudTenantName\";\n</code></pre>"},{"location":"api/variables/CLOUD_URL/","title":"CLOUD URL","text":"<pre><code>const CLOUD_URL: \"CloudUrl\" = \"CloudUrl\";\n</code></pre>"},{"location":"api/variables/CONNECTION_STRING/","title":"CONNECTION STRING","text":"<pre><code>const CONNECTION_STRING: \"$CONNECTION_STRING\" = \"$CONNECTION_STRING\";\n</code></pre> <p>SDK Telemetry constants</p>"},{"location":"api/variables/DEFAULT_ITEMS_FIELD/","title":"DEFAULT ITEMS FIELD","text":"<pre><code>const DEFAULT_ITEMS_FIELD: \"value\" = 'value';\n</code></pre> <p>Default field name for items in a paginated response</p>"},{"location":"api/variables/DEFAULT_PAGE_SIZE/","title":"DEFAULT PAGE SIZE","text":"<pre><code>const DEFAULT_PAGE_SIZE: 50 = 50;\n</code></pre> <p>Default page size when jumpToPage is used without specifying pageSize</p>"},{"location":"api/variables/DEFAULT_TOTAL_COUNT_FIELD/","title":"DEFAULT TOTAL COUNT FIELD","text":"<pre><code>const DEFAULT_TOTAL_COUNT_FIELD: \"@odata.count\" = '@odata.count';\n</code></pre> <p>Default field name for total count in a paginated response</p>"},{"location":"api/variables/ErrorType/","title":"ErrorType","text":"<pre><code>const ErrorType: {\n  AUTHENTICATION: \"AuthenticationError\";\n  AUTHORIZATION: \"AuthorizationError\";\n  VALIDATION: \"ValidationError\";\n  NOT_FOUND: \"NotFoundError\";\n  RATE_LIMIT: \"RateLimitError\";\n  SERVER: \"ServerError\";\n  NETWORK: \"NetworkError\";\n};\n</code></pre> <p>Error type constants for consistent error identification</p>"},{"location":"api/variables/ErrorType/#type-declaration","title":"Type Declaration","text":""},{"location":"api/variables/ErrorType/#authentication","title":"AUTHENTICATION","text":"<pre><code>readonly AUTHENTICATION: \"AuthenticationError\" = 'AuthenticationError';\n</code></pre>"},{"location":"api/variables/ErrorType/#authorization","title":"AUTHORIZATION","text":"<pre><code>readonly AUTHORIZATION: \"AuthorizationError\" = 'AuthorizationError';\n</code></pre>"},{"location":"api/variables/ErrorType/#validation","title":"VALIDATION","text":"<pre><code>readonly VALIDATION: \"ValidationError\" = 'ValidationError';\n</code></pre>"},{"location":"api/variables/ErrorType/#not_found","title":"NOT_FOUND","text":"<pre><code>readonly NOT_FOUND: \"NotFoundError\" = 'NotFoundError';\n</code></pre>"},{"location":"api/variables/ErrorType/#rate_limit","title":"RATE_LIMIT","text":"<pre><code>readonly RATE_LIMIT: \"RateLimitError\" = 'RateLimitError';\n</code></pre>"},{"location":"api/variables/ErrorType/#server","title":"SERVER","text":"<pre><code>readonly SERVER: \"ServerError\" = 'ServerError';\n</code></pre>"},{"location":"api/variables/ErrorType/#network","title":"NETWORK","text":"<pre><code>readonly NETWORK: \"NetworkError\" = 'NetworkError';\n</code></pre>"},{"location":"api/variables/HttpStatus/","title":"HttpStatus","text":"<pre><code>const HttpStatus: {\n  BAD_REQUEST: 400;\n  UNAUTHORIZED: 401;\n  FORBIDDEN: 403;\n  NOT_FOUND: 404;\n  TOO_MANY_REQUESTS: 429;\n  INTERNAL_SERVER_ERROR: 500;\n  NOT_IMPLEMENTED: 501;\n  BAD_GATEWAY: 502;\n  SERVICE_UNAVAILABLE: 503;\n  GATEWAY_TIMEOUT: 504;\n};\n</code></pre> <p>HTTP status code constants for error handling</p>"},{"location":"api/variables/HttpStatus/#type-declaration","title":"Type Declaration","text":""},{"location":"api/variables/HttpStatus/#bad_request","title":"BAD_REQUEST","text":"<pre><code>readonly BAD_REQUEST: 400 = 400;\n</code></pre>"},{"location":"api/variables/HttpStatus/#unauthorized","title":"UNAUTHORIZED","text":"<pre><code>readonly UNAUTHORIZED: 401 = 401;\n</code></pre>"},{"location":"api/variables/HttpStatus/#forbidden","title":"FORBIDDEN","text":"<pre><code>readonly FORBIDDEN: 403 = 403;\n</code></pre>"},{"location":"api/variables/HttpStatus/#not_found","title":"NOT_FOUND","text":"<pre><code>readonly NOT_FOUND: 404 = 404;\n</code></pre>"},{"location":"api/variables/HttpStatus/#too_many_requests","title":"TOO_MANY_REQUESTS","text":"<pre><code>readonly TOO_MANY_REQUESTS: 429 = 429;\n</code></pre>"},{"location":"api/variables/HttpStatus/#internal_server_error","title":"INTERNAL_SERVER_ERROR","text":"<pre><code>readonly INTERNAL_SERVER_ERROR: 500 = 500;\n</code></pre>"},{"location":"api/variables/HttpStatus/#not_implemented","title":"NOT_IMPLEMENTED","text":"<pre><code>readonly NOT_IMPLEMENTED: 501 = 501;\n</code></pre>"},{"location":"api/variables/HttpStatus/#bad_gateway","title":"BAD_GATEWAY","text":"<pre><code>readonly BAD_GATEWAY: 502 = 502;\n</code></pre>"},{"location":"api/variables/HttpStatus/#service_unavailable","title":"SERVICE_UNAVAILABLE","text":"<pre><code>readonly SERVICE_UNAVAILABLE: 503 = 503;\n</code></pre>"},{"location":"api/variables/HttpStatus/#gateway_timeout","title":"GATEWAY_TIMEOUT","text":"<pre><code>readonly GATEWAY_TIMEOUT: 504 = 504;\n</code></pre>"},{"location":"api/variables/MAX_PAGE_SIZE/","title":"MAX PAGE SIZE","text":"<pre><code>const MAX_PAGE_SIZE: 1000 = 1000;\n</code></pre> <p>Maximum number of items that can be requested in a single page</p>"},{"location":"api/variables/SDK_LOGGER_NAME/","title":"SDK LOGGER NAME","text":"<pre><code>const SDK_LOGGER_NAME: \"uipath-ts-sdk-telemetry\" = \"uipath-ts-sdk-telemetry\";\n</code></pre>"},{"location":"api/variables/SDK_RUN_EVENT/","title":"SDK RUN EVENT","text":"<pre><code>const SDK_RUN_EVENT: \"Sdk.Run\" = \"Sdk.Run\";\n</code></pre>"},{"location":"api/variables/SDK_SERVICE_NAME/","title":"SDK SERVICE NAME","text":"<pre><code>const SDK_SERVICE_NAME: \"UiPath.TypeScript.Sdk\" = \"UiPath.TypeScript.Sdk\";\n</code></pre>"},{"location":"api/variables/SDK_VERSION/","title":"SDK VERSION","text":"<pre><code>const SDK_VERSION: \"$SDK_VERSION\" = \"$SDK_VERSION\";\n</code></pre>"},{"location":"api/variables/SERVICE/","title":"SERVICE","text":"<pre><code>const SERVICE: \"Service\" = \"Service\";\n</code></pre>"},{"location":"api/variables/UNKNOWN/","title":"UNKNOWN","text":"<pre><code>const UNKNOWN: \"\" = \"\";\n</code></pre>"},{"location":"api/variables/VERSION/","title":"VERSION","text":"<pre><code>const VERSION: \"Version\" = \"Version\";\n</code></pre>"},{"location":"api/variables/telemetryClient/","title":"telemetryClient","text":"<pre><code>const telemetryClient: TelemetryClient;\n</code></pre>"}]}